{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/10/30/hello-world/","title":"Hello world","text":"<p>\u521d\u8bd5Mkdocs, Hello World!</p>"},{"location":"hardware/async_sram.en/","title":"Asynchronous SRAM","text":""},{"location":"hardware/async_sram.en/#features","title":"Features","text":"<p>Features of asynchronous SRAM:</p> <ol> <li>Simple interface: the controller gives the address and control signals, and the data is available after a fixed delay, no calibration is required</li> <li>MB level RAM available: single chip can provide KB to MB level RAM, larger capacity can be obtained by connecting multiple SRAMs in parallel</li> <li>High-speed asynchronous SRAM with latency in the 10ns range</li> </ol>"},{"location":"hardware/async_sram.en/#structure","title":"Structure","text":"<p>The asynchronous SRAM holds data internally as an array. For example, a 2048K x 16 asynchronous SRAM has 2048K rows, each row holds 16 bits of data, for a total of $2048\\mathrm{K} * 16\\mathrm{b} = 32 \\mathrm{Mb}$ of data.</p> <p>The structure of the asynchronous SRAM is shown in Figure 1. When the controller accesses the asynchronous SRAM, it gives a row address and the asynchronous SRAM reads a row of data. Since there are 2048K rows, the number of bits needed for the address is $\\log_2(2048\\mathrm{K})=21$, which corresponds to <code>A0-A20</code> in the figure below. The address is passed to <code>DECODER</code>, which takes the data to be accessed from the array and puts it in <code>COLUMN IO</code>.</p> <p> </p> Asynchronous SRAM Diagram (Source ISSI Datasheet) <p>For read operations, the memory controller provides the address on <code>A0-A20</code>, reads the data through <code>DECODER</code> from <code>2048K x 16 MEMORY ARRAY</code> to <code>COLUMN IO</code>, and the control logic <code>CONTROL CIRCUIT</code> outputs the data to <code>I/O DATA CIRCUIT</code> according to the read operation (<code>WE#=1, OE#=0</code>).</p> <p>For write operations, the memory controller provides the address on <code>A0-A20</code>, the data to be written on <code>I/O</code>, and the byte enable on <code>UB#/LB#</code>. The asynchronous SRAM reads the existing data in the array from <code>MEMORY ARRAY</code>, combines <code>UB#/LB#</code> with <code>I/O</code>, calculates the new value, and writes it to memory. The <code>UB#</code> and <code>LB#</code> are byte enables (active-low) for high 8 bits and low 8 bits respectively. If the old data is <code>1234</code> and the value to be written by the memory controller is <code>5678</code>, then the value in memory is updated to</p> UB# LB# Result Description 0 0 5678 New Value 1 0 1278 Only low byte written 0 1 5634 Only high byte written 1 1 1234 Unchanged"},{"location":"hardware/async_sram.en/#interface","title":"Interface","text":"<p>Asynchronous SRAM exposes a single-port RAM interface that can only read or write at a time. A typical asynchronous SRAM includes the following signals:</p> <ol> <li>Address signal A: the bit width is determined by the depth, for example, 2048K depth corresponds to 21-bit address</li> <li>Data signal I/O: the bit width is equal to the width of SRAM, e.g. 8 or 16 bits</li> <li>Chip select CS# (or CE#): active-low, works when CS# is equal to 0</li> <li>Output enable OE#: active-low, SRAM output when OE# equals 0, SRAM input when OE# equals 1</li> <li>Write enable WE#: active-low, WE# equals 0 for write, WE# equals 1 for read</li> <li>Byte enable UB#/LB#: active-low, corresponding to two bytes, update when equal to 0, unchanged when equal to 1</li> </ol> <p>Some asynchronous SRAMs are 8 bits wide, where there is no byte enable signal.</p>"},{"location":"hardware/async_sram.en/#concatenation","title":"Concatenation","text":"<p>If you want a larger asynchronous SRAM, you can concatenate multiple asynchronous SRAMs. Concatenation can be done in two ways:</p> <p>One is to concatenate in width, e.g. concatenate two asynchronous SRAMs of the same depth and width of 16 to get an asynchronous SRAM of width 32:</p> <p> </p> Concatenate asynchronous SRAM in width <p>The address signal (A) and control signals (OE#, WE#, CE#) are connected to all asynchronous SRAMs, while the data signal (DQ) and byte enable signals (WE0-3#) are connected to different asynchronous SRAMs to form twice the data width.</p> <p>The other is to concatenate in the depth, keeping the width the same, to increase the storage capacity. For example, concatenate two asynchronous SRAMs to get an asynchronous SRAM with doubled depth. For each access, only one of the asynchronous SRAMs will be accessed, distinguished by the address.</p> <p>For example, to concatenate two asynchronous SRAMs with 21-bit addresses to get a asynchronous SRAM with 22-bit addresses, if the highest bit of the address is used to select which asynchronous SRAM to access, then you can set: <code>CS0#=CS# | A[21], CS1#=CS# | ~A[21]</code>, and the rest of the signals are connected to all the asynchronous SRAMs. When <code>CS#=1</code>, the output pins are in the high resistance state, so multiple chips can share a single data bus and only need to ensure that only one chip on the bus is outputting at the same time:</p> <p> </p> Concatenate asynchronous SRAM in depth <p>In practice, it is possible to mix the two methods.</p>"},{"location":"hardware/async_sram.en/#timing","title":"Timing","text":""},{"location":"hardware/async_sram.en/#read-timing","title":"Read Timing","text":"<p>The asynchronous SRAM is called asynchronous because it has no clock signal. In this case, the read timing is reflected as the delay between the controller giving the address and the asynchronous SRAM giving the data. Take IS61/64WV204816ALL Asynchronous SRAM chip as an example, the read timing is shown in the following figure:</p> <p> </p> Read Timing of Asynchronous SRAM (Source ISSI Datasheet) <ul> <li>$t_{RC}$: read cycle time, the address remains unchanged during this time, Min 10ns</li> <li>$t_{AA}$: address access time, the data is given after the address change in $t_{AA}$ time, Max 10ns</li> <li>$t_{OHA}$: output hold time, the data remains unchanged during this time, Min 2.5ns</li> </ul> <p>The output data is uncertain during the period between the end of $t_{OHA}$ and the end of $t_{AA}$.</p>"},{"location":"hardware/async_sram.en/#write-timing","title":"Write timing","text":"<p>The write timing is more complicated, and there can be multiple write conditions, one of which is listed below:</p> <p> </p> Write timing of asynchronous SRAM (Source ISSI Datasheet) <p>The core of the write timing is the rising edge of <code>WE#</code>. Compared with this time point, there are the following important timing requirements:</p> <ul> <li>$t_{WC}$: The address needs to remain unchanged for $t_{WC}$, Min 10ns</li> <li>$t_{AW}$: The setup time of the address relative to the rising edge of <code>WE#</code>, Min 8ns</li> <li>$t_{HA}$: Hold time of the address relative to the rising edge of <code>WE#</code>, Min 0ns</li> <li>$t_{PWE}$: The time when <code>WE#</code> maintains 0, Min 8ns</li> <li>$t_{SD}$: Setup time of data relative to the rising edge of <code>WE#</code>, Min 6ns</li> <li>$t_{HD}$: Hold time of data relative to the rising edge of <code>WE#</code>, Min 0ns</li> <li>$t_{SA}$: Setup time of the address relative to the falling edge of <code>WE#</code>, Min 0ns</li> </ul>"},{"location":"hardware/async_sram.en/#sram-cell","title":"SRAM Cell","text":"<p>A typical SRAM Cell consists of 6 transistors, and the internal structure is as follows:</p> <p> </p> Internal Structure of 6T SRAM Cell (Source Berkeley EECS 151/251A Spring 2019) <p>Among them, M1 and M2 form an inverter, M3 and M4 form another inverter, and two inverters form the following equivalent circuit:</p> <p> </p> Circuit in SRAM Cell (Source Berkeley EECS 151/251A Spring 2019) <p>This is a latch that can stably store 1 bit of data. The two transistors M5 and M6 are used for reading and writing. When WL is enabled, M5 and M6 are turned on, BL and Q are connected, and BLbar and Qbar are connected. At this point, you can read and write through BL and BLbar.</p>"},{"location":"hardware/async_sram.en/#acknowledgement","title":"Acknowledgement","text":"<p>The English version is kindly translated with the help of DeepL Translator and Google Translate.</p>"},{"location":"hardware/async_sram.zh/","title":"\u5f02\u6b65 SRAM","text":""},{"location":"hardware/async_sram.zh/#_1","title":"\u7279\u70b9","text":"<p>\u5f02\u6b65 SRAM \u7684\u7279\u70b9\uff1a</p> <ol> <li>\u63a5\u53e3\u7b80\u5355\uff1a\u63a7\u5236\u5668\u7ed9\u51fa\u5730\u5740\u548c\u63a7\u5236\u4fe1\u53f7\uff0c\u7ecf\u8fc7\u56fa\u5b9a\u5ef6\u8fdf\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u6570\u636e\uff0c\u4e0d\u9700\u8981\u6821\u51c6</li> <li>\u63d0\u4f9b MB \u7ea7\u522b\u7684 RAM\uff1a\u5355\u82af\u7247\u53ef\u4ee5\u63d0\u4f9b KB \u5230 MB \u7ea7\u522b\u7684 RAM\uff0c\u901a\u8fc7\u5e76\u8054\u591a\u4e2a SRAM\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u5927\u7684\u5bb9\u91cf</li> <li>\u9ad8\u901f\u5f02\u6b65 SRAM \u5ef6\u8fdf\u5728 10ns \u7684\u7ea7\u522b</li> </ol>"},{"location":"hardware/async_sram.zh/#_2","title":"\u7ed3\u6784","text":"<p>\u5f02\u6b65 SRAM \u5185\u90e8\u4ee5\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e\u3002\u4f8b\u5982\u4e00\u4e2a 2048K x 16 \u7684\u5f02\u6b65 SRAM\uff0c\u6709 2048K \u4e2a\u884c\uff0c\u6bcf\u884c\u4fdd\u5b58\u4e86 16 \u4f4d\u7684\u6570\u636e\uff0c\u603b\u5171\u4fdd\u5b58\u4e86 $2048\\mathrm{K} * 16\\mathrm{b} = 32 \\mathrm{Mb}$ \u7684\u6570\u636e\u3002</p> <p>\u5f02\u6b65 SRAM \u7684\u7ed3\u6784\u89c1\u56fe 1\u3002\u63a7\u5236\u5668\u5728\u8bbf\u95ee\u5f02\u6b65 SRAM \u7684\u65f6\u5019\uff0c\u7ed9\u51fa\u4e00\u4e2a\u884c\u7684\u5730\u5740\uff0c\u5f02\u6b65 SRAM \u5c31\u4f1a\u8bfb\u53d6\u4e00\u884c\u7684\u6570\u636e\u3002\u7531\u4e8e\u4e00\u5171\u6709 2048K \u4e2a\u884c\uff0c\u6240\u4ee5\u5730\u5740\u9700\u8981\u7684\u4f4d\u6570\u662f $\\log_2(2048\\mathrm{K})=21$\uff0c\u5bf9\u5e94\u4e0b\u56fe\u7684 <code>A0-A20</code>\u3002\u5730\u5740\u901a\u8fc7 <code>DECODER</code>\uff0c\u4ece\u6570\u7ec4\u4e2d\u53d6\u51fa\u8981\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u653e\u5230 <code>COLUMN IO</code> \u4e2d\u3002</p> <p> </p> \u5f02\u6b65 SRAM \u7684\u7ed3\u6784\u6846\u56fe\uff08\u56fe\u6e90 ISSI Datasheet\uff09 <p>\u5bf9\u4e8e\u8bfb\u64cd\u4f5c\uff0c\u5185\u5b58\u63a7\u5236\u5668\u5728 <code>A0-A20</code> \u4e0a\u63d0\u4f9b\u5730\u5740\uff0c\u7ecf\u8fc7 <code>DECODER</code> \u4ece <code>2048K x 16 MEMORY ARRAY</code> \u4e2d\u8bfb\u53d6\u6570\u636e\u5230 <code>COLUMN IO</code>\uff0c\u63a7\u5236\u903b\u8f91 <code>CONTROL CIRCUIT</code> \u6839\u636e\u8bfb\u64cd\u4f5c\uff08<code>WE#=1, OE#=0</code>\uff09\uff0c\u628a\u6570\u636e\u8f93\u51fa\u5230 <code>I/O DATA CIRCUIT</code>\u3002</p> <p>\u5bf9\u4e8e\u5199\u64cd\u4f5c\uff0c\u5185\u5b58\u63a7\u5236\u5668\u5728 <code>A0-A20</code> \u4e0a\u63d0\u4f9b\u5730\u5740\uff0c\u5728 <code>I/O</code> \u4e0a\u63d0\u4f9b\u8981\u5199\u5165\u7684\u6570\u636e\uff0c\u5728 <code>UB#/LB#</code> \u4e0a\u63d0\u4f9b\u5b57\u8282\u4f7f\u80fd\u3002\u5f02\u6b65 SRAM \u4ece <code>MEMORY ARRAY</code> \u4e2d\u8bfb\u53d6\u6570\u7ec4\u4e2d\u73b0\u6709\u7684\u6570\u636e\uff0c\u7ed3\u5408 <code>UB#/LB#</code> \u4e0e <code>I/O</code>\uff0c\u8ba1\u7b97\u51fa\u65b0\u7684\u503c\uff0c\u518d\u5199\u5165\u5185\u5b58\u3002\u5176\u4e2d <code>UB#</code> \u548c <code>LB#</code> \u5206\u522b\u662f\u9ad8 8 \u4f4d\u548c\u4f4e 8 \u4f4d\u7684\u5b57\u8282\u4f7f\u80fd\uff08\u4f4e\u6709\u6548\uff09\u3002\u5982\u679c\u65e7\u6570\u636e\u662f <code>1234</code>\uff0c\u5185\u5b58\u63a7\u5236\u5668\u8981\u5199\u5165\u7684\u503c\u662f <code>5678</code>\uff0c\u90a3\u4e48\u5185\u5b58\u4e2d\u7684\u503c\u66f4\u65b0\u4e3a\uff1a</p> UB# LB# \u7ed3\u679c \u89e3\u91ca 0 0 5678 \u5168\u90e8\u91c7\u7528\u65b0\u503c 1 0 1278 \u4ec5\u5199\u5165\u4f4e\u5b57\u8282 0 1 5634 \u4ec5\u5199\u5165\u9ad8\u5b57\u8282 1 1 1234 \u5168\u90e8\u91c7\u7528\u65e7\u503c"},{"location":"hardware/async_sram.zh/#_3","title":"\u63a5\u53e3","text":"<p>\u5f02\u6b65 SRAM \u66b4\u9732\u4e86\u4e00\u4e2a\u5355\u53e3 RAM \u63a5\u53e3\uff0c\u540c\u65f6\u53ea\u80fd\u8fdb\u884c\u8bfb\u6216\u8005\u5199\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u3002\u5178\u578b\u7684\u5f02\u6b65 SRAM \u5305\u62ec\u5982\u4e0b\u7684\u4fe1\u53f7\uff1a</p> <ol> <li>\u5730\u5740\u4fe1\u53f7 A\uff1a\u4f4d\u6570\u6839\u636e\u6df1\u5ea6\u51b3\u5b9a\uff0c\u4f8b\u5982 2048K \u7684\u6df1\u5ea6\u5bf9\u5e94 21 \u4f4d\u5730\u5740</li> <li>\u6570\u636e\u4fe1\u53f7 I/O\uff1a\u4f4d\u6570\u7b49\u4e8e\u5bbd\u5ea6\uff0c\u4f8b\u5982 8 \u6216 16 \u4f4d</li> <li>\u7247\u9009\u4fe1\u53f7 CS#\uff08\u6216\u8005\u53eb CE#\uff09\uff1a\u4f4e\u6709\u6548\uff0cCS# \u7b49\u4e8e 0 \u65f6\u5de5\u4f5c</li> <li>\u8f93\u51fa\u4f7f\u80fd\u4fe1\u53f7 OE#\uff1a\u4f4e\u6709\u6548\uff0cOE# \u7b49\u4e8e 0 \u65f6 SRAM \u8f93\u51fa\uff0cOE# \u7b49\u4e8e 1 \u65f6 SRAM \u8f93\u5165</li> <li>\u5199\u4f7f\u80fd\u4fe1\u53f7 WE#\uff1a\u4f4e\u6709\u6548\uff0cWE# \u7b49\u4e8e 0 \u65f6\u5199\uff0cWE# \u7b49\u4e8e 1 \u65f6\u8bfb</li> <li>\u5b57\u8282\u4f7f\u80fd\u4fe1\u53f7 UB#/LB#\uff1a\u4f4e\u6709\u6548\uff0c\u5bf9\u5e94\u4e24\u4e2a\u5b57\u8282\uff0c\u7b49\u4e8e 0 \u65f6\u66f4\u65b0\uff0c\u7b49\u4e8e 1 \u65f6\u4e0d\u53d8</li> </ol> <p>\u4e00\u4e9b\u5f02\u6b65 SRAM \u7684\u5bbd\u5ea6\u662f 8 \u4f4d\uff0c\u6b64\u65f6\u6ca1\u6709\u5b57\u8282\u4f7f\u80fd\u4fe1\u53f7\u3002</p>"},{"location":"hardware/async_sram.zh/#_4","title":"\u62fc\u63a5","text":"<p>\u5982\u679c\u60f3\u8981\u66f4\u5927\u5bb9\u91cf\u7684\u5f02\u6b65 SRAM\uff0c\u53ef\u4ee5\u62fc\u63a5\u591a\u4e2a\u5f02\u6b65 SRAM\u3002\u62fc\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u91c7\u7528\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p>\u4e00\u79cd\u662f\u5728\u5bbd\u5ea6\u4e0a\u62fc\u63a5\uff0c\u4f8b\u5982\u62fc\u63a5\u4e24\u4e2a\u76f8\u540c\u6df1\u5ea6\u3001\u5bbd\u5ea6\u4e3a 16 \u7684\u5f02\u6b65 SRAM\uff0c\u5f97\u5230\u4e00\u4e2a\u5bbd\u5ea6\u4e3a 32 \u7684\u5f02\u6b65 SRAM\uff1a</p> <p> </p> \u5728\u5bbd\u5ea6\u4e0a\u62fc\u63a5\u5f02\u6b65 SRAM <p>\u5730\u5740\u4fe1\u53f7\uff08A\uff09\u548c\u63a7\u5236\u4fe1\u53f7\uff08OE#\u3001WE#\u3001CE#\uff09\u8fde\u63a5\u5230\u6240\u6709\u5f02\u6b65 SRAM\uff0c\u6570\u636e\u4fe1\u53f7\uff08DQ\uff09\u548c\u5b57\u8282\u4f7f\u80fd\u4fe1\u53f7\uff08WE0-3#\uff09\u5219\u8fde\u63a5\u5230\u4e0d\u540c\u7684\u5f02\u6b65 SRAM\uff0c\u5f62\u6210\u4e24\u500d\u7684\u6570\u636e\u5bbd\u5ea6\u3002</p> <p>\u53e6\u4e00\u79cd\u662f\u5728\u6df1\u5ea6\u4e0a\u62fc\u63a5\uff0c\u4fdd\u6301\u5bbd\u5ea6\u4e0d\u53d8\uff0c\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\u3002\u4f8b\u5982\u62fc\u63a5\u4e24\u4e2a\u5f02\u6b65 SRAM\uff0c\u5f97\u5230\u4e00\u4e2a\u6df1\u5ea6\u7ffb\u500d\u7684\u5f02\u6b65 SRAM\u3002\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u53ea\u4f1a\u8bbf\u95ee\u5176\u4e2d\u4e00\u4e2a\u5f02\u6b65 SRAM\uff0c\u901a\u8fc7\u5730\u5740\u6765\u533a\u5206\u3002</p> <p>\u4f8b\u5982\u8981\u62fc\u63a5\u4e24\u4e2a 21 \u4f4d\u5730\u5740\u7684\u5f02\u6b65 SRAM\uff0c\u5f97\u5230\u4e00\u4e2a 22 \u4f4d\u5730\u5740\u7684\u5f02\u6b65 SRAM\uff0c\u5982\u679c\u7528\u5730\u5740\u7684\u6700\u9ad8\u4f4d\u6765\u9009\u62e9\u8bbf\u95ee\u54ea\u4e2a\u5f02\u6b65 SRAM\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u5b9a\uff1a<code>CS0#=CS# | A[21], CS1#=CS# | ~A[21]</code>\uff0c\u5176\u4f59\u7684\u4fe1\u53f7\u90fd\u8fde\u63a5\u5230\u6240\u6709\u7684\u5f02\u6b65 SRAM\u3002\u7531\u4e8e\u5f02\u6b65 SRAM \u5728 <code>CS#=1</code> \u7684\u65f6\u5019\uff0c\u8f93\u51fa\u5f15\u811a\u5904\u4e8e\u9ad8\u963b\u6001\u72b6\u6001\uff0c\u6240\u4ee5\u591a\u4e2a\u82af\u7247\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u6570\u636e\u603b\u7ebf\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u603b\u7ebf\u4e0a\u540c\u65f6\u53ea\u6709\u4e00\u4e2a\u82af\u7247\u5728\u8f93\u51fa\uff1a</p> <p> </p> \u5728\u6df1\u5ea6\u4e0a\u62fc\u63a5\u5f02\u6b65 SRAM <p>\u5b9e\u8df5\u4e2d\uff0c\u53ef\u4ee5\u6df7\u5408\u4e24\u79cd\u62fc\u63a5\u65b9\u6cd5\u3002</p>"},{"location":"hardware/async_sram.zh/#_5","title":"\u65f6\u5e8f","text":""},{"location":"hardware/async_sram.zh/#_6","title":"\u8bfb\u65f6\u5e8f","text":"<p>\u5f02\u6b65 SRAM \u4e4b\u6240\u4ee5\u53eb\u505a\u5f02\u6b65\uff0c\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u65f6\u949f\u4fe1\u53f7\u3002\u6b64\u65f6\u8bfb\u65f6\u5e8f\u4f53\u73b0\u4e3a\uff0c\u63a7\u5236\u5668\u7ed9\u51fa\u5730\u5740\uff0c\u5230\u5f02\u6b65 SRAM \u7ed9\u51fa\u6570\u636e\u7684\u5ef6\u8fdf\u3002\u4ee5 IS61/64WV204816ALL \u5f02\u6b65 SRAM \u82af\u7247 \u4e3a\u4f8b\uff0c\u8bfb\u65f6\u5e8f\u89c1\u4e0b\u56fe\uff1a</p> <p> </p> \u5f02\u6b65 SRAM \u8bfb\u65f6\u5e8f\uff08\u56fe\u6e90 ISSI Datasheet\uff09 <ul> <li>$t_{RC}$\uff1a\u8bfb\u5468\u671f\u65f6\u95f4\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5185\u5730\u5740\u4e0d\u53d8\uff0cMin 10ns</li> <li>$t_{AA}$\uff1a\u5730\u5740\u8bbf\u95ee\u65f6\u95f4\uff0c\u6570\u636e\u5728\u5730\u5740\u6539\u53d8\u540e $t_{AA}$ \u65f6\u95f4\u7ed9\u51fa\uff0cMax 10ns</li> <li>$t_{OHA}$\uff1aOutput Hold \u65f6\u95f4\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5185\u6570\u636e\u4e0d\u53d8\uff0cMin 2.5ns</li> </ul> <p>\u5728 $t_{OHA}$ \u7ed3\u675f\u5230 $t_{AA}$ \u7ed3\u675f\u4e2d\u95f4\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0c\u8f93\u51fa\u6570\u636e\u662f\u4e0d\u786e\u5b9a\u7684\u3002</p>"},{"location":"hardware/async_sram.zh/#_7","title":"\u5199\u65f6\u5e8f","text":"<p>\u5199\u65f6\u5e8f\u5219\u6bd4\u8f83\u590d\u6742\uff0c\u5e76\u4e14\u53ef\u4ee5\u6709\u591a\u79cd\u5199\u5165\u7684\u6761\u4ef6\uff0c\u4e0b\u9762\u5217\u51fa\u5176\u4e2d\u4e00\u79cd\uff1a</p> <p> </p> \u5f02\u6b65 SRAM \u5199\u65f6\u5e8f\uff08\u56fe\u6e90 ISSI Datasheet\uff09 <p>\u5199\u65f6\u5e8f\u4e2d\u6bd4\u8f83\u6838\u5fc3\u7684\u662f <code>WE#</code> \u7684\u4e0a\u5347\u6cbf\uff0c\u76f8\u5bf9\u8fd9\u4e2a\u65f6\u95f4\u70b9\uff0c\u6709\u5982\u4e0b\u6bd4\u8f83\u91cd\u8981\u65f6\u5e8f\u8981\u6c42\uff1a</p> <ul> <li>$t_{WC}$\uff1a\u5730\u5740\u9700\u8981\u4fdd\u6301 $t_{WC}$ \u7684\u65f6\u95f4\u4e0d\u53d8\uff0cMin 10ns</li> <li>$t_{AW}$\uff1a\u5730\u5740\u76f8\u5bf9 <code>WE#</code> \u7684\u4e0a\u5347\u6cbf\u7684 Setup \u65f6\u95f4\uff0cMin 8ns</li> <li>$t_{HA}$\uff1a\u5730\u5740\u76f8\u5bf9 <code>WE#</code> \u7684\u4e0a\u5347\u6cbf\u7684 Hold \u65f6\u95f4\uff0cMin 0ns</li> <li>$t_{PWE}$\uff1a<code>WE#</code> \u7ef4\u6301 0 \u7684\u65f6\u95f4\uff0cMin 8ns</li> <li>$t_{SD}$\uff1a\u6570\u636e\u76f8\u5bf9 <code>WE#</code> \u7684\u4e0a\u5347\u6cbf\u7684 Setup \u65f6\u95f4\uff0cMin 6ns</li> <li>$t_{HD}$\uff1a\u6570\u636e\u76f8\u5bf9 <code>WE#</code> \u7684\u4e0a\u5347\u6cbf\u7684 Hold \u65f6\u95f4\uff0cMin 0ns</li> <li>$t_{SA}$\uff1a\u5730\u5740\u76f8\u5bf9 <code>WE#</code> \u7684\u4e0b\u964d\u6cbf\u7684 Setup \u65f6\u95f4\uff0cMin 0ns</li> </ul>"},{"location":"hardware/async_sram.zh/#sram-cell","title":"SRAM Cell","text":"<p>\u5178\u578b\u7684 SRAM Cell \u7531 6 \u4e2a\u6676\u4f53\u7ba1\u7ec4\u6210\uff0c\u5185\u90e8\u6784\u9020\u5982\u4e0b\u56fe\uff1a</p> <p> </p> 6T SRAM Cell \u5185\u90e8\u6784\u9020\uff08\u56fe\u6e90 Berkeley EECS 151/251A Spring 2019\uff09 <p>\u5176\u4e2d M1 \u548c M2 \u7ec4\u6210\u4e00\u4e2a Inverter\uff0cM3 \u548c M4 \u7ec4\u6210\u4e00\u4e2a Inverter\uff0c\u4e24\u4e2a Inverter \u7ec4\u6210\u4e0b\u9762\u7684\u7b49\u4ef7\u7535\u8def\uff1a</p> <p> </p> SRAM Cell \u7684\u7535\u8def\uff08\u56fe\u6e90 Berkeley EECS 151/251A Spring 2019\uff09 <p>\u8fd9\u5c31\u662f\u4e00\u4e2a latch\uff0c\u53ef\u4ee5\u7a33\u5b9a\u5730\u4fdd\u5b58 1 bit \u7684\u6570\u636e\u3002M5 \u548c M6 \u4e24\u4e2a\u6676\u4f53\u7ba1\u662f\u7528\u6765\u5b9e\u73b0\u8bfb\u548c\u5199\u7684\u3002\u5f53 WL \u4f7f\u80fd\u7684\u65f6\u5019\uff0cM5 \u548c M6 \u5bfc\u901a\uff0c\u6b64\u65f6 BL \u548c Q \u5bfc\u901a\uff0cBLbar \u548c Qbar \u5bfc\u901a\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u901a\u8fc7 BL \u548c BLbar \u8fdb\u884c\u8bfb\u5199\u3002</p>"},{"location":"hardware/bus_protocol/","title":"\u603b\u7ebf\u534f\u8bae","text":""},{"location":"hardware/bus_protocol/#_2","title":"\u529f\u80fd","text":"<p>\u603b\u7ebf\u901a\u5e38\u7528\u4e8e\u8fde\u63a5 CPU \u548c\u5916\u8bbe\uff08\u5305\u62ec\u5185\u5b58\uff09\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u517c\u5bb9\u6027\u548c\u53ef\u590d\u7528\u6027\uff0c\u80fd\u5426\u8bbe\u8ba1\u4e00\u4e2a\u7edf\u4e00\u7684\u534f\u8bae\uff0c\u5176\u4e2d CPU \u5b9e\u73b0\u7684\u662f\u53d1\u8d77\u8bf7\u6c42\u7684\u4e00\u65b9\uff08\u53c8\u79f0\u4e3a master\uff09\uff0c\u5916\u8bbe\u5b9e\u73b0\u7684\u662f\u63a5\u6536\u8bf7\u6c42\u7684\u4e00\u65b9\uff08\u53c8\u79f0\u4e3a slave\uff09\uff0c\u90a3\u4e48\u5982\u679c\u8981\u6dfb\u52a0\u5916\u8bbe\u3001\u6216\u8005\u66ff\u6362 CPU \u5b9e\u73b0\uff0c\u90fd\u4f1a\u53d8\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u51cf\u5c11\u4e86\u8bb8\u591a\u9002\u914d\u7684\u5de5\u4f5c\u91cf\u3002</p> <p>\u4e00\u4e2a\u603b\u7ebf\u534f\u8bae\u9700\u8981\u5305\u62ec\u54ea\u4e9b\u5185\u5bb9\uff1f\u5bf9\u4e8e CPU \u6765\u8bf4\uff0c\u7a0b\u5e8f\u4f1a\u8bfb\u5199\u5185\u5b58\uff0c\u8bfb\u5199\u5185\u5b58\u5c31\u9700\u8981\u5c06\u4ee5\u4e0b\u51e0\u4e2a\u4fe1\u53f7\u4f20\u8f93\u5230\u5185\u5b58\uff1a</p> <ol> <li>\u5730\u5740\uff08<code>addr</code>\uff09\uff1a\u4f8b\u5982 32 \u4f4d\u5730\u5740</li> <li>\u6570\u636e\uff08<code>w_data</code> \u548c <code>r_data</code>\uff09\uff1a\u5206\u522b\u662f\u5199\u6570\u636e\u548c\u8bfb\u6570\u636e\uff0c\u5bbd\u5ea6\u901a\u5e38\u4e3a 32 \u4f4d\u6216 64 \u4f4d\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u53ef\u4ee5\u4f20\u8f93\u7684\u6570\u636e\u91cf</li> <li>\u8bfb\u8fd8\u662f\u5199\uff08<code>we</code>\uff09\uff1a\u9ad8\u8868\u793a\u5199\uff0c\u4f4e\u8868\u793a\u8bfb</li> <li>\u5b57\u8282\u6709\u6548\uff08<code>be</code>\uff09\uff1a\u4f8b\u5982\u4e3a\u4e86\u5b9e\u73b0\u5355\u5b57\u8282\u5199\uff0c\u867d\u7136 <code>w_data</code> \u53ef\u80fd\u662f 32 \u4f4d\u5bbd\uff0c\u4f46\u662f\u5b9e\u9645\u5199\u5165\u7684\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282</li> </ol> <p>\u9664\u4e86\u8bf7\u6c42\u7684\u5185\u5bb9\u4ee5\u5916\uff0c\u4e3a\u4e86\u8868\u793a CPU \u60f3\u8981\u53d1\u9001\u8bf7\u6c42\uff0c\u8fd8\u9700\u8981\u6dfb\u52a0 <code>valid</code> \u4fe1\u53f7\uff1a\u9ad8\u8868\u793a\u53d1\u9001\u8bf7\u6c42\uff0c\u4f4e\u8868\u793a\u4e0d\u53d1\u9001\u8bf7\u6c42\u3002\u5f88\u591a\u65f6\u5019\uff0c\u5916\u8bbe\u7684\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u53ef\u80fd\u65e0\u6cd5\u4fdd\u8bc1\u6bcf\u4e2a\u5468\u671f\u90fd\u53ef\u4ee5\u5904\u7406\u8bf7\u6c42\uff0c\u56e0\u6b64\u5916\u8bbe\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a <code>ready</code> \u4fe1\u53f7\uff1a\u5f53 <code>valid=1 &amp;&amp; ready=1</code> \u7684\u65f6\u5019\uff0c\u53d1\u9001\u5e76\u5904\u7406\u8bf7\u6c42\uff1b\u5f53 <code>valid=1 &amp;&amp; ready=0</code> \u7684\u65f6\u5019\uff0c\u8868\u793a\u5916\u8bbe\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u6b64\u65f6 CPU \u9700\u8981\u4e00\u76f4\u4fdd\u6301 <code>valid=1</code> \u4e0d\u53d8\uff0c\u7b49\u5230\u5916\u8bbe\u51c6\u5907\u597d\u540e\uff0c<code>valid=1 &amp;&amp; ready=1</code> \u8bf7\u6c42\u751f\u6548\u3002</p>"},{"location":"hardware/bus_protocol/#_3","title":"\u7b80\u6613\u603b\u7ebf\u534f\u8bae","text":"<p>\u7ed3\u5408\u4e0a\u6587\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u6613\u603b\u7ebf\u534f\u8bae\uff0c\u5206\u522b\u5f97\u5230 master \u548c slave \u7aef\u7684\u4fe1\u53f7\u5217\u8868\u3002\u7ea6\u5b9a\u5728\u547d\u540d\u7684\u65f6\u5019\u7528 <code>_o</code> \u8868\u793a\u8f93\u51fa\u3001<code>_i</code> \u8868\u793a\u8f93\u5165\uff0c\u90a3\u4e48 master \u7aef\uff08CPU \u7aef\uff09\u7684\u4fe1\u53f7\uff1a</p> <ol> <li><code>clock_i</code>\uff1a\u65f6\u949f\u8f93\u5165</li> <li><code>valid_o</code>\uff1a\u9ad8\u8868\u793a master \u60f3\u8981\u53d1\u9001\u8bf7\u6c42</li> <li><code>ready_i</code>\uff1a\u9ad8\u8868\u793a slave \u51c6\u5907\u597d\u5904\u7406\u8bf7\u6c42</li> <li><code>addr_o</code>\uff1amaster \u60f3\u8981\u8bfb\u5199\u7684\u5730\u5740</li> <li><code>we_o</code>\uff1amaster \u60f3\u8981\u8bfb\u8fd8\u662f\u5199</li> <li><code>data_o</code>\uff1amaster \u60f3\u8981\u5199\u5165\u7684\u6570\u636e</li> <li><code>be_o</code>\uff1amaster \u8bfb\u5199\u7684\u5b57\u8282\u4f7f\u80fd\uff0c\u7528\u4e8e\u5b9e\u73b0\u5355\u5b57\u8282\u5199\u7b49</li> <li><code>data_i</code>\uff1aslave \u63d0\u4f9b\u7ed9 master \u7684\u8bfb\u53d6\u7684\u6570\u636e</li> </ol> <p>\u9664\u4e86\u65f6\u949f\u90fd\u662f\u8f93\u5165\u4ee5\u5916\uff0c\u628a\u4e0a\u9762\u5176\u4f59\u7684\u4fe1\u53f7\u8f93\u5165\u3001\u8f93\u51fa\u5bf9\u79f0\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 slave \u7aef\uff08\u5916\u8bbe\u7aef\uff09\u7684\u4fe1\u53f7\uff1a</p> <ol> <li><code>clock_i</code>\uff1a\u65f6\u949f\u8f93\u5165</li> <li><code>valid_i</code>\uff1a\u9ad8\u8868\u793a master \u60f3\u8981\u53d1\u9001\u8bf7\u6c42</li> <li><code>ready_o</code>\uff1a\u9ad8\u8868\u793a slave \u51c6\u5907\u597d\u5904\u7406\u8bf7\u6c42</li> <li><code>addr_i</code>\uff1amaster \u60f3\u8981\u8bfb\u5199\u7684\u5730\u5740</li> <li><code>we_i</code>\uff1amaster \u60f3\u8981\u8bfb\u8fd8\u662f\u5199</li> <li><code>data_i</code>\uff1amaster \u60f3\u8981\u5199\u5165\u7684\u6570\u636e</li> <li><code>be_i</code>\uff1amaster \u8bfb\u5199\u7684\u5b57\u8282\u4f7f\u80fd\uff0c\u7528\u4e8e\u5b9e\u73b0\u5355\u5b57\u8282\u5199\u7b49</li> <li><code>data_o</code>\uff1aslave \u63d0\u4f9b\u7ed9 master \u7684\u8bfb\u53d6\u7684\u6570\u636e</li> </ol> <p>\u4ee5\u4e0a\u9762\u7684\u603b\u7ebf\u534f\u8bae\u4e3a\u4f8b\uff0c\u7ed8\u5236\u51fa\u4e00\u4e2a\u53ef\u80fd\u7684\u6ce2\u5f62\u56fe\uff08\u4ee5 master \u7684\u4fe1\u53f7\u4e3a\u4f8b\uff09\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"clock\", wave: \"p.........\", node: \".abcdefgh\"},\n      { name: \"valid_o\", wave: \"0101.01..0\"},\n      { name: \"ready_i\", wave: \"010.101..0\"},\n      { name: \"addr_o\", wave: \"x=x=.x===x\", data: [\"0x01\", \"0x02\", \"0x03\", \"0x01\", \"0x02\"]},\n      { name: \"we_o\", wave: \"x1x0.x101x\"},\n      { name: \"data_o\", wave: \"x=xxxx=x=x\", data: [\"0x12\", \"0x56\", \"0x9a\"]},\n      { name: \"be_o\", wave: \"x=x=.x=x=x\", data: [\"0x1\", \"0x1\", \"0x1\", \"0x1\"]},\n      { name: \"data_i\", wave: \"xxxx=xx=xx\", data: [\"0x34\", \"0x12\"]},\n    ]\n}\n</code></pre> \u7b80\u6613\u603b\u7ebf\u534f\u8bae\u7684\u6ce2\u5f62\u56fe <ul> <li><code>a</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8bf4\u660e\u6709\u8bf7\u6c42\u53d1\u751f\uff0c\u6b64\u65f6 <code>we_o=1</code> \u8bf4\u660e\u662f\u4e00\u4e2a\u5199\u64cd\u4f5c\uff0c\u5e76\u4e14\u5199\u5165\u5730\u5740\u662f <code>addr_o=0x01</code>\uff0c\u5199\u5165\u7684\u6570\u636e\u662f <code>data_o=0x12</code></li> <li><code>b</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=0 &amp;&amp; ready_i=0</code> \u8bf4\u660e\u65e0\u4e8b\u53d1\u751f</li> <li><code>c</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=0</code> \u8bf4\u660e master \u60f3\u8981\u4ece\u5730\u5740 0x02\uff08<code>addr_o=0x02</code>\uff09\u8bfb\u53d6\u6570\u636e\uff08<code>we_o=0</code>\uff09\uff0c\u4f46\u662f slave \u6ca1\u6709\u63a5\u53d7\uff08<code>ready_i=0</code>\uff09</li> <li><code>d</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8bf4\u660e\u6709\u8bf7\u6c42\u53d1\u751f\uff0cmaster \u4ece\u5730\u5740 0x02\uff08<code>addr_o=0x02</code>\uff09\u8bfb\u53d6\u6570\u636e\uff08<code>we_o=0</code>\uff09\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u4e3a 0x34\uff08<code>data_i=0x34</code>\uff09</li> <li><code>e</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=0 &amp;&amp; ready_i=0</code> \u8bf4\u660e\u65e0\u4e8b\u53d1\u751f</li> <li><code>f</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8bf4\u660e\u6709\u8bf7\u6c42\u53d1\u751f\uff0cmaster \u5411\u5730\u5740 0x03\uff08<code>addr_o=0x03</code>\uff09\u5199\u5165\u6570\u636e\uff08<code>we_o=1</code>\uff09\uff0c\u5199\u5165\u7684\u6570\u636e\u4e3a 0x56\uff08<code>data_i=0x56</code>\uff09</li> <li><code>g</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8bf4\u660e\u6709\u8bf7\u6c42\u53d1\u751f\uff0cmaster \u4ece\u5730\u5740 0x01\uff08<code>addr_o=0x01</code>\uff09\u8bfb\u53d6\u6570\u636e\uff08<code>we_o=0</code>\uff09\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u4e3a 0x12\uff08<code>data_i=0x12</code>\uff09</li> <li><code>h</code> \u5468\u671f\uff1a\u6b64\u65f6 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8bf4\u660e\u6709\u8bf7\u6c42\u53d1\u751f\uff0cmaster \u5411\u5730\u5740 0x02\uff08<code>addr_o=0x02</code>\uff09\u5199\u5165\u6570\u636e\uff08<code>we_o=1</code>\uff09\uff0c\u5199\u5165\u7684\u6570\u636e\u4e3a 0x9a\uff08<code>data_i=0x9a</code>\uff09</li> </ul> <p>\u89c2\u5bdf\u4e0a\u9762\u7684\u6ce2\u5f62\uff0c\u5f97\u5230\u5982\u4e0b\u51e0\u6761\u89c4\u5f8b\uff1a</p> <ol> <li>master \u60f3\u8981\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5c31\u8bbe\u7f6e <code>valid_o=1</code>\uff1b\u5f53 slave \u53ef\u4ee5\u63a5\u53d7\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5c31\u8bbe\u7f6e <code>ready_i=1</code>\uff1b\u5728 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u65f6\u89c6\u4e3a\u4e00\u6b21\u8bf7\u6c42</li> <li>\u5982\u679c master \u53d1\u8d77\u8bf7\u6c42\uff0c\u540c\u65f6 slave \u4e0d\u80fd\u63a5\u6536\u8bf7\u6c42\uff0c\u5373 <code>valid_o=1 &amp;&amp; ready_i=0</code>\uff0c\u6b64\u65f6 master \u8981\u4fdd\u6301 <code>addr_o</code> <code>we_o</code> <code>data_o</code> \u548c <code>be_o</code> \u4e0d\u53d8\uff0c\u76f4\u5230\u8bf7\u6c42\u7ed3\u675f\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981</li> <li>\u5f53 master \u4e0d\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5373 <code>valid_o=0</code>\uff0c\u6b64\u65f6\u603b\u7ebf\u4e0a\u7684\u4fe1\u53f7\u90fd\u89c6\u4e3a\u65e0\u6548\u6570\u636e\uff0c\u4e0d\u5e94\u8be5\u8fdb\u884c\u5904\u7406\uff1b\u5bf9\u4e8e\u8bfb\u64cd\u4f5c\uff0c\u53ea\u6709\u5728 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u65f6 <code>data_i</code> \u4e0a\u7684\u6570\u636e\u662f\u6709\u6548\u7684</li> <li>\u53ef\u4ee5\u8fde\u7eed\u591a\u4e2a\u5468\u671f\u53d1\u751f\u8bf7\u6c42\uff0c\u5373 <code>valid_o=1 &amp;&amp; ready_i=1</code> \u8fde\u7eed\u591a\u4e2a\u5468\u671f\u7b49\u4e8e\u4e00\uff0c\u6b64\u65f6\u662f\u7406\u60f3\u60c5\u51b5\uff0c\u53ef\u4ee5\u8fbe\u5230\u603b\u7ebf\u6700\u9ad8\u7684\u4f20\u8f93\u901f\u5ea6</li> </ol> <p>\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u6613\u7684\u603b\u7ebf\u534f\u8bae\u3002</p>"},{"location":"hardware/bus_protocol/#wishbone","title":"Wishbone","text":"<p>Wishbone \u662f\u4e00\u4e2a\u5728\u5f00\u6e90\u793e\u533a\u5e7f\u6cdb\u4f7f\u7528\u7684\u603b\u7ebf\u534f\u8bae\uff0c\u5176\u5206\u4e3a\u591a\u4e2a\u7248\u672c\uff0c\u4e0b\u9762\u4ecb\u7ecd\u5176\u4e2d\u7684 Wishbone Classic Standard \u548c Wishbone Classic Pipelined\u3002</p>"},{"location":"hardware/bus_protocol/#wishbone-classic-standard","title":"Wishbone Classic Standard","text":"<p>\u6700\u7b80\u5355\u7684 Wishbone \u7248\u672c\u53eb\u505a Wishbone Classic Standard\uff0c\u5176\u8bbe\u8ba1\u601d\u8def\u548c\u4e0a\u9762\u7684\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u975e\u5e38\u76f8\u4f3c\uff0c\u4e0b\u9762\u5c06\u4e24\u8005\u8fdb\u884c\u4e00\u4e2a\u5bf9\u6bd4\u3002Wishbone Classic Standard \u534f\u8bae\u7684 master \u7aef\uff08CPU \u7aef\uff09\u7684\u4fe1\u53f7\uff1a</p> <ol> <li><code>CLK_I</code>: \u65f6\u949f\u8f93\u5165\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>clock_i</code></li> <li><code>STB_O</code>\uff1a\u9ad8\u8868\u793a master \u8981\u53d1\u9001\u8bf7\u6c42\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>valid_o</code></li> <li><code>ACK_I</code>\uff1a\u9ad8\u8868\u793a slave \u5904\u7406\u8bf7\u6c42\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>ready_i</code></li> <li><code>ADR_O</code>\uff1amaster \u60f3\u8981\u8bfb\u5199\u7684\u5730\u5740\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>addr_o</code></li> <li><code>WE_O</code>\uff1amaster \u60f3\u8981\u8bfb\u8fd8\u662f\u5199\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>we_o</code></li> <li><code>DAT_O</code>\uff1amaster \u60f3\u8981\u5199\u5165\u7684\u6570\u636e\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>data_o</code></li> <li><code>SEL_O</code>\uff1amaster \u8bfb\u5199\u7684\u5b57\u8282\u4f7f\u80fd\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>be_o</code></li> <li><code>DAT_I</code>\uff1amaster \u4ece slave \u8bfb\u53d6\u7684\u6570\u636e\uff0c\u5373\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4e2d\u7684 <code>data_i</code></li> <li><code>CYC_O</code>\uff1a\u603b\u7ebf\u7684\u4f7f\u80fd\u4fe1\u53f7\uff0c\u65e0\u5bf9\u5e94\u7684\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u4fe1\u53f7</li> </ol> <p>\u6b64\u5904\u5ffd\u7565\u4e86\u4e00\u4e9b\u53ef\u9009\u4fe1\u53f7\u3002\u9664\u4e86\u6700\u540e\u4e00\u4e2a <code>CYC_O</code>\uff0c\u5176\u4ed6\u7684\u4fe1\u53f7\u5176\u5b9e\u5c31\u662f\u4e0a\u6587\u7684\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u3002<code>CYC_O</code> \u7684\u53ef\u4ee5\u8ba4\u4e3a\u662f master \u60f3\u8981\u5360\u7528 slave \u7684\u603b\u7ebf\u63a5\u53e3\uff0c\u5728\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u76f4\u63a5\u8ba4\u4e3a <code>CYC_O=STB_O</code>\u3002\u5b83\u7684\u7528\u9014\u662f\uff1a</p> <ol> <li>\u5360\u7528 slave \u7684\u603b\u7ebf\u63a5\u53e3\uff0c\u4e0d\u5141\u8bb8\u5176\u4ed6 master \u8bbf\u95ee</li> <li>\u7b80\u5316 interconnect \u7684\u5b9e\u73b0</li> </ol> <p>\u628a\u4e0a\u9762\u7b80\u6613\u603b\u7ebf\u534f\u8bae\u7684\u6ce2\u5f62\u56fe\u6539\u6210 Wishbone Classic Standard\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"CLK_I\", wave: \"p.........\", node: \".abcdefgh\"},\n      { name: \"CYC_O\", wave: \"0101.01..0\"},\n      { name: \"STB_O\", wave: \"0101.01..0\"},\n      { name: \"ACK_I\", wave: \"010.101..0\"},\n      { name: \"ADR_O\", wave: \"x=x=.x===x\", data: [\"0x01\", \"0x02\", \"0x03\", \"0x01\", \"0x02\"]},\n      { name: \"WE_O\", wave: \"x1x0.x101x\"},\n      { name: \"DAT_O\", wave: \"x=xxxx=x=x\", data: [\"0x12\", \"0x56\", \"0x9a\"]},\n      { name: \"SEL_O\", wave: \"x=x=.x=x=x\", data: [\"0x1\", \"0x1\", \"0x1\", \"0x1\"]},\n      { name: \"DAT_I\", wave: \"xxxx=xx=xx\", data: [\"0x34\", \"0x12\"]},\n    ]\n}\n</code></pre> Wishbone Classic Standard \u7684\u6ce2\u5f62\u56fe"},{"location":"hardware/bus_protocol/#wishbone-classic-pipelined","title":"Wishbone Classic Pipelined","text":"<p>Wishbone Classic Standard \u534f\u8bae\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u5047\u8bbe\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a SRAM \u63a7\u5236\u5668\uff0c\u5b83\u7684\u8bfb\u64cd\u4f5c\u6709\u4e00\u4e2a\u5468\u671f\u7684\u5ef6\u8fdf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fd9\u4e2a\u5468\u671f\u7ed9\u51fa\u5730\u5740\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u5468\u671f\u624d\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u3002\u5728 Wishbone Classic Standard \u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u6ce2\u5f62\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"CLK_I\", wave: \"p.....\", node: \".abcd\"},\n      { name: \"CYC_O\", wave: \"01...0\"},\n      { name: \"STB_O\", wave: \"01...0\"},\n      { name: \"ACK_I\", wave: \"0.1010\"},\n      { name: \"ADR_O\", wave: \"x=.=.x\", data: [\"0x01\", \"0x02\"]},\n      { name: \"WE_O\", wave: \"x0...x\"},\n      { name: \"DAT_O\", wave: \"xxxxxx\"},\n      { name: \"SEL_O\", wave: \"x=...x\", data: [\"0x1\"]},\n      { name: \"DAT_I\", wave: \"xx=x=x\", data: [\"0x12\", \"0x34\"]},\n    ]\n}\n</code></pre> Wishbone Classic Standard \u5b9e\u73b0 SRAM \u63a7\u5236\u5668\u7684\u6ce2\u5f62\u56fe <ul> <li><code>a</code> \u5468\u671f\uff1amaster \u7ed9\u51fa\u8bfb\u5730\u5740 0x01\uff0c\u6b64\u65f6 SRAM \u63a7\u5236\u5668\u5f00\u59cb\u8bfb\u53d6\uff0c\u4f46\u662f\u6b64\u65f6\u6570\u636e\u8fd8\u6ca1\u6709\u8bfb\u53d6\u56de\u6765\uff0c\u6240\u4ee5 <code>ACK_I=0</code></li> <li><code>b</code> \u5468\u671f\uff1a\u6b64\u65f6 SRAM \u5b8c\u6210\u4e86\u8bfb\u53d6\uff0c\u628a\u8bfb\u53d6\u7684\u6570\u636e 0x12 \u653e\u5728 <code>DAT_I</code> \u5e76\u8bbe\u7f6e <code>ACK_I=1</code></li> <li><code>c</code> \u5468\u671f\uff1amaster \u7ed9\u51fa\u4e0b\u4e00\u4e2a\u8bfb\u5730\u5740 0x02\uff0cSRAM \u8981\u91cd\u65b0\u5f00\u59cb\u8bfb\u53d6</li> <li><code>d</code> \u5468\u671f\uff1a\u6b64\u65f6 SRAM \u5b8c\u6210\u4e86\u7b2c\u4e8c\u6b21\u8bfb\u53d6\uff0c\u628a\u8bfb\u53d6\u7684\u6570\u636e 0x34 \u653e\u5728 <code>DAT_I</code> \u5e76\u8bbe\u7f6e <code>ACK_I=1</code></li> </ul> <p>\u4ece\u6ce2\u5f62\u6765\u770b\uff0c\u529f\u80fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u6bcf\u4e24\u4e2a\u5468\u671f\u624d\u80fd\u8fdb\u884c\u4e00\u6b21\u8bfb\u64cd\u4f5c\uff0c\u53d1\u6325\u4e0d\u4e86\u6700\u9ad8\u7684\u6027\u80fd\u3002\u5728 <code>a</code> \u5468\u671f\u7ed9\u51fa\u7b2c\u4e00\u4e2a\u5730\u5740\uff0c\u5728 <code>b</code> \u5468\u671f\u5f97\u5230\u7b2c\u4e00\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\u5982\u679c\u80fd\u5728 <code>b</code> \u5468\u671f\u7684\u65f6\u5019\u7ed9\u51fa\u7b2c\u4e8c\u4e2a\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u5728 <code>c</code> \u5468\u671f\u5f97\u5230\u7b2c\u4e8c\u4e2a\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6d41\u6c34\u7ebf\u5f0f\u7684\u6bcf\u4e2a\u5468\u671f\u8fdb\u884c\u4e00\u6b21\u8bfb\u64cd\u4f5c\u3002\u4f46\u662f\uff0cWishbone Classic Standard \u8981\u6c42 <code>b</code> \u5468\u671f\u65f6\u7b2c\u4e00\u6b21\u8bf7\u6c42\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u56e0\u6b64\u9700\u8981\u4fee\u6539\u534f\u8bae\uff0c\u6765\u5b9e\u73b0\u6d41\u6c34\u7ebf\u5f0f\u7684\u8bf7\u6c42\u3002</p> <p>\u5b9e\u73b0\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff1a\u65e2\u7136 Wishbone Classic Standard \u8ba4\u4e3a <code>b</code> \u5468\u671f\u65f6\uff0c\u7b2c\u4e00\u6b21\u8bf7\u6c42\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u90a3\u5c31\u8ba9\u7b2c\u4e00\u6b21\u8bf7\u6c42\u63d0\u524d\u5728 <code>a</code> \u5468\u671f\u5b8c\u6210\uff0c\u53ea\u4e0d\u8fc7\u5b83\u7684\u6570\u636e\u8981\u7b49\u5230 <code>b</code> \u5468\u671f\u624d\u80fd\u7ed9\u51fa\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u4e00\u6b21\u8bfb\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1a\u9996\u5148\u662f master \u5411 slave \u53d1\u9001\u8bfb\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u5728 <code>a</code> \u5468\u671f\u5b8c\u6210\uff1b\u7136\u540e\u662f slave \u5411 master \u53d1\u9001\u8bfb\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5728 <code>b</code> \u5468\u671f\u5b8c\u6210\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fdb\u884c\u5982\u4e0b\u4fee\u6539\uff1a</p> <ul> <li>\u6dfb\u52a0 <code>STALL_I</code> \u4fe1\u53f7\uff1a<code>CYC_O=1 &amp;&amp; STB_O=1 &amp;&amp; STALL_I=0</code> \u8868\u793a\u8fdb\u884c\u4e00\u6b21\u8bfb\u8bf7\u6c42</li> <li>\u4fee\u6539 <code>ACK_I</code> \u4fe1\u53f7\u542b\u4e49\uff1a<code>CYC_O=1 &amp;&amp; STB_O=1 &amp;&amp; ACK_I=1</code> \u8868\u793a\u4e00\u6b21\u8bfb\u54cd\u5e94</li> </ul> <p>\u8fdb\u884c\u5982\u4e0a\u4fee\u6539\uff0c\u5c31\u5f97\u5230\u4e86 Wishbone Classic Pipelined \u603b\u7ebf\u534f\u8bae\u3002\u4e0a\u9762\u7684\u4e24\u6b21\u8fde\u7eed\u8bfb\u64cd\u4f5c\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"CLK_I\", wave: \"p....\", node: \".abcd\"},\n      { name: \"CYC_O\", wave: \"01..0\"},\n      { name: \"STB_O\", wave: \"01.0.\"},\n      { name: \"STALL_I\", wave: \"0....\"},\n      { name: \"ACK_I\", wave: \"0.1.0\"},\n      { name: \"ADR_O\", wave: \"x==xx\", data: [\"0x01\", \"0x02\"]},\n      { name: \"WE_O\", wave: \"x0.xx\"},\n      { name: \"DAT_O\", wave: \"xxxxx\"},\n      { name: \"SEL_O\", wave: \"x=.xx\", data: [\"0x1\"]},\n      { name: \"DAT_I\", wave: \"xx==x\", data: [\"0x12\", \"0x34\"]},\n    ]\n}\n</code></pre> Wishbone Classic Pipelined \u5b9e\u73b0 SRAM \u63a7\u5236\u5668\u7684\u6ce2\u5f62\u56fe <ul> <li><code>a</code> \u5468\u671f\uff1amaster \u8bf7\u6c42\u8bfb\u5730\u5740 0x01\uff0cslave \u63a5\u6536\u8bfb\u8bf7\u6c42\uff08<code>STALL_O=0</code>\uff09</li> <li><code>b</code> \u5468\u671f\uff1aslave \u8fd4\u56de\u8bfb\u8bf7\u6c42\u7ed3\u679c 0x12\uff0c\u5e76\u8bbe\u7f6e <code>ACK_I=1</code>\uff1b\u540c\u65f6 master \u8bf7\u6c42\u8bfb\u5730\u5740 0x02\uff0cslave \u63a5\u6536\u8bfb\u8bf7\u6c42\uff08<code>STALL_O=0</code>\uff09</li> <li><code>c</code> \u5468\u671f\uff1aslave \u8fd4\u56de\u8bfb\u8bf7\u6c42\u7ed3\u679c 0x34\uff0c\u5e76\u8bbe\u7f6e <code>ACK_I=1</code>\uff1bmaster \u4e0d\u518d\u53d1\u8d77\u8bf7\u6c42\uff0c\u8bbe\u7f6e <code>STB_O=0</code></li> <li><code>d</code> \u5468\u671f\uff1a\u6240\u6709\u8bf7\u6c42\u5b8c\u6210\uff0cmaster \u8bbe\u7f6e <code>CYC_O=0</code></li> </ul> <p>\u8fd9\u6837\u5c31\u5229\u7528 Wishbone Classic Pipelined \u534f\u8bae\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6bcf\u5468\u671f\u8fdb\u884c\u4e00\u6b21\u8bfb\u64cd\u4f5c\u7684 slave\u3002</p>"},{"location":"hardware/bus_protocol/#axi","title":"AXI","text":"<p>AXI \u603b\u7ebf\u534f\u8bae\u662f ARM \u516c\u53f8\u63d0\u51fa\u7684\u603b\u7ebf\u534f\u8bae\uff0c\u5728 ARM \u5904\u7406\u5668\u4ee5\u53ca Xilinx FPGA \u5185\u4f7f\u7528\u7684\u6bd4\u8f83\u5e7f\u6cdb\u3002</p> <p>AXI \u7684\u4fe1\u53f7\u5206\u6210\u4e94\u4e2a Channel\uff1a</p> <ol> <li>AW\uff08Address Write\uff09\uff1a\u5199\u8bf7\u6c42\u7684\u5730\u5740\u4f1a\u901a\u8fc7 AW Channel \u53d1\u9001\u7ed9 Slave</li> <li>W\uff08Write\uff09\uff1a\u5199\u8bf7\u6c42\u7684\u6570\u636e\u4f1a\u901a\u8fc7 W Channel \u53d1\u9001\u7ed9 Slave</li> <li>B\uff1a\u5199\u54cd\u5e94\u4f1a\u901a\u8fc7 B Channel \u53d1\u9001\u7ed9 Master</li> <li>AR\uff08Address Read\uff09\uff1a\u8bfb\u8bf7\u6c42\u7684\u5730\u5740\u4f1a\u901a\u8fc7 AR Channel \u53d1\u9001\u7ed9 Slave</li> <li>R\uff08Read\uff09\uff1a\u8bfb\u54cd\u5e94\u4f1a\u901a\u8fc7 R Channel \u53d1\u9001\u7ed9 Slave</li> </ol> <p>\u6bcf\u4e2a Channel \u90fd\u5305\u62ec <code>valid-ready</code> \u5f0f\u7684\u63e1\u624b\u4fe1\u53f7\uff0c\u5bf9\u4e8e AW\u3001W \u548c AR Channel\uff0cMaster \u662f\u53d1\u9001\u65b9\uff0cSlave \u662f\u63a5\u6536\u65b9\uff1b\u5bf9\u4e8e R \u548c B Channel\uff0cSlave \u662f\u53d1\u9001\u65b9\uff0cMaster \u662f\u63a5\u6536\u65b9\u3002</p> <p>\u53ef\u89c1 AXI \u7684\u8bbe\u8ba1\u628a\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8fc7\u7a0b\u62c6\u5f00\uff0c\u5e76\u4e14\u5141\u8bb8\u603b\u7ebf\u4e0a\u540c\u65f6\u6709\u591a\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u8bf7\u6c42\uff1a\u4e0d\u7528\u7b49\u5f85\u54cd\u5e94\u56de\u6765\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u65b0\u7684\u8bf7\u6c42\u3002\u56e0\u6b64 AXI \u53ef\u4ee5\u66f4\u597d\u5730\u5229\u7528\u5185\u5b58\u7684\u5e76\u884c\u5ea6\uff0c\u8fbe\u5230\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u4ee3\u4ef7\u5c31\u662f\u8bbe\u8ba1\u66f4\u52a0\u590d\u6742\u3002</p> <p>\u4e3a\u4e86\u5b8c\u6210\u4e00\u6b21\u5199\u8bf7\u6c42\uff0cMaster \u9700\u8981\uff1a</p> <ol> <li>\u901a\u8fc7 AW Channel \u53d1\u9001\u8981\u5199\u5165\u7684\u5730\u5740\u3001\u5199\u5165\u7684\u957f\u5ea6\u7b49\u4fe1\u606f\u7ed9 Slave</li> <li>\u901a\u8fc7 W Channel \u53d1\u9001\u8981\u5199\u5165\u7684\u6570\u636e\uff0c\u652f\u6301 Burst\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u591a\u4e2a\u5468\u671f\u5b8c\u6210\u4e00\u4e2a\u5199\u8bf7\u6c42\u7684\u6570\u636e\u4f20\u8f93</li> <li>\u5728 B Channel \u4e0a\u7b49\u5f85 Slave \u56de\u590d\u5199\u5165\u5b8c\u6210\u7684\u54cd\u5e94</li> </ol> <p>\u4e3a\u4e86\u5b8c\u6210\u4e00\u6b21\u8bfb\u8bf7\u6c42\uff0cMaster \u9700\u8981\uff1a</p> <ol> <li>\u901a\u8fc7 AR Channel \u53d1\u9001\u8981\u8bfb\u53d6\u7684\u5730\u5740\u3001\u8bfb\u53d6\u7684\u957f\u5ea6\u7b49\u4fe1\u606f\u7ed9 Slave</li> <li>\u5728 R Channel \u4e0a\u7b49\u5f85 Slave \u56de\u590d\u8bfb\u53d6\u7684\u6570\u636e\uff0c\u652f\u6301 Burst\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u591a\u4e2a\u5468\u671f\u5b8c\u6210\u4e00\u4e2a\u8bfb\u54cd\u5e94\u7684\u6570\u636e\u4f20\u8f93</li> </ol> <p>\u7531\u4e8e AXI \u4e0a\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u8bf7\u6c42\uff0c\u4e3a\u4e86\u8ba9 Master \u53ef\u4ee5\u533a\u5206\u51fa B \u548c R Channel \u4e0a\u7684\u54cd\u5e94\u4e0e\u8bf7\u6c42\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u548c\u54cd\u5e94\u90fd\u9644\u5e26\u4e86\u4e00\u4e2a ID\uff0c\u90a3\u4e48 Master \u5728\u8bf7\u6c42\u4e2d\u9644\u5e26\u4e86\u4ec0\u4e48 ID\uff0cSlave \u5728\u54cd\u5e94\u7684\u65f6\u5019\uff0c\u4e5f\u8981\u9644\u5e26\u76f8\u540c\u7684 ID\u3002\u5bf9\u4e8e\u540c\u4e00\u4e2a ID \u7684\u8bf7\u6c42\uff0c\u5176\u987a\u5e8f\u662f\u53d7\u4fdd\u8bc1\u7684\u3002</p> <p>AXI \u6709\u652f\u6301\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u7684\u6269\u5c55\uff1aACE\uff0c\u5176\u5185\u5bb9\u5728 \u4e00\u81f4\u6027\u534f\u8bae \u4e2d\u4ecb\u7ecd\u3002</p>"},{"location":"hardware/bus_protocol/#tilelink","title":"TileLink","text":"<p>TileLink \u603b\u7ebf\u534f\u8bae\u662f SiFive \u516c\u53f8\u63d0\u51fa\u7684\u603b\u7ebf\u534f\u8bae\uff0c\u5728 Rocket Chip \u76f8\u5173\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u6bd4\u8f83\u5e7f\u6cdb\u3002\u6839\u636e TileLink Spec 1.8.0\uff0cTileLink \u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>TL-UL: \u53ea\u652f\u6301\u8bfb\u5199\uff0c\u4e0d\u652f\u6301 burst\uff0c\u7c7b\u6bd4 AXI-Lite</li> <li>TL-UH\uff1a\u652f\u6301\u8bfb\u5199\uff0c\u539f\u5b50\u6307\u4ee4\uff0c\u9884\u53d6\uff0c\u652f\u6301 burst\uff0c\u7c7b\u6bd4 AXI+ATOP\uff08AXI5 \u5f15\u5165\u7684\u539f\u5b50\u64cd\u4f5c\uff09</li> <li>TL-C\uff1a\u5728 TL-UH \u57fa\u7840\u4e0a\u652f\u6301\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u7c7b\u6bd4 AXI+ACE/CHI</li> </ul> <p>\u672c\u6587\u4e3b\u8981\u8ba8\u8bba\u524d\u4e24\u79cd\uff0cTL-C \u7684\u5185\u5bb9\u5728 \u4e00\u81f4\u6027\u534f\u8bae \u4e2d\u4ecb\u7ecd\u3002</p>"},{"location":"hardware/bus_protocol/#_4","title":"\u63a5\u53e3","text":"<p>TileLink Uncached(TL-UL \u548c TL-UH) \u5305\u62ec\u4e86\u4e24\u4e2a channel\uff1a</p> <ul> <li>A channel: M-&gt;S \u53d1\u9001\u8bf7\u6c42\uff0c\u7c7b\u6bd4 AXI \u7684 AR/AW/W</li> <li>D channel: S-&gt;M \u53d1\u9001\u54cd\u5e94\uff0c\u7c7b\u6bd4 AXI \u7684 R/W</li> </ul> <p>\u56e0\u6b64 TileLink \u6bcf\u4e2a\u5468\u671f\u53ea\u80fd\u53d1\u9001\u8bfb\u6216\u8005\u5199\u7684\u8bf7\u6c42\uff0c\u800c AXI \u53ef\u4ee5\u540c\u65f6\u5728 AR \u548c AW channel \u4e0a\u53d1\u9001\u8bf7\u6c42\u3002</p> <p>\u4e00\u4e9b\u8bf7\u6c42\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u8bfb\uff1aM-&gt;S \u5728 A channel \u4e0a\u53d1\u9001 Get\uff0cS-&gt;M \u5728 D channel \u4e0a\u53d1\u9001 AccessAckData</li> <li>\u5199\uff1aM-&gt;S \u5728 A channel \u4e0a\u53d1\u9001 PutFullData/PutPartialData\uff0cS-&gt;M \u5728 D channel \u662f\u53d1\u9001 AccessAck</li> <li>\u539f\u5b50\u64cd\u4f5c\uff1aM-&gt;S \u5728 A channel \u4e0a\u53d1\u9001 ArithmeticData/LogicalData\uff0cS-&gt;M \u5728 D channel \u4e0a\u53d1\u9001 AccessAckData</li> <li>\u9884\u53d6\u64cd\u4f5c\uff1aM-&gt;S \u5728 A channel \u4e0a\u53d1\u9001 Intent\uff0cS-&gt;M \u5728 D channel \u4e0a\u53d1\u9001 AccessAck</li> </ul>"},{"location":"hardware/bus_protocol/#axi_1","title":"\u548c AXI \u7684\u5bf9\u6bd4","text":"<p>\u548c AXI \u5bf9\u6bd4\uff0cTileLink \u628a\u8bfb\u548c\u5199\u8fdb\u884c\u4e86\u5408\u5e76\uff0c\u6240\u6709\u7684\u8bfb\u5199\u8bf7\u6c42\u90fd\u901a\u8fc7 A channel \u53d1\u9001\uff0c\u6240\u6709\u7684\u54cd\u5e94\u90fd\u901a\u8fc7 D channel \u56de\u590d\u3002\u8fd9\u6837\u505a\u7b80\u5316\u4e86\u786c\u4ef6\u7684\u5b9e\u73b0\uff0c\u4f46\u5982\u679c CPU \u5e0c\u671b\u540c\u65f6\u8fdb\u884c\u5927\u91cf\u7684\u8bfb\u5199\uff0c\u53ef\u80fd AXI \u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002</p> <p>\u4e0b\u9762\u5206\u6790 TileLink \u548c AXI \u534f\u8bae\u7684\u6865\u63a5\u6a21\u5757\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\u9488\u5bf9 AXI4ToTL \u6a21\u5757\u7684\u4f8b\u5b50\uff0c\u6765\u5206\u6790\u4e00\u4e0b\u5982\u4f55\u628a\u4e00\u4e2a AXI4 Master \u8f6c\u6362\u4e3a TileLink\u3002</p> <p>\u9488\u5bf9 AXI4 \u548c TileLink \u7684\u533a\u522b\u8fdb\u884c\u8bbe\u8ba1\uff1a\u4e00\u4e2a\u662f\u8bfb\u5199 channel \u5408\u5e76\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a Arbiter\uff1b\u5176\u6b21 AXI4 \u4e2d AW \u548c W \u662f\u5206\u5f00\u7684\uff0c\u8fd9\u91cc\u4e5f\u9700\u8981\u8fdb\u884c\u5408\u5e76\u3002\u8fd9\u4e2a\u6a21\u5757\u5e76\u4e0d\u8003\u8651 Burst \u7684\u60c5\u51b5\uff0c\u800c\u662f\u7531 AXI4Fragmenter \u6765\u8fdb\u884c\u62c6\u5206\uff0c\u5373\u6dfb\u52a0\u82e5\u5e72\u4e2a AW beat\uff0c\u548c W \u8fdb\u884c\u914d\u5bf9\u3002</p> <p>\u5177\u4f53\u5230\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u9996\u5148\u628a AR channel \u5bf9\u5e94\u5230 \u5230 A channel \u4e0a\uff1a</p> <pre><code>val r_out = Wire(out.a)\nr_out.valid := in.ar.valid\nr_out.bits :&lt;= edgeOut.Get(r_id, r_addr, r_size)._2\n</code></pre> <p>\u7136\u540e AW+W channel \u4e5f\u8fde\u63a5 \u5230 A channel\uff0c\u7531\u4e8e\u4e0d\u7528\u8003\u8651 burst \u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u5728 aw \u548c w \u540c\u65f6 valid \u7684\u65f6\u5019\u624d\u8ba4\u4e3a\u6709\u8bf7\u6c42\u3002</p> <pre><code>val w_out = Wire(out.a)\nin.aw.ready := w_out.ready &amp;&amp; in.w.valid &amp;&amp; in.w.bits.last\nin.w.ready  := w_out.ready &amp;&amp; in.aw.valid\nw_out.valid := in.aw.valid &amp;&amp; in.w.valid\nw_out.bits :&lt;= edgeOut.Put(w_id, w_addr, w_size, in.w.bits.data, in.w.bits.strb)._2\n</code></pre> <p>\u4e3a\u4e86\u533a\u5206\u8bf7\u6c42\u7684\u7c7b\u578b\uff0c\u8bfb\u5199\u7684 id \u589e\u52a0\u4e86\u82e5\u5e72\u4f4d\uff0c\u6700\u4f4e\u4f4d 0 \u8868\u793a\u8bfb\uff0c1 \u8868\u793a\u5199\uff0c\u5269\u4e0b\u51e0\u4f4d\u662f\u8bf7\u6c42\u7f16\u53f7\uff0c\u8fd9\u6837\u53d1\u51fa\u53bb\u7684\u662f\u4e0d\u540c id \u7684\u591a\u4e2a\u8bf7\u6c42\u3002</p> <p>\u7136\u540e\uff0c\u628a\u8bfb\u548c\u5199\u7684 A channel \u8fde\u63a5\u5230 Arbiter \u4e0a\uff1a</p> <pre><code>TLArbiter(TLArbiter.roundRobin)(out.a, (UInt(0), r_out), (in.aw.bits.len, w_out))\n</code></pre> <p>\u5176\u4f59\u7684\u90e8\u5206\u5219\u662f\u5bf9 D channel \u8fdb\u884c\u5224\u65ad\uff0c\u6709\u6570\u636e\u7684\u8f6c\u7ed9 R channel\uff0c\u6ca1\u6709\u6570\u636e\u7684\u8f6c\u7ed9 B channel\uff1a</p> <pre><code>out.d.ready := Mux(d_hasData, ok_r.ready, ok_b.ready)\nok_r.valid := out.d.valid &amp;&amp; d_hasData\nok_b.valid := out.d.valid &amp;&amp; !d_hasData\n</code></pre> <p>\u6700\u540e\u5904\u7406\u4e86\u4e00\u4e0b TileLink \u548c AXI4 \u5bf9\u5199\u8bf7\u6c42\u8fd4\u56de\u786e\u8ba4\u7684\u533a\u522b\uff1aTileLink \u4e2d\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a burst beat \u5c31\u8fd4\u56de\u786e\u8ba4\uff0c\u800c AXI4 \u9700\u8981\u5728\u6700\u540e\u4e00\u4e2a burst beat \u4e4b\u540e\u8fd4\u56de\u786e\u8ba4\u3002</p> <p>\u518d\u6765\u770b\u4e00\u4e0b\u53cd\u8fc7\u6765\u7684\u8f6c\u6362\uff0c\u5373\u4ece TileLink Master \u5230 AXI\u3002\u7531\u4e8e TileLink \u540c\u65f6\u53ea\u80fd\u8fdb\u884c\u8bfb\u6216\u8005\u5199\uff0c\u6240\u4ee5\u5b83\u9996\u5148\u505a\u4e86\u4e00\u4e2a\u865a\u6784\u7684 arw channel\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5408\u5e76\u4e86 ar \u548c aw channel \u7684 AXI4\uff0c\u8fd9\u4e2a\u8bbe\u8ba1\u5728 SpinalHDL \u7684\u4ee3\u7801\u4e2d\u4e5f\u80fd\u770b\u5230\u3002\u7136\u540e\u518d\u6839\u636e\u662f\u5426\u662f\u5199\u5165\uff0c\u5206\u522b\u8fde\u63a5\u5230 ar \u548c aw channel\uff1a</p> <pre><code>val queue_arw = Queue.irrevocable(out_arw, entries=depth, flow=combinational)\nout.ar.bits := queue_arw.bits\nout.aw.bits := queue_arw.bits\nout.ar.valid := queue_arw.valid &amp;&amp; !queue_arw.bits.wen\nout.aw.valid := queue_arw.valid &amp;&amp;  queue_arw.bits.wen\nqueue_arw.ready := Mux(queue_arw.bits.wen, out.aw.ready, out.ar.ready)\n</code></pre> <p>\u8fd9\u91cc\u5904\u7406\u4e86 aw \u548c w \u7684 valid \u4fe1\u53f7\uff1a</p> <pre><code>in.a.ready := !stall &amp;&amp; Mux(a_isPut, (doneAW || out_arw.ready) &amp;&amp; out_w.ready, out_arw.ready)\nout_arw.valid := !stall &amp;&amp; in.a.valid &amp;&amp; Mux(a_isPut, !doneAW &amp;&amp; out_w.ready, Bool(true))\nout_w.valid := !stall &amp;&amp; in.a.valid &amp;&amp; a_isPut &amp;&amp; (doneAW || out_arw.ready)\n</code></pre> <p>\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u5728 TileLink \u4e2d\uff0c\u6bcf\u4e2a burst \u90fd\u662f\u4e00\u4e2a a channel \u4e0a\u7684\u8bf7\u6c42\uff0c\u800c AXI4 \u4e2d\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a burst \u6709 aw \u8bf7\u6c42\uff0c\u6240\u6709 burst \u90fd\u6709 w \u8bf7\u6c42\uff0c\u56e0\u6b64\u8fd9\u91cc\u7528 doneAW \u4fe1\u53f7\u6765\u8fdb\u884c\u533a\u5206\u3002</p> <p>\u63a5\u7740\uff0c\u8981\u628a b \u548c r channel \u4e0a\u7684\u7ed3\u679c\u8fde\u63a5\u5230 d channel\uff0c\u6839\u636e\u4e0a\u9762\u7684\u7ecf\u9a8c\uff0c\u8fd9\u91cc \u53c8\u662f\u4e00\u4e2a arbitration\uff1a</p> <pre><code>val r_wins = (out.r.valid &amp;&amp; b_delay =/= UInt(7)) || r_holds_d\nout.r.ready := in.d.ready &amp;&amp; r_wins\nout.b.ready := in.d.ready &amp;&amp; !r_wins\nin.d.valid := Mux(r_wins, out.r.valid, out.b.valid)\n</code></pre> <p>\u6700\u540e\u8fd8\u5904\u7406\u4e86\u4e00\u4e0b\u8bf7\u6c42\u548c\u7ed3\u679c\u987a\u5e8f\u7684\u95ee\u9898\u3002</p>"},{"location":"hardware/cache_coherence_protocol/","title":"\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae","text":"<p>\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u7684\u573a\u666f\u662f\uff0c\u591a\u6838 CPU \u4e2d\uff0c\u6bcf\u4e2a\u6838\u5fc3\u90fd\u6709\u81ea\u5df1\u7684\u7f13\u5b58\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4e9b\u7f13\u5b58\u7684\u6570\u636e\u4e00\u81f4\uff0c\u8bbe\u8ba1\u4e86\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#_2","title":"\u7406\u8bba\u5206\u6790","text":"<p>\u9996\u5148\u4ece\u7406\u8bba\u7684\u89d2\u5ea6\uff0c\u5206\u6790\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#write-invalidate-write-update","title":"Write-invalidate \u548c Write-update","text":"<p>\u6700\u57fa\u7840\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u601d\u60f3\u6709\u4e24\u79cd\uff1a</p> <ol> <li>Write-invalidate\uff1a\u5199\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c06\u5176\u4ed6 Cache \u4e2d\u8fd9\u6761 Cache Line \u8bbe\u4e3a Invalid</li> <li>Write-update\uff1a\u5199\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u628a\u65b0\u7684\u7ed3\u679c\u5199\u5165\u5230\u6709\u8fd9\u6761 Cache Line \u7684\u5176\u4ed6 Cache</li> </ol>"},{"location":"hardware/cache_coherence_protocol/#write-once","title":"Write-once \u534f\u8bae","text":"<p>Write-once \u534f\u8bae\u5b9a\u4e49\u4e86\u56db\u4e2a\u72b6\u6001\uff1a</p> <ol> <li>Invalid\uff1a\u8868\u793a\u8fd9\u4e2a\u5757\u4e0d\u5408\u6cd5</li> <li>Valid\uff1a\u8868\u793a\u8fd9\u4e2a\u5757\u5408\u6cd5\uff0c\u5e76\u53ef\u80fd\u662f\u5171\u4eab\u7684\uff0c\u540c\u65f6\u6570\u636e\u6ca1\u6709\u4fee\u6539</li> <li>Reserved\uff1a\u8868\u793a\u8fd9\u4e2a\u5757\u5408\u6cd5\uff0c\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u540c\u65f6\u6570\u636e\u6ca1\u6709\u66f4\u6539</li> <li>Dirty\uff1a\u8868\u793a\u8fd9\u4e2a\u5757\u5408\u6cd5\uff0c\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u6570\u636e\u505a\u4e86\u4fee\u6539\uff0c\u548c\u5185\u5b58\u4e0d\u540c\u3002</li> </ol> <p>\u53ef\u89c1\uff0c\u5f53\u4e00\u4e2a\u7f13\u5b58\u72b6\u6001\u5728 R \u6216\u8005 D\uff0c\u5176\u4ed6\u7f13\u5b58\u53ea\u80fd\u662f I\uff1b\u800c\u7f13\u5b58\u72b6\u6001\u662f V \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u7f13\u5b58\u5728 V \u72b6\u6001\u3002</p> <p>Write-once \u534f\u8bae\u7684\u7279\u70b9\u662f\uff0c\u7b2c\u4e00\u6b21\u5199\u7684\u65f6\u5019\uff0c\u4f1a\u5199\u5165\u5230\u5185\u5b58\uff08\u7c7b\u4f3c Write-through\uff09\uff0c\u8fde\u7eed\u5199\u5165\u5219\u53ea\u5199\u5230\u7f13\u5b58\u4e2d\uff0c\u7c7b\u4f3c Write-back\u3002</p> <p>\u5f53 Read hit \u7684\u65f6\u5019\uff0c\u72b6\u6001\u4e0d\u53d8\u3002</p> <pre><code>Read hit: The information is supplied by the current cache. No state\nchange.\n</code></pre> <p>\u5f53 Read miss \u7684\u65f6\u5019\uff0c\u4f1a\u67e5\u770b\u6240\u6709\u7f13\u5b58\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7f13\u5b58\u5904\u4e8e Valid/Reserved/Dirty \u72b6\u6001\uff0c\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u5904\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u8bbe\u4e3a Valid\uff0c\u5176\u4ed6\u7f13\u5b58\u4e5f\u8bbe\u4e3a Valid\u3002\u5982\u679c\u5176\u4ed6\u7f13\u5b58\u5904\u4e8e Dirty \u72b6\u6001\uff0c\u8fd8\u8981\u628a\u6570\u636e\u5199\u5165\u5185\u5b58\u3002</p> <pre><code>Read miss: The data is read from main memory. The read is snooped by\nother caches; if any of them have the line in the Dirty state, the read\nis interrupted long enough to write the data back to memory before it is\nallowed to continue. Any copies in the Dirty or Reserved states are set\nto the Valid state.\n</code></pre> <p>\u5f53 Write hit \u7684\u65f6\u5019\uff0c\u5982\u679c\u662f Valid \u72b6\u6001\uff0c\u9996\u5148\u5199\u5165\u5185\u5b58\uff0c\u628a\u5176\u4ed6 Cache \u90fd\u8bbe\u4e3a Invalid\uff0c\u8fdb\u5165 Reserved \u72b6\u6001\uff0c\u8fd9\u610f\u5473\u7740\u7b2c\u4e00\u6b21\u5199\u662f Write-through\u3002\u5982\u679c\u662f Reserved/Dirty \u72b6\u6001\uff0c\u5219\u4e0d\u4fee\u6539\u5185\u5b58\uff0c\u8fdb\u5165 Dirty \u72b6\u6001\uff0c\u8fd9\u8868\u793a\u540e\u7eed\u7684\u5199\u5165\u90fd\u662f Write-back\u3002</p> <pre><code>Write hit: If the information in the cache is in Dirty or Reserved\nstate, the cache line is updated in place and its state is set to Dirty\nwithout updating memory. If the information is in Valid state, a\nwrite-through operation is executed updating the block and the memory\nand the block state is changed to Reserved. Other caches snoop the write\nand set their copies to Invalid.\n</code></pre> <p>\u5f53 Write miss \u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u884c\u4e3a Wikipedia \u4e0a\u548c\u4e0a\u8bfe\u8bb2\u7684\u4e0d\u4e00\u6837\u3002\u6309\u7167 Wikipedia \u7684\u8bf4\u6cd5\uff0c\u9996\u5148\u6309\u7167 Read miss \u5904\u7406\uff0c\u518d\u6309\u7167 Write hit \u5904\u7406\uff0c\u7c7b\u4f3c\u4e8e Write Allocate \u7684\u601d\u8def\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u90a3\u4e48\u9996\u5148\u4ece\u5176\u4ed6\u7f13\u5b58\u6216\u8005\u5185\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u628a\u5176\u4ed6\u7f13\u5b58\u90fd\u8bbe\u4e3a Invalid\uff0c\u628a\u66f4\u65b0\u540e\u7684\u6570\u636e\u5199\u5165\u5185\u5b58\uff0c\u8fdb\u5165 Reserved \u72b6\u6001\u3002\u76f8\u5f53\u4e8e Write miss \u7684\u65f6\u5019\uff0c\u4e5f\u662f\u6309\u7167 Write-through \u5b9e\u73b0\u3002</p> <pre><code>Write miss: A partial cache line write is handled as a read miss (if\nnecessary to fetch the unwritten portion of the cache line) followed by\na write hit. This leaves all other caches in the Invalid state, and the\ncurrent cache in the Reserved state.\n</code></pre> <p>\u6559\u6750\u4e0a\u5219\u662f Write miss \u7684\u65f6\u5019\u6309\u7167 Write-back \u5904\u7406\u3002\u5982\u679c\u5176\u4ed6\u7f13\u5b58\u90fd\u662f Invalid \u65f6\uff0c\u4ece\u5185\u5b58\u91cc\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u5199\u5165\u5230\u7f13\u5b58\u4e2d\uff0c\u8fdb\u5165 Dirty \u72b6\u6001\u3002\u5982\u679c\u5176\u4ed6\u7f13\u5b58\u662f Valid/Reserved/Dirty \u72b6\u6001\uff0c\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u91cc\u8bfb\u53d6\u6570\u636e\uff0c\u8ba9\u5176\u4ed6\u7f13\u5b58\u90fd\u8fdb\u5165 Invalid \u72b6\u6001\uff0c\u7136\u540e\u66f4\u65b0\u81ea\u5df1\u7684\u6570\u636e\uff0c\u8fdb\u5165 Dirty \u72b6\u6001\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#msi","title":"MSI \u534f\u8bae","text":"<p>MSI \u534f\u8bae\u6bd4\u8f83\u7b80\u5355\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e09\u4e2a\u72b6\u6001\uff1a</p> <ol> <li>Modified\uff1a\u8868\u793a\u6570\u636e\u5df2\u7ecf\u4fee\u6539\uff0c\u548c\u5185\u5b58\u91cc\u4e0d\u4e00\u81f4</li> <li>Shared\uff1a\u6570\u636e\u548c\u5185\u5b58\u4e00\u81f4\uff0c\u53ef\u4ee5\u6709\u4e00\u5230\u591a\u4e2a\u7f13\u5b58\u540c\u65f6\u5904\u5728 Shared \u72b6\u6001</li> <li>Invalid\uff1a\u4e0d\u5728\u7f13\u5b58\u4e2d</li> </ol> <p>\u5f53 Read hit \u7684\u65f6\u5019\uff0c\u72b6\u6001\u4e0d\u53d8\u3002</p> <p>\u5f53 Read miss \u7684\u65f6\u5019\uff0c\u68c0\u67e5\u5176\u4ed6\u7f13\u5b58\u7684\u72b6\u6001\uff0c\u5982\u679c\u90fd\u662f Invalid\uff0c\u5c31\u4ece\u5185\u5b58\u91cc\u8bfb\u53d6\uff0c\u7136\u540e\u8fdb\u5165 Shared \u72b6\u6001\u3002\u5982\u679c\u6709 Shared\uff0c\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u5904\u8bfb\u53d6\u3002\u5982\u679c\u6709 Dirty\uff0c\u90a3\u5c31\u8981\u628a\u5176\u4ed6\u7f13\u5b58\u7684\u6570\u636e\u5199\u5165\u5185\u5b58\u548c\u672c\u5730\u7f13\u5b58\uff0c\u7136\u540e\u8fdb\u5165 Shared \u72b6\u6001\u3002</p> <p>\u5f53 Write hit \u7684\u65f6\u5019\uff0c\u5982\u679c\u73b0\u5728\u662f Shared \u72b6\u6001\uff0c\u5219\u8981\u8ba9\u5176\u4ed6\u7684 Shared \u7f13\u5b58\u8fdb\u5165 Invalid \u72b6\u6001\uff0c\u7136\u540e\u66f4\u65b0\u6570\u636e\uff0c\u8fdb\u5165 Modified \u72b6\u6001\u3002\u5982\u679c\u662f Modified \u72b6\u6001\uff0c\u90a3\u5c31\u4fee\u6539\u6570\u636e\uff0c\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u5f53 Write miss \u7684\u65f6\u5019\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7f13\u5b58\u5904\u4e8e Modified/Shared \u72b6\u6001\uff0c\u90a3\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u5904\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u8ba9\u5176\u4ed6\u7f13\u5b58\u8fdb\u5165 Invalid \u72b6\u6001\uff0c\u7136\u540e\u4fee\u6539\u672c\u5730\u6570\u636e\uff0c\u8fdb\u5165 Modified \u72b6\u6001\u3002\u5982\u679c\u6240\u6709\u7f13\u5b58\u90fd\u662f Invalid \u72b6\u6001\uff0c\u90a3\u5c31\u4ece\u5185\u5b58\u8bfb\u5165\uff0c\u7136\u540e\u4fee\u6539\u7f13\u5b58\u6570\u636e\uff0c\u8fdb\u5165 Modified \u72b6\u6001\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#mesi","title":"MESI \u534f\u8bae","text":"<p>MESI \u534f\u8bae\u5b9a\u4e49\u4e86\u56db\u79cd\u72b6\u6001\uff1a</p> <ol> <li>Modified\uff1a\u6570\u636e\u4e0e\u5185\u5b58\u4e0d\u4e00\u81f4\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u6570\u636e</li> <li>Exclusive\uff1a\u6570\u636e\u4e0e\u5185\u5b58\u4e00\u81f4\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u6570\u636e</li> <li>Shared\uff1a\u6570\u636e\u4e0e\u5185\u5b58\u4e00\u81f4\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u7f13\u5b58\u540c\u65f6\u6709\u6570\u636e</li> <li>Invalid\uff1a\u4e0d\u5728\u7f13\u5b58\u4e2d</li> </ol> <p>\u5f53 Read hit \u7684\u65f6\u5019\uff0c\u72b6\u6001\u4e0d\u53d8\u3002</p> <p>\u5f53 Read miss \u7684\u65f6\u5019\uff0c\u9996\u5148\u4f1a\u68c0\u67e5\u5176\u4ed6\u7f13\u5b58\u7684\u72b6\u6001\uff0c\u5982\u679c\u6709\u6570\u636e\uff0c\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u4e14\u90fd\u8fdb\u5165 Shared \u72b6\u6001\uff0c\u5982\u679c\u5176\u4ed6\u7f13\u5b58\u5904\u4e8e Modified \u72b6\u6001\uff0c\u8fd8\u9700\u8981\u628a\u6570\u636e\u5199\u5165\u5185\u5b58\uff1b\u5982\u679c\u5176\u4ed6\u7f13\u5b58\u90fd\u6ca1\u6709\u6570\u636e\uff0c\u5c31\u4ece\u5185\u5b58\u91cc\u8bfb\u53d6\uff0c\u7136\u540e\u8fdb\u5165 Exclusive \u72b6\u6001\u3002</p> <p>\u5f53 Write hit \u7684\u65f6\u5019\uff0c\u8fdb\u5165 Modified \u72b6\u6001\uff0c\u540c\u65f6\u8ba9\u5176\u4ed6\u7f13\u5b58\u8fdb\u5165 Invalid \u72b6\u6001\u3002</p> <p>\u5f53 Write miss \u7684\u65f6\u5019\uff0c\u68c0\u67e5\u5176\u4ed6\u7f13\u5b58\u7684\u72b6\u6001\uff0c\u5982\u679c\u6709\u6570\u636e\uff0c\u5c31\u4ece\u5176\u4ed6\u7f13\u5b58\u8bfb\u53d6\uff0c\u5426\u5219\u4ece\u5185\u5b58\u8bfb\u53d6\u3002\u7136\u540e\uff0c\u5176\u4ed6\u7f13\u5b58\u90fd\u8fdb\u5165 Invalid \u72b6\u6001\uff0c\u672c\u5730\u7f13\u5b58\u66f4\u65b0\u6570\u636e\uff0c\u8fdb\u5165 Modified \u72b6\u6001\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cShared \u72b6\u6001\u4e0d\u4e00\u5b9a\u8868\u793a\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u6570\u636e\uff1a\u6bd4\u5982\u672c\u6765\u6709\u4e24\u4e2a\u7f13\u5b58\u90fd\u662f Shared \u72b6\u6001\uff0c\u7136\u540e\u5176\u4e2d\u4e00\u4e2a\u56e0\u4e3a\u7f13\u5b58\u66ff\u6362\u53d8\u6210\u4e86 Invalid\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u662f\u4e0d\u4f1a\u53d7\u5230\u901a\u77e5\u53d8\u6210 Exclusive \u7684\u3002Exclusive \u7684\u8bbe\u7f6e\u662f\u4e3a\u4e86\u51cf\u5c11\u4e00\u4e9b\u603b\u7ebf\u8bf7\u6c42\uff0c\u6bd4\u5982\u5f53\u6570\u636e\u53ea\u6709\u4e00\u4e2a\u6838\u5fc3\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u53ea\u6709\u7b2c\u4e00\u6b21 Read miss \u4f1a\u53d1\u9001\u603b\u7ebf\u8bf7\u6c42\uff0c\u4e4b\u540e\u4e00\u76f4\u5728 Exclusive/Modified \u72b6\u6001\u4e2d\uff0c\u4e0d\u9700\u8981\u53d1\u9001\u603b\u7ebf\u8bf7\u6c42\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#moesi","title":"MOESI \u534f\u8bae","text":"<p>MOESI \u5b9a\u4e49\u4e86\u4e94\u4e2a\u72b6\u6001\uff1a</p> <ol> <li>Modified\uff1a\u6570\u636e\u7ecf\u8fc7\u4fee\u6539\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e</li> <li>Owned\uff1a\u540c\u65f6\u6709\u591a\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e\uff0c\u4f46\u662f\u53ea\u6709\u8fd9\u4e2a\u7f13\u5b58\u53ef\u4ee5\u4fee\u6539\u6570\u636e</li> <li>Exclusive\uff1a\u6570\u636e\u6ca1\u6709\u4fee\u6539\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e</li> <li>Shared\uff1a\u540c\u65f6\u6709\u591a\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u80fd\u4fee\u6539\u6570\u636e</li> <li>Invalid\uff1a\u4e0d\u5728\u7f13\u5b58\u4e2d</li> </ol> <p>\u72b6\u6001\u4e2d\uff0cM \u548c E \u662f\u72ec\u5360\u7684\uff0c\u6240\u6709\u7f13\u5b58\u91cc\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u540c\u65f6\u6709\u591a\u4e2a S\uff0c\u6216\u8005\u591a\u4e2a S \u52a0\u4e00\u4e2a O\uff0c\u4f46\u662f\u4e0d\u80fd\u540c\u65f6\u6709\u591a\u4e2a O\u3002</p> <p>\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u4e0e MESI \u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e\uff1a\u5f53\u6838\u5fc3\u5199\u5165 Owned \u72b6\u6001\u7684\u7f13\u5b58\u65f6\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a1\uff09\u901a\u77e5\u5176\u4ed6 Shared \u7684\u7f13\u5b58\u66f4\u65b0\u6570\u636e\uff1b2\uff09\u628a\u5176\u4ed6 Shared \u7f13\u5b58\u8bbe\u4e3a Invalid\uff0c\u7136\u540e\u672c\u5730\u7f13\u5b58\u8fdb\u5165 Modified \u72b6\u6001\u3002\u5728 Read miss \u7684\u65f6\u5019\uff0c\u5219\u53ef\u4ee5\u4ece Owned \u7f13\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u8fdb\u5165 Shared \u72b6\u6001\uff0c\u800c\u4e0d\u7528\u5199\u5165\u5185\u5b58\u3002\u5b83\u76f8\u6bd4 MESI \u7684\u597d\u5904\u662f\uff0c\u51cf\u5c11\u4e86\u5199\u56de\u5185\u5b58\u7684\u6b21\u6570\u3002</p> <p>AMD64 \u6587\u6863\u91cc\u91c7\u7528\u7684\u5c31\u662f MOESI \u534f\u8bae\u3002AMBA ACE \u534f\u8bae\u5176\u5b9e\u4e5f\u662f MOESI \u534f\u8bae\uff0c\u53ea\u4e0d\u8fc7\u6362\u4e86\u4e00\u4e9b\u540d\u79f0\uff0c\u8868\u793a\u53ef\u4ee5\u517c\u5bb9 MEI/MESI/MOESI \u4e2d\u7684\u4e00\u4e2a\u534f\u8bae\u3002ACE \u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a</p> <ol> <li>UniqueDirty: Modified</li> <li>SharedDirty: Owned</li> <li>UniqueClean: Exclusive</li> <li>SharedClean: Shared</li> <li>Invalid: Invalid</li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSharedClean \u5e76\u4e0d\u4ee3\u8868\u5b83\u7684\u6570\u636e\u548c\u5185\u5b58\u4e00\u81f4\uff0c\u6bd4\u5982\u8bf4\u548c SharedDirty \u7f13\u5b58\u4e00\u81f4\uff0c\u5b83\u53ea\u662f\u8bf4\u7f13\u5b58\u66ff\u6362\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5199\u56de\u5185\u5b58\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#mesif","title":"MESIF \u534f\u8bae","text":"<p>MESIF \u5b9a\u4e49\u4e86\u4e94\u4e2a\u72b6\u6001\uff1a</p> <ol> <li>Modified\uff1a\u6570\u636e\u7ecf\u8fc7\u4fee\u6539\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e</li> <li>Exclusive\uff1a\u6570\u636e\u6ca1\u6709\u4fee\u6539\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e</li> <li>Shared\uff1a\u540c\u65f6\u6709\u591a\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u80fd\u4fee\u6539\u6570\u636e</li> <li>Invalid\uff1a\u4e0d\u5728\u7f13\u5b58\u4e2d</li> <li>Forward\uff1a\u540c\u65f6\u6709\u591a\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u80fd\u4fee\u6539\u6570\u636e\uff0c\u4e14\u8fd9\u4e2a\u7f13\u5b58\u8d1f\u8d23\u54cd\u5e94\u8bf7\u6c42</li> </ol> <p>MESIF \u76f8\u6bd4 MESI \u7684\u533a\u522b\u662f\uff0c\u6dfb\u52a0\u4e86 Forward \u72b6\u6001\uff1aForward \u5176\u5b9e\u662f\u7279\u6b8a\u7684 Shared\uff0c\u4e3b\u8981\u662f\u8003\u8651\u5230\u6709\u591a\u4e2a\u7f13\u5b58\u5904\u4e8e Shared \u72b6\u6001\u7684\u65f6\u5019\uff0c\u5982\u679c\u6765\u4e86\u4e00\u4e2a\u8bfb\u8bf7\u6c42\uff0c\u90a3\u4e48\u54ea\u4e2a Shared \u7f13\u5b58\u8d1f\u8d23\u54cd\u5e94\u662f\u4e0d\u786e\u5b9a\u7684\u3002MESIF \u534f\u8bae\u4e2d\uff0cForward \u5c31\u662f\u8d1f\u8d23\u54cd\u5e94\u7684\u90a3\u4e00\u4e2a Shared\uff0c\u6240\u4ee5 Forward \u6700\u591a\u53ea\u6709\u4e00\u4e2a\uff0c\u5176\u4ed6 Shared \u90fd\u4e0d\u4f1a\u54cd\u5e94\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u7b80\u5316\u4e86\u5728\u7247\u4e0a\u7f51\u7edc\u7684\u4f20\u8f93\u3002</p> <p>\u5982\u679c\u591a\u4e2a Cache \u5c5e\u4e8e Shared \u72b6\u6001\uff0c\u6ca1\u6709 Forward\uff0c\u90a3\u4e48\u65b0\u7684 Cache \u8bf7\u6c42\u5c31\u4f1a\u53d1\u9001\u5230\u5185\u5b58\u91cc\uff0c\u7531\u4e8e Shared \u7684\u6570\u636e\u6ca1\u6709\u7ecf\u8fc7\u4fee\u6539\uff0c\u6240\u4ee5\u5185\u5b58\u4e2d\u7684\u6570\u636e\u548c Shared \u662f\u4e00\u81f4\u7684\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a\u65b0\u7684 Cache \u4f1a\u8fdb\u5165 Forward \u72b6\u6001\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#dragon","title":"Dragon \u534f\u8bae","text":"<p>Dragon \u534f\u8bae\u662f\u4e00\u4e2a\u57fa\u4e8e\u66f4\u65b0\u7684\u534f\u8bae\uff0c\u610f\u5473\u7740\u5199\u5165\u7f13\u5b58\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u66f4\u65b0\u7684\u6570\u636e\u540c\u6b65\u5230\u62e5\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u5176\u4ed6\u6838\u5fc3\u3002\u5b83\u5b9a\u4e49\u4e86\u56db\u4e2a\u72b6\u6001\uff1a</p> <ol> <li>Exclusive clean(E)\uff1a\u72ec\u5360\uff0c\u5e76\u4e14\u6570\u636e\u548c\u5185\u5b58\u4e00\u81f4</li> <li>Shared clean(Sc)\uff1a\u6570\u636e\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7f13\u5b58\u4e2d\uff0c\u5e76\u4e14\u81ea\u5df1\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5199\u5165\u8be5\u7f13\u5b58\u6570\u636e\u7684</li> <li>Shared modified(Sm)\uff1a\u6570\u636e\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7f13\u5b58\u4e2d\uff0c\u5e76\u4e14\u81ea\u5df1\u8bbe\u6700\u540e\u4e00\u4e2a\u5199\u5165\u8be5\u7f13\u5b58\u6570\u636e\u7684\uff0c\u7c7b\u4f3c\u4e8e\u524d\u9762 MOESI \u534f\u8bae\u7684 Owner \u72b6\u6001</li> <li>Modify(M)\uff1a\u72ec\u5360\uff0c\u5e76\u4e14\u6570\u636e\u548c\u5185\u5b58\u4e0d\u4e00\u81f4</li> </ol> <p>\u53ef\u4ee5\u770b\u5230\uff0cE \u548c M \u90fd\u662f\u72ec\u5360\u7684\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u591a\u4e2a\u7f13\u5b58\u6709\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\uff0c\u90a3\u5c31\u662f\u82e5\u5e72\u4e2a Sc \u548c\u4e00\u4e2a Sm\u3002</p> <p>\u5f53 Read miss \u7684\u65f6\u5019\uff0c\u5728\u603b\u7ebf\u4e0a\u68c0\u67e5\u662f\u5426\u6709\u7f13\u5b58\u5df2\u7ecf\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u4ece\u5185\u5b58\u8bfb\u53d6\u5e76\u8f6c\u5230 Exclusive clean \u72b6\u6001\uff1b\u5982\u679c\u5df2\u7ecf\u5728\u5176\u4ed6\u7f13\u5b58\u4e2d\uff0c\u5219\u4ece\u5176\u4ed6\u7f13\u5b58\u8bfb\u53d6\uff0c\u5c06\u5176\u4ed6\u7f13\u5b58\u8f6c\u79fb\u5230 Shared clean/Shared modified \u72b6\u6001\uff0c\u7136\u540e\u8be5\u7f13\u5b58\u8f6c\u79fb\u5230 Shared clean \u72b6\u6001\u3002</p> <p>\u5f53 Write miss \u7684\u65f6\u5019\uff0c\u540c\u6837\u68c0\u67e5\u5176\u4ed6\u7f13\u5b58\u7684\u72b6\u6001\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\uff0c\u5c31\u4ece\u5185\u5b58\u8bfb\u53d6\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u7136\u540e\u8f6c\u5230 Modify \u72b6\u6001\uff1b\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\uff0c\u5c31\u8fdb\u5165 Shared modified \u72b6\u6001\uff0c\u5e76\u4e14\u8ba9\u539f\u6765 Shared modified \u7684\u7f13\u5b58\u8fdb\u5165 Shared clean \u72b6\u6001\u3002</p> <p>\u5f53 Write hit \u7684\u65f6\u5019\uff0c\u5982\u679c\u72b6\u6001\u662f Shared modified\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u901a\u77e5\u5176\u4ed6\u7f13\u5b58\u66f4\u65b0\u6570\u636e\uff1b\u5982\u679c\u72b6\u6001\u662f Shared clean\uff0c\u5219\u8981\u901a\u77e5\u5176\u4ed6\u7f13\u5b58\u66f4\u65b0\u6570\u636e\u7684\u540c\u65f6\uff0c\u8ba9\u539f\u6765 Shared modified \u7684\u7f13\u5b58\u8fdb\u5165 Shared clean \u72b6\u6001\uff1b\u5982\u679c\u72b6\u6001\u662f Exclusive clean\uff0c\u5219\u8fdb\u5165 Modify \u72b6\u6001\u3002</p> <p>\u5728\u8fd9\u91cc\uff0cShared modified \u7684\u7f13\u5b58\u8d1f\u8d23\u5728\u6362\u51fa\u7684\u65f6\u5019\uff0c\u5199\u5165\u6570\u636e\u5230\u5185\u5b58\u4e2d\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#_3","title":"\u57fa\u4e8e\u76ee\u5f55\u7684\u7f13\u5b58\u4e00\u81f4\u6027","text":"<p>\u4e0a\u9762\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u4e2d\uff0c\u7ecf\u5e38\u6709\u8fd9\u4e48\u4e00\u4e2a\u64cd\u4f5c\uff1a\u5411\u6240\u6709\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u7f13\u5b58\u53d1\u9001/\u63a5\u53d7\u6d88\u606f\u3002\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u5e7f\u64ad\uff0c\u7136\u540e\u63a5\u53d7\u7aef\u81ea\u5df1\u5224\u65ad\u662f\u5426\u5904\u7406\u3002\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u5728\u6838\u5fc3\u5f88\u591a\u7684\u65f6\u5019\u4f1a\u5bfc\u81f4\u5e7f\u64ad\u6d41\u91cf\u592a\u5927\uff0c\u56e0\u6b64\u9700\u8981\u5148\u4fdd\u5b58\u4e0b\u6765\u54ea\u4e9b\u7f13\u5b58\u4f1a\u6709\u8fd9\u4e2a\u7f13\u5b58\u7684\u4fe1\u606f\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u7f13\u5b58\u70b9\u5bf9\u70b9\u5730\u53d1\u9001\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u7f51\u7edc\u6d41\u91cf\u3002</p> <p>\u600e\u4e48\u8bb0\u5f55\u8fd9\u4e2a\u4fe1\u606f\u5462\uff1f\u4e00\u4e2a\u7b80\u5355\u7684\u529e\u6cd5\uff08Full bit vector format\uff09\u662f\uff0c\u6709\u4e00\u4e2a\u5168\u5c40\u7684\u8868\uff0c\u5bf9\u6bcf\u4e2a\u7f13\u5b58\u884c\uff0c\u90fd\u8bb0\u5f55\u4e00\u4e2a\u5927\u5c0f\u4e3a N\uff08N \u4e3a\u6838\u5fc3\u6570\uff09\u7684\u4f4d\u5411\u91cf\uff0c1 \u8868\u793a\u5bf9\u5e94\u7684\u6838\u5fc3\u4e2d\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\u3002\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u4fdd\u5b58\u6570\u636e\u91cf\u592a\u5927\uff1a\u7f13\u5b58\u884c\u6570\u6b63\u6bd4\u4e8e N\uff0c\u8fd8\u8981\u518d\u4e58\u4ee5\u4e00\u6b21 N\uff0c\u603b\u5bb9\u91cf\u662f $O(N^2)$ \u7684\u3002</p> <p>\u4e00\u4e2a\u7a0d\u5fae\u597d\u4e00\u4e9b\u7684\u65b9\u6cd5\uff08Coarse bit vector format\uff09\u662f\uff0c\u6211\u628a\u6838\u5fc3\u5206\u7ec4\uff0c\u6bd4\u5982\u6309\u7167 NUMA \u8282\u70b9\u8fdb\u884c\u5212\u5206\uff0c\u6b64\u65f6\u6bcf\u4e2a\u7f13\u5b58\u884c\u90fd\u4fdd\u5b58\u4e00\u4e2a\u5927\u5c0f\u4e3a M\uff08M \u4e3a NUMA \u6570\u91cf\uff09\u7684\u4f4d\u5411\u91cf\uff0c\u53ea\u8981\u8fd9\u4e2a NUMA \u8282\u70b9\u91cc\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\uff0c\u5bf9\u5e94\u4f4d\u5c31\u53d6 1\u3002\u8fd9\u6837\u76f8\u5f53\u4e8e\u662f\u4ee5\u727a\u7272\u4e00\u90e8\u5206\u6d41\u91cf\u4e3a\u4ee3\u4ef7\uff08NUMA \u8282\u70b9\u5185\u90e8\u5e7f\u64ad\uff09\uff0c\u6765\u8282\u7701\u4e00\u4e9b\u76ee\u5f55\u7684\u5b58\u50a8\u7a7a\u95f4\u3002</p> <p>\u4f46\u5b9e\u9645\u4e0a\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u7f13\u5b58\u884c\u901a\u5e38\u53ea\u4f1a\u5728\u5f88\u5c11\u7684\u6838\u5fc3\u4e2d\u4fdd\u5b58\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u5f88\u5927\u7684\u4f18\u5316\u7a7a\u95f4\u3002\u6bd4\u5982\u8bf4\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7f13\u5b58\u884c\u540c\u65f6\u51fa\u73b0\u7684\u7f13\u5b58\u6570\u91cf\u4e0a\u9650\uff08Limited pointer format\uff09\uff0c\u7136\u540e\u4fdd\u5b58\u6838\u5fc3\u7684\u4e0b\u6807\u800c\u4e0d\u662f\u4f4d\u5411\u91cf\uff0c\u8fd9\u6837\u7684\u5b58\u50a8\u7a7a\u95f4\u5c31\u662f $O(N\\log_2N)$\u3002\u4f46\u662f\u5462\uff0c\u8fd9\u6837\u9650\u5236\u4e86\u7f13\u5b58\u884c\u540c\u65f6\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c\u8d85\u8fc7\u4e86\u4e0a\u9650\uff0c\u9700\u8981\u66ff\u6362\u6389\u5df2\u6709\u7684\u7f13\u5b58\uff0c\u53ef\u80fd\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u6027\u80fd\u4f1a\u964d\u4f4e\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u94fe\u8868 (Chained directory format)\u3002\u76ee\u5f55\u4e2d\u4fdd\u5b58\u6700\u540e\u4e00\u6b21\u8bbf\u95ee\u7684\u6838\u5fc3\u7f16\u53f7\uff0c\u7136\u540e\u6bcf\u4e2a\u6838\u5fc3\u7684\u7f13\u5b58\u91cc\uff0c\u4fdd\u5b58\u4e86\u4e0b\u4e00\u4e2a\u4fdd\u5b58\u4e86\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u6838\u5fc3\u7f16\u53f7\uff0c\u6216\u8005\u8868\u793a\u94fe\u8868\u7ec8\u6b62\u3002\u8fd9\u6837\u5b58\u50a8\u7a7a\u95f4\u4e5f\u662f $O(N\\log_2N)$\uff0c\u4e0d\u8fc7\u53d1\u9001\u6d88\u606f\u7684\u5ef6\u8fdf\u66f4\u957f\uff0c\u56e0\u4e3a\u8981\u4e32\u884c\u904d\u5386\u4e00\u904d\uff0c\u800c\u4e0d\u80fd\u540c\u65f6\u53d1\u9001\u3002\u7c7b\u4f3c\u5730\uff0c\u53ef\u4ee5\u7528\u4e8c\u53c9\u6811\uff08Number-balanced binary tree format\uff09\u6765\u7ec4\u7ec7\uff1a\u6bcf\u4e2a\u7f13\u5b58\u4fdd\u5b58\u4e24\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u7136\u540e\u5206\u522b\u904d\u5386\uff0c\u76ee\u7684\u8fd8\u662f\u52a0\u5feb\u904d\u5386\u7684\u901f\u5ea6\uff0c\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u6d88\u606f\u7ed9\u591a\u4e2a\u6838\u5fc3\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#_4","title":"\u534f\u8bae\u5206\u6790","text":"<p>\u4e0b\u6587\u7ed3\u5408\u5b9e\u9645\u7684\u534f\u8bae\uff0c\u5206\u6790\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u662f\u5982\u4f55\u5728\u786c\u4ef6\u4e2d\u5b9e\u73b0\u7684\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#tilelink","title":"TileLink \u534f\u8bae","text":"<p>TileLink \u4e3a\u4e86\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\uff0c\u5728\u5df2\u6709\u7684 A \u548c D channel \u4ee5\u5916\uff0c\u5b83\u5f15\u5165\u4e86\u4e09\u4e2a channel\uff1aB\u3001C \u548c E\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>Acquire\uff1aM-&gt;S \u5728 A channel \u4e0a\u53d1\u9001 Acquire\uff0cS-&gt;M \u5728 D channel \u4e0a\u53d1\u9001 Grant\uff0c\u7136\u540e M-&gt;S \u5728 E channel \u4e0a\u53d1\u9001 GrantAck\uff1b\u529f\u80fd\u662f\u83b7\u53d6\u4e00\u4e2a copy\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u548c Get \u662f\u7c7b\u4f3c\u7684\uff0c\u90fd\u662f\u5728 A channel \u4e0a\u53d1\u9001\u8bf7\u6c42\uff0c\u5728 D channel \u4e0a\u63a5\u53d7\u54cd\u5e94\uff0c\u53ea\u4e0d\u8fc7\u989d\u5916\u9700\u8981\u5728 E channel \u4e0a\u53d1\u9001 GrantAck\u3002</li> <li>Release\uff1aM-&gt;S \u5728 C channel \u4e0a\u53d1\u9001 Release\uff0cS-&gt;M \u5728 D channel \u4e0a\u53d1\u9001 ReleaseAck\uff1b\u529f\u80fd\u662f\u5220\u9664\u81ea\u5df1\u7684 copy\uff0c\u4e00\u822c\u662f\u7f13\u5b58\u884c\u8981\u88ab\u6362\u51fa\u7684\u65f6\u5019\uff0c\u53d1\u9001 ReleaseData \u6765\u5199\u56de Dirty \u6570\u636e</li> <li>Probe\uff1aS-&gt;M \u5728 B channel \u4e0a\u53d1\u9001 Probe\uff0cM-&gt;S \u5728 C channel \u4e0a\u53d1\u9001 ProbeAck\uff1b\u529f\u80fd\u662f\u8981\u6c42 M \u5220\u9664\u81ea\u5df1\u7684 copy\uff0c\u901a\u5e38\u662f\u6709\u67d0\u4e00\u4e2a\u7f13\u5b58\u53d1\u9001\u4e86 Acquire\uff0c\u5bfc\u81f4\u5176\u4ed6\u7f13\u5b58\u9700\u8981\u964d\u4f4e\u6743\u9650</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\uff0cA C E \u4e09\u4e2a channel \u662f M-&gt;S\uff0cB D \u4e24\u4e2a channel \u662f S-&gt;M\u3002</p> <p>\u5047\u5982\u4e00\u4e2a\u7f13\u5b58\uff08Master A\uff09\u8981\u5199\u5165\u4e00\u5757\u53ea\u8bfb\u6570\u636e\uff0c\u6216\u8005\u8bfb\u53d6\u4e00\u5757 miss \u7684\u7f13\u5b58\u884c\uff0c\u5982\u679c\u662f\u5e7f\u64ad\u5f0f\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u90a3\u4e48\u9700\u8981\u7ecf\u5386\u5982\u4e0b\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>Master A -&gt; Slave: Acquire</li> <li>Slave -&gt; Master B: Probe</li> <li>Master B -&gt; Slave: ProbeAck</li> <li>Slave -&gt; Master A: Grant</li> <li>Master A -&gt; Slave: GrantAck</li> </ul> <p>\u9996\u5148 Master A \u53d1\u51fa Acquire \u8bf7\u6c42\uff0c\u7136\u540e Slave \u5411\u5176\u4ed6 Master \u5e7f\u64ad Probe\uff0c\u7b49\u5230\u5176\u4ed6 Master \u8fd4\u56de ProbeAck \u540e\uff0c\u518d\u5411 Master A \u8fd4\u56de Grant\uff0c\u6700\u540e Master A \u53d1\u9001 GrantAck \u7ed9 Slave\u3002\u8fd9\u6837 Master A \u5c31\u83b7\u5f97\u4e86\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u5e76\u4e14\u8ba9 Master B \u7684\u7f13\u5b58\u884c\u5931\u6548\u6216\u8005\u72b6\u6001\u53d8\u6210\u53ea\u8bfb\u3002</p> <p>TileLink \u7684\u7f13\u5b58\u884c\u6709\u4e09\u4e2a\u72b6\u6001\uff1aNone\uff0cBranch \u548c Trunk(Tip)\u3002\u57fa\u672c\u5bf9\u5e94 MSI \u6a21\u578b\uff1aNone-&gt;Invalid\uff0cBranch-&gt;Shared \u548c Trunk-&gt;Modified\u3002Rocket Chip \u4ee3\u7801\u4e2d ClientStates \u8fd8\u5b9a\u4e49\u4e86 Dirty \u72b6\u6001\uff0c\u5927\u81f4\u5bf9\u5e94 MESI \u6a21\u578b\uff1aNone-&gt;Invalid\uff0cBranch-&gt;Shared\uff0cTrunk-&gt;Exclusive\uff0cDirty-&gt;Modified\u3002</p> <p>\u6b64\u5916\uff0c\u6807\u51c6\u8fd8\u8bf4\u53ef\u4ee5\u5728 B \u548c C channel \u4e0a\u8fdb\u884c TL-UH \u7684\u64cd\u4f5c\u3002\u6807\u51c6\u8fd9\u4e48\u8bbe\u8ba1\u7684\u610f\u56fe\u662f\u53ef\u4ee5\u8ba9 Slave \u8f6c\u53d1\u64cd\u4f5c\u5230\u62e5\u6709\u7f13\u5b58\u6570\u636e\u7684 Master \u4e0a\u3002\u6bd4\u5982 Master A \u5728 A channel \u4e0a\u53d1\u9001 Put \u8bf7\u6c42\uff0c\u90a3\u4e48 Slave \u5411 Master B \u7684 B channel \u4e0a\u53d1\u9001 Put \u8bf7\u6c42\uff0cMaster B \u5728 C channel \u4e0a\u53d1\u9001 AccessAck \u54cd\u5e94\uff0cSlave \u518d\u628a\u54cd\u5e94\u8f6c\u56de Master A \u7684 D channel\u3002\u8fd9\u5c31\u50cf\u662f\u4e00\u4e2a\u7247\u4e0a\u7684\u7f51\u7edc\uff0cSlave \u8d1f\u8d23\u5728 Master \u4e4b\u95f4\u8def\u7531\u8bf7\u6c42\u3002</p> <p>\u63a5\u4e0b\u6765\u770b Rocket Chip \u81ea\u5e26\u7684\u57fa\u4e8e\u5e7f\u64ad\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u5b9e\u73b0\u3002\u6838\u5fc3\u5b9e\u73b0\u662f TLBroadcast\uff0c\u6838\u5fc3\u7684\u903b\u8f91\u5c31\u662f\uff0c\u5982\u679c\u4e00\u4e2a Master A \u53d1\u9001\u4e86 Acquire\uff0c\u90a3\u4e48 TLBroadcast \u9700\u8981\u53d1\u9001 Probe \u5230\u5176\u4ed6\u7684 Master\uff0c\u5f53\u5176\u4ed6\u7684 Master \u90fd\u54cd\u5e94\u4e86 ProbeAck \u540e\uff0c\u518d\u8fd4\u56de Grant \u5230 Master A\u3002</p> <p>\u9996\u5148\u6765\u770b B channel \u4e0a\u7684 Probe \u903b\u8f91\u3002\u5b83\u8bb0\u5f55\u4e86\u4e00\u4e2a todo bitmask\uff0c\u8868\u793a\u54ea\u4e9b Master \u9700\u8981\u53d1\u9001 Probe\uff0c\u8fd9\u91cc\u91c7\u7528\u4e86 Probe Filter \u6765\u51cf\u5c11\u53d1\u9001 Probe \u7684\u6b21\u6570\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u5411\u62e5\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684 Master \u53d1\u9001 Probe\uff1a</p> <pre><code>val probe_todo = RegInit(0.U(max(1, caches.size).W))\nval probe_line = Reg(UInt())\nval probe_perms = Reg(UInt(2.W))\nval probe_next = probe_todo &amp; ~(leftOR(probe_todo) &lt;&lt; 1)\nval probe_busy = probe_todo.orR()\nval probe_target = if (caches.size == 0) 0.U else Mux1H(probe_next, cache_targets)\n\n// Probe whatever the FSM wants to do next\nin.b.valid := probe_busy\nif (caches.size != 0) {\n    in.b.bits := edgeIn.Probe(probe_line &lt;&lt; lineShift, probe_target, lineShift.U, probe_perms)._2\n}\nwhen (in.b.fire()) { probe_todo := probe_todo &amp; ~probe_next }\n</code></pre> <p>\u8fd9\u91cc <code>probe_next</code> \u5c31\u662f\u88ab probe \u7684\u90a3\u4e2a Master \u5bf9\u5e94\u7684 bitmask\uff0c<code>probe_target</code> \u5c31\u662f Master \u7684 Id\u3002\u8fd9\u4e2a Probe FSM \u7684\u8f93\u5165\u5c31\u662f Probe Filter\uff0c\u5b83\u4f1a\u7ed9\u51fa\u54ea\u4e9b Cache \u62e5\u6709\u5f53\u524d\u7684\u7f13\u5b58\u884c\u7684\u4fe1\u606f\uff1a</p> <pre><code>val leaveB = !filter.io.response.bits.needT &amp;&amp; !filter.io.response.bits.gaveT\nval others = filter.io.response.bits.cacheOH &amp; ~filter.io.response.bits.allocOH\nval todo = Mux(leaveB, 0.U, others)\nfilter.io.response.ready := !probe_busy\nwhen (filter.io.response.fire()) {\n    probe_todo  := todo\n    probe_line  := filter.io.response.bits.address &gt;&gt; lineShift\n    probe_perms := Mux(filter.io.response.bits.needT, TLPermissions.toN, TLPermissions.toB)\n}\n</code></pre> <p>\u8fd9\u91cc\u53c8\u533a\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u5982\u679c Acquire \u9700\u8981\u8fdb\u5165 Trunk \u72b6\u6001\uff08\u6bd4\u5982\u662f\u4e2a\u5199\u5165\u64cd\u4f5c\uff09\uff0c\u610f\u5473\u7740\u5176\u4ed6 Master \u9700\u8981\u8fdb\u5165 None \u72b6\u6001\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u53d1\u9001 toN\uff1b\u5982\u679c Acquire \u4e0d\u9700\u8981\u8fdb\u5165 Trunk \u72b6\u6001\uff08\u6bd4\u5982\u662f\u4e2a\u8bfb\u53d6\u64cd\u4f5c\uff09\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5176\u4ed6 Master \u8fdb\u5165 Branch \u72b6\u6001\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u53d1\u9001 toB\u3002</p> <p>\u5728 B channel \u53d1\u9001 Probe \u7684\u540c\u65f6\uff0c\u4e5f\u8981\u5904\u7406 C channel \u4e0a\u7684 ProbeAck \u548c ProbeAckData\uff1a</p> <pre><code>// Incoming C can be:\n// ProbeAck     =&gt; decrement tracker, drop \n// ProbeAckData =&gt; decrement tracker, send out A as PutFull(DROP)\n// ReleaseData  =&gt;                    send out A as PutFull(TRANSFORM)\n// Release      =&gt; send out D as ReleaseAck\n</code></pre> <p>\u7531\u4e8e\u8fd9\u91cc\u91c7\u7528\u7684\u662f invalidation based\uff0c\u6240\u4ee5\u5982\u679c\u67d0\u4e2a Master \u4e4b\u524d\u5904\u4e8e Dirty \u72b6\u6001\uff0c\u90a3\u4e48\u5b83\u4f1a\u53d1\u9001 ProbeAckData\uff0c\u6b64\u65f6\u9700\u8981\u628a\u6570\u636e\u5199\u56de\uff0c\u6240\u4ee5\u9700\u8981\u7528 PutFull \u628a\u6570\u636e\u5199\u51fa\u53bb\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#ace","title":"ACE \u534f\u8bae","text":"<p>ACE \u5728 AXI \u534f\u8bae\u7684\u57fa\u7840\u4e0a\uff0c\u5b9e\u73b0\u4e86\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002\u9996\u5148\u5217\u51fa ACE \u7684\u7f13\u5b58\u72b6\u6001\u6a21\u578b\uff0c\u5b83\u5b9a\u4e49\u4e86\u8fd9\u4e48\u4e94\u79cd\u72b6\u6001\uff0c\u5176\u5b9e\u5c31\u662f MOESI \u7684\u4e0d\u540c\u8bf4\u6cd5\uff1a</p> <ol> <li>UniqueDirty: Modified</li> <li>SharedDirty: Owned</li> <li>UniqueClean: Exclusive</li> <li>SharedClean: Shared</li> <li>Invalid: Invalid</li> </ol> <p>\u6587\u6863\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>Valid, Invalid: When valid, the cache line is present in the cache. When invalid, the cache line is not present in the cache.</li> <li>Unique, Shared: When unique, the cache line exists only in one cache. When shared, the cache line might exist in more than one cache, but this is not guaranteed.</li> <li>Clean, Dirty: When clean, the cache does not have responsibility for updating main memory. When dirty, the cache line has been modified with respect to main memory, and this cache must ensure that main memory is eventually updated.</li> </ul> <p>\u5927\u81f4\u7406\u89e3\u7684\u8bdd\uff0cUnique \u8868\u793a\u53ea\u6709\u4e00\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\uff0cShared \u8868\u793a\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u7f13\u5b58\u6709\u8fd9\u4e2a\u7f13\u5b58\u884c\uff1bClean \u8868\u793a\u5b83\u4e0d\u8d1f\u8d23\u66f4\u65b0\u5185\u5b58\uff0cDirty \u8868\u793a\u5b83\u8d1f\u8d23\u66f4\u65b0\u5185\u5b58\u3002\u4e0b\u9762\u7684\u5f88\u591a\u64cd\u4f5c\u90fd\u662f\u56f4\u7ed5\u8fd9\u4e9b\u72b6\u6001\u8fdb\u884c\u7684\u3002</p> <p>\u6587\u6863\u4e2d\u4e5f\u8bf4\uff0c\u5b83\u652f\u6301 MOESI \u7684\u4e0d\u540c\u5b50\u96c6\uff1aMESI, ESI, MEI, MOESI\uff0c\u6240\u4ee5\u4e5f\u8bb8\u5728\u4e00\u4e2a\u7b80\u5316\u7684\u7cfb\u7edf\u91cc\uff0c\u4e00\u4e9b\u72b6\u6001\u53ef\u4ee5\u4e0d\u5b58\u5728\uff0c\u5b9e\u73b0\u4f1a\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u6362\u4f4d\u601d\u8003\uff0c\u4f5c\u4e3a\u534f\u8bae\u7684\u8bbe\u8ba1\u8005\uff0c\u5e94\u8be5\u5982\u4f55\u6dfb\u52a0\u4fe1\u53f7\u6765\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff1f\u4ece\u9700\u6c42\u51fa\u53d1\uff0c\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u9700\u8981\u5b9e\u73b0\uff1a</p> <ol> <li>\u8bfb\u6216\u5199 miss \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bf7\u6c42\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\uff0c\u5e76\u4e14\u66f4\u65b0\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u8bfb\u53d6\u5230 Shared\uff0c\u5199\u5165\u5230 Modified \u7b49\u3002</li> <li>\u5199\u5165\u4e00\u4e2a valid &amp;&amp; !dirty \u7684\u7f13\u5b58\u884c\u7684\u65f6\u5019\uff0c\u9700\u8981\u5347\u7ea7\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u4ece Shared \u5230 Modified\u3002</li> <li>\u9700\u8981 evict \u4e00\u4e2a valid &amp;&amp; dirty \u7684\u7f13\u5b58\u884c\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a dirty \u6570\u636e\u5199\u56de\uff0c\u5e76\u4e14\u964d\u7ea7\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982 Modified -&gt; Shared/Invalid\u3002\u5982\u679c\u9700\u8981 evict \u4e00\u4e2a valid &amp;&amp; !dirty \u7684\u7f13\u5b58\u884c\uff0c\u53ef\u4ee5\u9009\u62e9\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u901a\u77e5\u4e0b\u4e00\u7ea7\u3002</li> <li>\u6536\u5230 snoop \u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fd4\u56de\u5f53\u524d\u7684\u7f13\u5b58\u6570\u636e\uff0c\u5e76\u4e14\u66f4\u65b0\u72b6\u6001\u3002</li> <li>\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u901a\u77e5\u4e0b\u4e00\u7ea7 Cache/Interconnect\uff0c\u544a\u8bc9\u5b83\u7b2c\u4e00\u548c\u7b2c\u4e8c\u6b65\u5b8c\u6210\u4e86\u3002</li> </ol> <p>\u9996\u5148\u8003\u8651\u4e0a\u9762\u63d0\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u60c5\uff1a\u8bfb\u6216\u5199 miss \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bf7\u6c42\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\uff0c\u5e76\u4e14\u66f4\u65b0\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u8bfb\u53d6\u5230 Shared\uff0c\u5199\u5165\u5230 Modified \u7b49\u3002</p> <p>AXI \u5df2\u7ecf\u6709 AR \u548c R channel \u7528\u4e8e\u8bfb\u53d6\u6570\u636e\uff0c\u90a3\u4e48\u9047\u5230\u8bfb\u6216\u8005\u5199 miss \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5728 AR channel \u4e0a\u634e\u5e26\u4e00\u4e9b\u4fe1\u606f\uff0c\u8ba9\u4e0b\u4e00\u7ea7\u7684 Interconnect \u77e5\u9053\u81ea\u5df1\u7684\u610f\u56fe\u662f\u8bfb\u8fd8\u662f\u5199\uff0c\u7136\u540e Interconnect \u5c31\u5728 R channel \u4e0a\u8fd4\u56de\u6570\u636e\u3002</p> <p>\u5177\u4f53\u8981\u634e\u5e26\u4ec0\u4e48\u4fe1\u606f\u5462\uff1f\u201c\u4e0d\u59a8\u201d\u7528\u8fd9\u6837\u4e00\u79cd\u547d\u540d\u65b9\u5f0f\uff1a<code>\u64cd\u4f5c + \u76ee\u7684\u72b6\u6001</code>\uff0c\u6bd4\u5982\u8bfb miss \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bfb\u53d6\u6570\u636e\uff0c\u8fdb\u5165 Shared \u72b6\u6001\uff0c\u90a3\u5c31\u53eb ReadShared\uff1b\u5199 miss \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bfb\u53d6\u6570\u636e\uff08\u901a\u5e38\u5199\u5165\u7f13\u5b58\u7684\u53ea\u662f\u4e00\u4e2a\u7f13\u5b58\u884c\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5148\u8981\u628a\u5b8c\u6574\u7684\u8bfb\u8fdb\u6765\uff09\uff0c\u5c31\u53eb ReadUnique\u3002\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7f16\u7801\u5230\u4e00\u4e2a\u4fe1\u53f7\u4e2d\uff0c\u4f20\u9012\u7ed9 Interconnect\u3002</p> <p>\u518d\u6765\u8003\u8651\u4e0a\u9762\u63d0\u5230\u7684\u7b2c\u4e8c\u4ef6\u4e8b\u60c5\uff1a\u5199\u5165\u4e00\u4e2a valid &amp;&amp; !dirty \u7684\u7f13\u5b58\u884c\u7684\u65f6\u5019\uff0c\u9700\u8981\u5347\u7ea7\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u4ece Shared \u5230 Modified\u3002</p> <p>\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u9700\u8981\u8ba9 Interconnect \u628a\u5176\u4ed6\u7f13\u5b58\u4e2d\u7684\u8fd9\u4e2a\u7f13\u5b58\u884c\u6570\u636e\u6e05\u7a7a\uff0c\u5e76\u4e14\u628a\u81ea\u5df1\u5347\u7ea7\u5230 Unique\u3002\u6839\u636e\u4e0a\u9762\u7684 <code>\u64cd\u4f5c + \u76ee\u7684\u72b6\u6001</code> \u7684\u547d\u540d\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bb2\u5176\u547d\u540d\u4e3a CleanUnique\uff0c\u5373\u628a\u5176\u4ed6\u7f13\u5b58\u90fd Clean \u6389\uff0c\u7136\u540e\u81ea\u5df1\u53d8\u6210 Unique\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u4e0a\u9762\u63d0\u5230\u7684\u7b2c\u4e09\u4ef6\u4e8b\u60c5\uff1a\u9700\u8981 evict \u4e00\u4e2a valid &amp;&amp; dirty \u7684\u7f13\u5b58\u884c\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a dirty \u6570\u636e\u5199\u56de\uff0c\u5e76\u4e14\u964d\u7ea7\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u6bd4\u5982 Modified -&gt; Shared/Invalid\u3002</p> <p>\u6309\u7167\u524d\u9762\u7684 <code>\u64cd\u4f5c + \u76ee\u7684\u72b6\u6001</code> \u547d\u540d\u6cd5\uff0c\u53ef\u4ee5\u547d\u540d\u4e3a WriteBackInvalid\u3002ACE \u5b9e\u9645\u91c7\u7528\u7684\u547d\u540d\u662f WriteBack\u3002</p> <p>\u7b2c\u56db\u4ef6\u4e8b\u60c5\uff1a\u6536\u5230 snoop \u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u9700\u8981\u8fd4\u56de\u5f53\u524d\u7684\u7f13\u5b58\u6570\u636e\uff0c\u5e76\u4e14\u66f4\u65b0\u72b6\u6001\u3002</p> <p>\u65e2\u7136 snoop \u662f\u4ece Interconnect \u53d1\u7ed9 Master\uff0c\u5728\u5df2\u6709\u7684 AR R AW W B channel \u91cc\u6ca1\u529e\u6cd5\u505a\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u4e0d\u7136\u4f1a\u6253\u7834\u5df2\u6709\u7684\u903b\u8f91\u3002\u90a3\u4e0d\u5f97\u4e0d\u6dfb\u52a0\u4e00\u5bf9 channel\uff1a\u89c4\u5b9a\u4e00\u4e2a AC channel \u7531 Interconnect \u53d1\u9001 snoop \u8bf7\u6c42\uff0c\u4e00\u4e2a C channel \u8ba9 Master \u53d1\u9001\u54cd\u5e94\u3002\u8fd9\u5c31\u76f8\u5f53\u4e8e TileLink \u91cc\u9762\u7684 B channel\uff08Probe \u8bf7\u6c42\uff09\u548c C channel\uff08ProbeAck \u54cd\u5e94\uff09\u3002\u5b9e\u9645 ACE \u548c\u521a\u624d\u8bbe\u8ba1\u7684\u5b9e\u9645\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u628a C channel \u62c6\u6210\u4e86\u4e24\u4e2a\uff1aCR \u7528\u4e8e\u8fd4\u56de\u6240\u6709\u54cd\u5e94\uff0cCD \u7528\u4e8e\u8fd4\u56de\u90a3\u4e9b\u9700\u8981\u6570\u636e\u7684\u54cd\u5e94\u3002\u8fd9\u5c31\u50cf AW \u548c W \u7684\u5173\u7cfb\uff0c\u4e00\u4e2a\u4f20\u5730\u5740\uff0c\u4e00\u4e2a\u4f20\u6570\u636e\uff1b\u7c7b\u4f3c\u5730\uff0cCR \u4f20\u72b6\u6001\uff0cCD \u4f20\u6570\u636e\u3002</p> <p>\u90a3\u4e48 AC channel \u4e0a\u8981\u53d1\u9001\u4ec0\u4e48\u8bf7\u6c42\u5462\uff1f\u56de\u987e\u4e00\u4e0b\u4e0a\u9762\u5df2\u7ecf\u7528\u5230\u7684\u8bf7\u6c42\u7c7b\u578b\uff1a\u9700\u8981 snoop \u7684\u6709 ReadShared\uff0cReadUnique \u548c CleanUnique\uff0c\u4e0d\u9700\u8981 snoop \u7684\u6709 WriteBack\u3002\u90a3\u4e48\u76f4\u63a5\u901a\u8fc7 AC channel \u628a ReadShared\uff0cReadUnique \u548c CleanUnique \u8fd9\u4e09\u79cd\u8bf7\u6c42\u539f\u6837\u53d1\u9001\u7ed9\u9700\u8981 snoop \u7684 Cache \u5373\u53ef\u3002Cache \u5728 AC channel \u6536\u5230\u8fd9\u4e9b\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u518d\u505a\u76f8\u5e94\u7684\u52a8\u4f5c\u3002</p> <p>\u7b2c\u4e94\u4ef6\u4e8b\u60c5\uff1a\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u901a\u77e5\u4e0b\u4e00\u7ea7 Cache/Interconnect\uff0c\u544a\u8bc9\u5b83\u7b2c\u4e00\u548c\u7b2c\u4e8c\u6b65\u5b8c\u6210\u4e86\u3002TileLink \u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684 E channel \u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\uff0cACE \u66f4\u52a0\u7c97\u66b4\uff1a\u76f4\u63a5\u7528\u4e00\u5bf9 RACK \u548c WACK \u4fe1\u53f7\u6765\u5206\u522b\u8868\u793a\u6700\u540e\u4e00\u6b21\u8bfb\u548c\u5199\u5df2\u7ecf\u5b8c\u6210\u3002\u5173\u4e8e WACK \u548c RACK \u7684\u8ba8\u8bba\uff0c\u8be6\u89c1 What's the purpose for WACK and RACK for ACE and what's the relationship with WVALID and RVALID? \u3002</p> <p>\u8fd9\u65f6\u5019\u5df2\u7ecf\u57fa\u672c\u628a ACE \u534f\u8bae\u7684\u4fe1\u53f7\u548c\u5927\u4f53\u7684\u5de5\u4f5c\u6d41\u7a0b\u63a8\u5bfc\u51fa\u6765\u4e86\u3002\u4ece\u4fe1\u53f7\u4e0a\u6765\u770b\uff0cACE \u534f\u8bae\u5728 AXI \u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u4e09\u4e2a channel\uff1a</p> <ol> <li>AC: Coherent address channel, Input to master: ACADDR, ACSNOOP, ACPROT</li> <li>CR: Coherent response channel, Output from master: CRRESP</li> <li>CD: Coherent data channel, Output from master: CDDATA, CDLAST</li> </ol> <p>\u6b64\u5916\uff0c\u5df2\u6709\u7684 Channel \u4e5f\u6dfb\u52a0\u4e86\u4fe1\u53f7\uff1a</p> <ol> <li>ARSNOOP[3:0]/ARBAR[1:0]/ARDOMAIN[1:0]</li> <li>AWSNOOP[3:0]/AWBAR[1:0]/AWDOMAIN[1:0]/AWUNIQUE</li> <li>RRESP[3:2]</li> <li>RACK/WACK</li> </ol> <p>ACE \u534f\u8bae\u8fd8\u8bbe\u8ba1\u4e86\u4e00\u4e2a ACE-Lite \u7248\u672c\uff1aACE-Lite \u53ea\u5728\u5df2\u6709 Channel \u4e0a\u6dfb\u52a0\u4e86\u65b0\u4fe1\u53f7\uff0c\u6ca1\u6709\u6dfb\u52a0\u65b0\u7684 Channel\u3002\u56e0\u6b64\u5b83\u5185\u90e8\u4e0d\u80fd\u6709 Cache\uff0c\u4f46\u662f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u81f4\u7684\u7f13\u5b58\u5185\u5bb9\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#chi","title":"CHI \u534f\u8bae","text":""},{"location":"hardware/cache_coherence_protocol/#_5","title":"\u4ecb\u7ecd","text":"<p>CHI \u534f\u8bae\u662f AMBA 5 \u6807\u51c6\u4e2d\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u524d\u8eab\u662f ACE \u534f\u8bae\u3002\u6700\u65b0\u7684 CHI \u6807\u51c6\u53ef\u4ee5\u4ece AMBA 5 CHI Architecture Specification \u5904\u4e0b\u8f7d\u3002</p> <p>\u76f8\u6bd4 AXI\uff0cCHI \u66f4\u52a0\u590d\u6742\uff0c\u8fdb\u884c\u4e86\u5206\u5c42\uff1a\u534f\u8bae\u5c42\uff0c\u7269\u7406\u5c42\u548c\u94fe\u8def\u5c42\u3002\u56e0\u6b64\uff0cCHI \u9002\u7528\u4e8e\u7247\u4e0a\u7f51\u7edc\uff0c\u652f\u6301\u6839\u636e Node ID \u8fdb\u884c\u8def\u7531\uff0c\u800c\u4e0d\u50cf AXI \u90a3\u6837\u53ea\u6309\u7167\u7269\u7406\u5730\u5740\u8fdb\u884c\u8def\u7531\u3002CHI \u7684\u5730\u4f4d\u5c31\u76f8\u5f53\u4e8e Intel \u7684\u73af\u5f62\u603b\u7ebf\u3002CHI \u4e5f\u53ef\u4ee5\u6865\u63a5\u5230 CCIX \u4e0a\uff0c\u7528 CCIX \u8fde\u63a5 SMP \u7684\u7684\u591a\u4e2a Socket\uff0c\u6216\u8005\u8fde\u63a5\u652f\u6301 CCIX \u7684\u663e\u5361\u7b49\u7b49\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#_6","title":"\u7f13\u5b58\u884c\u72b6\u6001","text":"<p>\u9996\u5148\u56de\u987e ACE \u7684\u7f13\u5b58\u884c\u72b6\u6001\uff0c\u5171\u6709\u4e94\u79cd\uff0c\u4e0e MOESI \u76f8\u5bf9\u5e94\uff1a</p> <ol> <li>UniqueDirty: Modified</li> <li>SharedDirty: Owned</li> <li>UniqueClean: Exclusive</li> <li>SharedClean: Shared</li> <li>Invalid: Invalid</li> </ol> <p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0cCHI \u8003\u8651\u7f13\u5b58\u884c\u53ea\u6709\u90e8\u5206\u5b57\u8282\u6709\u6548\u7684\u60c5\u51b5\uff0c\u5373 Full\uff0cPartial \u6216\u8005 Empty\u3002\u56e0\u6b64 CHI \u7684\u7f13\u5b58\u884c\u72b6\u6001\u5171\u6709\u4e03\u79cd\uff1a</p> <ol> <li>UniqueDirty: Modified</li> <li>UniqueDirtyPartial: \u65b0\u589e\uff0c\u53ef\u80fd\u6709\u90e8\u5206\u5b57\u8282\u5408\u6cd5\uff0c\u5728\u5199\u56de\u7684\u65f6\u5019\uff0c\u9700\u8981\u548c\u4e0b\u4e00\u7ea7\u7f13\u5b58\u6216\u8005\u5185\u5b58\u4e2d\u7684\u5408\u6cd5\u7f13\u5b58\u884c\u5185\u5bb9\u8fdb\u884c\u5408\u5e76</li> <li>SharedDirty: Owned</li> <li>UniqueClean: Exclusive</li> <li>UniqueCleanEmpty: \u65b0\u589e\uff0c\u6240\u6709\u5b57\u8282\u90fd\u4e0d\u5408\u6cd5\uff0c\u4f46\u662f\u672c\u7f13\u5b58\u5360\u6709\u8be5\u7f13\u5b58\u884c\uff0c\u5982\u679c\u8981\u4fee\u6539\u7684\u8bdd\uff0c\u4e0d\u9700\u8981\u901a\u77e5\u5176\u4ed6\u7f13\u5b58</li> <li>SharedClean: Shared</li> <li>Invalid: Invalid</li> </ol> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6bd4\u8f83\u7279\u522b\u7684\u5c31\u662f UniqueDirtyPartial \u548c UniqueCleanEmpty\u3002CHI \u6807\u51c6\u5728 4.1.1 \u7ae0\u8282\u7ed9\u51fa\u4e86\u4f7f\u7528\u573a\u666f\uff1a\u5982\u679c\u4e00\u4e2a CPU \u5373\u5c06\u8981\u5199\u5165\u4e00\u7247\u5185\u5b58\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u8f6c\u6362\u5230 UniqueCleanEmpty \u72b6\u6001\u4e2d\uff0c\u628a\u5176\u4ed6\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u90fd\u6e05\u7a7a\uff0c\u8fd9\u6837\u540e\u7eed\u5199\u5165\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u8be2\u95ee\u5176\u4ed6\u7f13\u5b58\uff0c\u6027\u80fd\u6bd4\u8f83\u597d\u3002\u4f46\u6b64\u65f6\u56e0\u4e3a\u6570\u636e\u8fd8\u6ca1\u5199\u8fdb\u53bb\uff0c\u6240\u4ee5\u5c31\u662f Empty\uff0c\u53ea\u66f4\u65b0\u72b6\u6001\uff0c\u4e0d\u5360\u7528\u7f13\u5b58\u7684\u7a7a\u95f4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c CPU \u53ea\u5199\u4e86\u7f13\u5b58\u884c\u7684\u4e00\u90e8\u5206\u5b57\u8282\uff0c\u5176\u4ed6\u90e8\u5206\u6ca1\u6709\u78b0\uff0c\u90a3\u4e48\u5f15\u5165 UniqueDirtyPartial \u4ee5\u540e\uff0c\u53ef\u4ee5\u628a\u5408\u5e76\u65b0\u65e7\u7f13\u5b58\u884c\u6570\u636e\u8fd9\u4e00\u6b65\uff0c\u4e0b\u653e\u5230\u6bd4\u8f83\u9760\u8fd1\u5185\u5b58\u7684\u5c42\u7ea7\u4e0a\uff0c\u51cf\u5c11\u4e86\u6570\u636e\u642c\u8fd0\u7684\u6b21\u6570\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#chi_1","title":"CHI \u7f51\u7edc\u8282\u70b9","text":"<p>CHI \u7684\u8282\u70b9\u7ec4\u7ec7\u6210\u4e00\u4e2a\u7f51\u7edc\uff0c\u53ef\u80fd\u662f\u7247\u4e0a\u7f51\u7edc\uff0c\u4e5f\u53ef\u80fd\u662f\u7247\u95f4\u7684\u8fde\u63a5\u3002CHI \u7684\u8282\u70b9\u5206\u6210\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ol> <li>Request Node\uff1a\u53d1\u8d77 CHI \u8bf7\u6c42\u7684\u8282\u70b9\uff0c\u5bf9\u5e94 CPU \u7684\u7f13\u5b58\uff0c\u6216\u8005\u662f\u7f51\u5361\u7b49\u5916\u8bbe</li> <li>Home Node\uff1a\u7ba1\u7406 Request Node \u6765\u7684\u8bf7\u6c42\uff0c\u5bf9\u5e94\u6700\u540e\u4e00\u7ea7\u7f13\u5b58</li> <li>Subordinate Node\uff1a\u5904\u7406 Home Node \u6765\u7684\u8bf7\u6c42\uff0c\u5bf9\u5e94\u5185\u5b58\u6216\u8005\u663e\u5b58\u7b49\u6709\u5185\u5b58\u7684\u5916\u8bbe</li> </ol> <p>\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e0b\uff0cNode \u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\uff0c\u56e0\u6b64\u65b9\u4fbf\u505a\u4e00\u4e9b\u65b0\u7684\u4f18\u5316\u3002\u4f8b\u5982\u4f20\u7edf\u7684\u7f13\u5b58\u5c42\u6b21\u91cc\uff0c\u8bf7\u6c42\u662f\u4e00\u7ea7\u4e00\u7ea7\u4e0b\u53bb\uff0c\u54cd\u5e94\u518d\u4e00\u7ea7\u4e00\u7ea7\u4e0a\u6765\u3002\u4f46\u662f CHI \u53ef\u80fd\u662f Request Node \u53d1\u7ed9 Home Node \u7684\u8bf7\u6c42\uff0c\u54cd\u5e94\u76f4\u63a5\u7531 Subordinate Node \u53d1\u9001\u56de Request Node \u4e86\u3002</p>"},{"location":"hardware/cache_coherence_protocol/#_7","title":"\u8bfb\u8bf7\u6c42","text":"<p>CHI \u63d0\u4f9b\u4e86\u590d\u6742\u6027\u7684\u540c\u65f6\uff0c\u4e5f\u5e26\u6765\u4e86\u5f88\u591a\u7684\u7075\u6d3b\u6027\uff0c\u4e5f\u610f\u5473\u7740\u6f5c\u5728\u7684\u6027\u80fd\u4f18\u5316\u7684\u53ef\u80fd\u3002\u4f8b\u5982\u5728 CHI \u4e2d\u5b9e\u73b0\u4e00\u4e2a\u8bfb\u64cd\u4f5c\uff0c\u53ef\u80fd\u6709\u5f88\u591a\u79cd\u8fc7\u7a0b\uff08CHI \u6807\u51c6\u7b2c 2.3.1 \u7ae0\u8282\uff09\uff1a</p> <p>\u7b2c\u4e00\u79cd\u662f Home Node \u76f4\u63a5\u63d0\u4f9b\u4e86\u6570\u636e\uff08Combined response from home\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    Requester-&gt;&gt;Home: Read*\n    Home-&gt;&gt;Requester: CompData\n    Requester-&gt;&gt;Home: CompAck\n</code></pre> <p>\u7b2c\u4e8c\u79cd\u662f Home Node \u628a\u54cd\u5e94\u62c6\u6210\u4e24\u4efd\uff0c\u4e00\u4efd\u8868\u793a\u8bfb\u53d6\u7ed3\u679c\uff0c\u4e00\u4efd\u643a\u5e26\u8bfb\u53d6\u7684\u6570\u636e\uff08Separate data and response from Home\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    Requester-&gt;&gt;Home: Read*\n    Home-&gt;&gt;Requester: RespSepData\n    Home-&gt;&gt;Requester: DataSepResp\n    Requester-&gt;&gt;Home: CompAck\n</code></pre> <p>\u7b2c\u4e09\u79cd\u662f Home Node \u6ca1\u6709\u6570\u636e\uff0c\u8f6c\u800c\u8be2\u95ee Subordinate\uff0cSubordinate \u628a\u7ed3\u679c\u76f4\u63a5\u53d1\u56de\u7ed9\u4e86 Requester\uff08Combined response from Subordinate\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    participant Subordinate\n    Requester-&gt;&gt;Home: Read*\n    Home-&gt;&gt;Subordinate: ReadNoSnp\n    Subordinate-&gt;&gt;Requester: CompData\n    Requester-&gt;&gt;Home: CompAck\n</code></pre> <p>\u7b2c\u56db\u79cd\u662f Home Node \u6ca1\u6709\u6570\u636e\uff0c\u8f6c\u800c\u8be2\u95ee Subordinate\uff0c\u4f46\u8fd9\u6b21\u63d0\u524d\u544a\u8bc9 Requester \u8bfb\u53d6\u7684\u7ed3\u679c\uff0c\u6700\u540e Subordinate \u628a\u7ed3\u679c\u53d1\u56de\u7ed9\u4e86 Requester\uff08Response from Home, Data from Subordinate\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    participant Subordinate\n    Requester-&gt;&gt;Home: Read*\n    Home-&gt;&gt;Requester: RespSepData\n    Home-&gt;&gt;Subordinate: ReadNoSnpSep\n    Subordinate-&gt;&gt;Home: ReadReceipt\n    Subordinate-&gt;&gt;Requester: DataSepResp\n    Requester-&gt;&gt;Home: CompAck\n</code></pre> <p>\u7b2c\u4e94\u79cd\u662f\u6570\u636e\u5728\u5176\u4ed6\u7684 Requester Node \u4e2d\uff0c\u6b64\u65f6 Home \u8d1f\u8d23 Snoop\uff08Forwarding snoop\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    participant Snoopee\n    Requester-&gt;&gt;Home: Read*\n    Home-&gt;&gt;Snoopee: Snp*Fwd\n    Snoopee-&gt;&gt;Requester: CompData\n    Snoopee-&gt;&gt;Home: SnpRespFwded\n    Requester-&gt;&gt;Home: CompAck\n</code></pre> <p>\u7b2c\u516d\u79cd\u662f MakeReadUnique\uff0c\u6b64\u65f6\u53ea\u66f4\u65b0\u6743\u9650\uff0c\u4e0d\u6d89\u53ca\u6570\u636e\u7684\u4f20\u8f93\uff08MakeReadUnique only\uff09\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    Requester-&gt;&gt;Home: MakeReadUnique\n    Home-&gt;&gt;Requester: Comp\n    Requester-&gt;&gt;Home: CompAck\n</code></pre>"},{"location":"hardware/cache_coherence_protocol/#_8","title":"\u5199\u8bf7\u6c42","text":"<p>CHI \u6807\u51c6\u7b2c 2.3.2 \u63cf\u8ff0\u4e86\u5199\u8bf7\u6c42\u7684\u6d41\u7a0b\u3002\u548c\u8bfb\u8bf7\u6c42\u4e00\u6837\uff0c\u5199\u8bf7\u6c42\u4e5f\u6709\u5f88\u591a\u7c7b\u578b\uff0c\u4e0b\u9762\u8fdb\u884c\u4ecb\u7ecd\u3002\u4e0e\u8bfb\u8bf7\u6c42\u4e0d\u540c\u7684\u70b9\u5728\u4e8e\uff0c\u5199\u5165\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u628a\u5199\u5165\u7684\u5730\u5740\u548c\u6570\u636e\u7b49\u4e00\u6b21\u6027\u53d1\u9001\u8fc7\u53bb\uff0c\u800c\u662f\u5148\u53d1\u4e00\u4e2a\u5199\u6d88\u606f\uff0c\u5bf9\u65b9\u56de\u590d\u53ef\u4ee5\u53d1\u9001\u6570\u636e\u4e86\uff08DBIDResp\uff09\uff0c\u518d\u628a\u5b9e\u9645\u7684\u6570\u636e\u4f20\u8f93\u8fc7\u53bb\uff08NCBWrData\uff09\u3002\u5f53\u7136\u4e86\uff0c\u4e5f\u53ef\u4ee5\u4e2d\u9014\u53cd\u6094\uff08WriteDataCancel\uff09\u3002</p> <p>\u7b2c\u4e00\u79cd\u662f Direct Write-data Transfer\uff0c\u610f\u601d\u662f\u6570\u636e\u8981\u4ece Requester \u76f4\u63a5\u4f20\u5230 Subordinate \u4e0a\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    participant Subordinate\n    Requester-&gt;&gt;Home: Write*\n    Home-&gt;&gt;Subordinate: Write*\n    Subordinate-&gt;&gt;Requester: DBIDResp\n    Requester-&gt;&gt;Subordinate: NCBWrData/WriteDataCancel\n    Subordinate-&gt;&gt;Home: Comp\n    Home-&gt;&gt;Requester: Comp\n</code></pre> <p>\u7b2c\u4e8c\u79cd\u6bd4\u8f83\u5e38\u89c4\uff0c\u5c31\u662f\u628a\u6570\u636e\u5199\u7ed9 Home Node\uff0c\u5176\u4e2d Comp \u8868\u793a\u8bfb\u53d6\u7ed3\u679c\uff0cDBIDResp \u8868\u793a\u53ef\u4ee5\u53d1\u5199\u5165\u7684\u5185\u5bb9\u4e86\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    Requester-&gt;&gt;Home: Write*\n    Home-&gt;&gt;Requester: DBIDResp/DBIDRespOrd\n    Home-&gt;&gt;Requester: Comp\n    Requester-&gt;&gt;Home: NCBWrData/WriteDataCancel\n</code></pre> <p>\u7b2c\u4e09\u79cd\u662f\u628a\u7b2c\u4e8c\u79cd\u7684 DBIDResp \u548c Comp \u5408\u5e76\u6210\u4e00\u4e2a\u54cd\u5e94\uff1a</p> <pre><code>sequenceDiagram\n    participant Requester\n    participant Home\n    Requester-&gt;&gt;Home: Write*\n    Home-&gt;&gt;Requester: CompDBIDResp\n    Requester-&gt;&gt;Home: NCBWrData/WriteDataCancel\n</code></pre>"},{"location":"hardware/cache_coherence_protocol/#_9","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>Cache coherence</li> <li>MSI protocol</li> <li>Write-once (cache coherence)</li> <li>MESI protocol</li> <li>MOESI protocol</li> <li>Dragon protocol</li> <li>A Strategy to Verify an AXI/ACE Compliant Interconnect (2 of 4)</li> <li>Directory-based cache coherence</li> <li>TileLink spec</li> <li>rocket-chip</li> <li>IHI0022E-AMBA AXI and ACE</li> </ul>"},{"location":"hardware/cmos/","title":"CMOS","text":""},{"location":"hardware/cmos/#mosfet","title":"MOSFET","text":"<p>MOSFET \u6709\u4e24\u79cd\uff1aNMOS \u548c PMOS\uff0c\u7535\u8def\u7b26\u53f7\u5982\u4e0b\uff1a</p> <p> </p> PMOS \u548c NMOS \u7684\u7535\u8def\u7b26\u53f7\uff08\u56fe\u6e90 Wikipedia\uff09 <p>PMOS \u548c NMOS \u90fd\u6709\u4e09\u4e2a\u7535\u6781\uff0c\u5206\u522b\u662f\u6e90\u7ea7\uff08Source\uff09\uff0c\u6805\u7ea7\uff08Gate\uff09\u548c\u6f0f\u7ea7\uff08Drain\uff09\u3002MOSFET \u7684\u7279\u70b9\u662f\uff0c\u5728 $D$ \u5230 $S$ \u7684\u7535\u6d41\u53d7\u5230 $G$ \u4e5f\u5c31\u662f\u6805\u7ea7\u7684\u7535\u538b\u7684\u63a7\u5236\uff1a</p> <ol> <li>\u5f53 $V_{GS} &lt; V_{th}$ \u65f6\uff0c$I_D=0$\uff0c\u6b64\u65f6 MOSFET \u5904\u4e8e\u65ad\u5f00\u7684\u72b6\u6001</li> <li>\u5f53 $V_{GS} &gt; V_{th}, V_{GD} &gt; V_{th}$ \u65f6\uff0c$I_D=\\frac{1}{2}\\mu_nC_{ox}\\frac{W}{L}(2(V_{GS}-V_{th})V_{DS}-V_{DS}^2)$\uff0c\u6b64\u65f6 MOSFET \u5904\u4e8e\u7ebf\u6027\u533a</li> <li>\u5f53 $V_{GS} &gt; V_{th}, V_{GD} &lt; V_{th}$ \u65f6\uff0c$I_D=\\frac{1}{2}\\mu_nC_{ox}\\frac{W}{L}(V_{GS}-V_{th})^2[1+\\lambda(V_{DS}-V_{DSsat})]$\uff0c\u6b64\u65f6 MOSFET \u5904\u4e8e\u9971\u548c\u533a</li> </ol> <p>\u8fd9\u91cc\u7684\u7ebf\u6027\u533a\u548c\u9971\u548c\u533a\u662f\u5728 $I_D - V_{DS}$ \u7279\u6027\u66f2\u7ebf\u4e0a\u8bf4\u7684\uff08\u89c1\u4e0b\u56fe\uff09\uff0c\u610f\u601d\u662f\u5f53 $V_{GS} &gt; V_{th}$ \u7684\u65f6\u5019\uff0c\u968f\u7740 $V_{DS}$ \u7684\u589e\u5927\uff0c$I_D$ \u9996\u5148\u4f1a\u589e\u5927\uff0c\u76f4\u5230 $V_{GD} &gt; V_{th}$ \u7684\u65f6\u5019\uff0c$I_D$ \u9971\u548c\uff0c\u51e0\u4e4e\u4e0d\u518d\u589e\u52a0\u3002\u4e25\u683c\u6765\u8bb2\uff0c\u6240\u8c13\u7684\u7ebf\u6027\u533a\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u662f\u76f4\u7ebf\uff0c\u800c\u662f\u629b\u7269\u7ebf\u3002</p> <p> </p>  I<sub>D</sub> - V<sub>DS</sub> \u7279\u5f81\u66f2\u7ebf\uff08\u56fe\u6e90\u6e05\u534e\u5927\u5b66\u5f20\u96f7\u8001\u5e08\u7535\u5b50\u5b66\u57fa\u7840\u8bfe\u7a0b\u7684\u8bfe\u4ef6\uff09 <p>PMOS \u548c NMOS \u7684\u533a\u522b\u662f\u7535\u6d41\u7684\u65b9\u5411\u4e0d\u540c\u3002PMOS \u7535\u6d41\u4ece S \u6d41\u5411 D\uff0cNMOS \u7535\u6d41\u4ece D \u548c S\u3002\u5982\u679c\u6ce8\u610f\u5230\u4e0a\u9762 MOSFET \u7684\u7b26\u53f7\u7684\u753b\u6cd5\uff0c\u4f1a\u53d1\u73b0\u7535\u6d41\u90fd\u662f\u4ece\u4e0a\u9762\u5f80\u4e0b\u6d41\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u89c4\u5f8b\uff0c\u7bad\u5934\u8fde\u63a5\u7684\u90a3\u4e00\u4fa7\u5c31\u662f S\u3002</p>"},{"location":"hardware/cmos/#cmos_1","title":"\u6570\u5b57\u7535\u8def\u4e2d\u7684 CMOS","text":"<p>CMOS \u5168\u79f0\u662f Complementary metal\u2013oxide\u2013semiconductor\uff0c\u610f\u601d\u5c31\u662f\u62ff PMOS \u548c NMOS \u7684\u7ec4\u5408\u6765\u5b9e\u73b0\u7535\u8def\u3002\u5f53 CMOS \u88ab\u7528\u6765\u5b9e\u73b0\u6570\u5b57\u7535\u8def\u7684\u65f6\u5019\uff0cPMOS \u548c NMOS \u7ecf\u5e38\u6210\u5bf9\u51fa\u73b0\uff0cPMOS \u63a5\u5230 $V_{DD}$\uff0cNMOS \u63a5\u5230 $GND$ \u4e0a\u3002\u4f8b\u5982\u7528 PMOS \u548c NMOS \u5b9e\u73b0\u4e00\u4e2a\u975e\u95e8\uff08NOT gate\uff09\uff1a</p> <p> </p>  CMOS \u5b9e\u73b0\u975e\u95e8\uff08\u56fe\u6e90 CMOS Logic Gate - Geeks for Geeks\uff09 <p>\u5f53\u8f93\u5165\u4e3a\u9ad8\u7535\u5e73\u7684\u65f6\u5019\uff0cNMOS \u5bfc\u901a\uff0cPMOS \u65ad\u5f00\uff0c\u6b64\u65f6\u8f93\u51fa\u901a\u8fc7 NMOS \u63a5\u5230\u4e86\u5730\u4e0a\uff0c\u6240\u4ee5\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\u5f53\u8f93\u5165\u4e3a\u4f4e\u7535\u5e73\u7684\u65f6\u5019\uff0cPMOS \u5bfc\u901a\uff0cNMOS \u65ad\u5f00\uff0c\u6b64\u65f6\u8f93\u51fa\u901a\u8fc7 PMOS \u63a5\u5230\u4e86\u7535\u6e90\u4e0a\uff0c\u6240\u4ee5\u8f93\u51fa\u9ad8\u7535\u5e73\u3002\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e0e\u975e\u95e8\uff08NAND gate\uff09\u548c\u6216\u975e\u95e8\uff08NOR gate\uff09\uff1a</p> <p> </p>  CMOS \u5b9e\u73b0\u4e0e\u975e\u95e8\u548c\u6216\u975e\u95e8\uff08\u56fe\u6e90 CMOS Logic Gate - Geeks for Geeks\uff09 <p>\u4ee5\u53ca\u5728\u5de5\u827a\u5e93\u91cc\u5e38\u89c1\u7684 AOI\uff08And Or Invert\uff09\u548c OAI\uff08Or And Invert\uff09\u95e8\uff1a</p> <p> </p>  CMOS \u5b9e\u73b0 AOI \u548c OAI \u95e8\uff08\u56fe\u6e90 CMOS Logic Gate - Geeks for Geeks\uff09 <p>CMOS \u5728\u5b9e\u73b0\u6570\u5b57\u7535\u8def\u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u7528\u5230\u5b83\u7684\u7ebf\u6027\u533a\u548c\u9971\u548c\u533a\u7684\u7279\u6027\uff0c\u53ea\u7528\u5230\u4e86 $V_{GS}$ \u548c $V_{th}$ \u7684\u5927\u5c0f\u4ee5\u53ca\u662f\u5426\u6709\u7535\u6d41\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u8ba4\u4e3a PMOS \u548c NMOS \u5c31\u662f\u4e00\u4e2a\u7528\u7535\u538b\u63a7\u5236\u7684\u5f00\u5173\u3002</p>"},{"location":"hardware/display_interface/","title":"\u663e\u793a\u63a5\u53e3","text":""},{"location":"hardware/display_interface/#vga","title":"VGA","text":"<p>VGA \u91c7\u7528 15-pin \u7684\u8fde\u63a5\u5668\uff0c\u5305\u62ec RGB \u4e09\u79cd\u989c\u8272\uff0cHSync \u548c VSync \u4fe1\u53f7\uff0c\u8fd8\u6709\u53ef\u9009\u7684 DDC \u63a5\u53e3\u3002\u6bcf\u79cd\u989c\u8272\u5bf9\u5e94\u4e00\u4e2a pin\uff0c\u91c7\u7528\u6a21\u62df\u4fe1\u53f7\u65b9\u5f0f\u4f20\u8f93\u3002VGA \u6709\u4e0d\u540c\u7684\u5206\u8fa8\u7387\u548c\u5237\u65b0\u7387\u65f6\u5e8f\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u50cf\u7d20\u65f6\u949f\u9891\u7387\uff0c\u4ee5\u53ca HSync \u548c VSync \u7684\u6ce2\u5f62\u3002</p> <p>VGA \u4e0d\u652f\u6301\u4f20\u8f93\u97f3\u9891\u3002</p> <p>\u53c2\u8003\uff1aWikipedia</p>"},{"location":"hardware/display_interface/#dvi","title":"DVI","text":"<p>DVI \u6709\u4e0d\u540c\u7684\u7248\u672c\uff0cDVI-A \u517c\u5bb9 VGA \u63a5\u53e3\uff0c\u53ea\u4f20\u8f93\u6a21\u62df\u4fe1\u53f7\uff1bDVI-D \u5219\u662f\u91c7\u7528 TMDS \u5dee\u5206\u4fe1\u53f7\u4f20\u8f93\u6570\u5b57\u4fe1\u53f7\uff0c\u517c\u5bb9 HDMI\uff1bDVI-I \u5219\u517c\u5bb9 DVI-A \u548c DVI-D\u3002</p> <p>\u56e0\u6b64 DVI \u8f6c VGA \u6216\u8005 DVI \u8f6c HDMI \u7684\u8f6c\u6362\u5668\u5185\u90e8\u4e0d\u9700\u8981\u505a\u6570\u6a21\u8f6c\u6362\uff0c\u4f46\u662f\u8981\u6c42\u53e6\u4e00\u4fa7\u7684\u8bbe\u5907\u652f\u6301\u76f8\u5e94\u7684\u4f20\u8f93\u5f62\u5f0f\uff0c\u4f8b\u5982 DVI \u8f6c VGA \u51fa\u6765\u5f97\u5230\u7684\u8fd8\u662f\u6a21\u62df\u4fe1\u53f7\uff0c\u5982\u679c\u53e6\u4e00\u4fa7\u7684\u8bbe\u5907\u53ea\u652f\u6301\u5728 DVI \u4e0a\u8d70\u6570\u5b57\u4fe1\u53f7\uff0c\u5219\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002</p> <p>DVI \u5728\u4f20\u8f93\u6570\u5b57\u4fe1\u53f7\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u91c7\u7528 3 \u5bf9\uff08Single link\uff09\u6216\u8005 6 \u5bf9\uff08Dual link\uff09TMDS \u5dee\u5206\u4fe1\u53f7\u4f20\u8f93\u89c6\u9891\u4fe1\u53f7\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u5bf9 TMDS \u5dee\u5206\u65f6\u949f\u3002\u5176\u4e2d Single link \u6a21\u5f0f\u548c HDMI \u662f\u517c\u5bb9\u7684\u3002</p> <p>TMDS \u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u4f20\u8f93 8 bit \u7684\u6570\u636e\uff0c\u8fd9 8 \u4f4d\u7684\u6570\u636e\u7ecf\u8fc7 8b/10b \u7f16\u7801\u5728\u5dee\u5206\u5bf9\u4e0a\u4f20\u8f93\u3002\u56e0\u6b64\u5bf9\u4e8e 165 MHz \u7684 TMDS \u65f6\u949f\uff0c\u4f20\u8f93\u89c6\u9891\u6570\u636e\u7684\u901f\u7387\u662f $165 \\mathrm{MHz} * 3 * 8 = 3.96 \\mathrm{Gbps}$\u3002</p> <p>DVI \u4e0d\u652f\u6301\u4f20\u8f93\u97f3\u9891\u3002</p> <p>\u53c2\u8003\uff1aWikipedia</p>"},{"location":"hardware/display_interface/#hdmi","title":"HDMI","text":"<p>HDMI \u5728\u4e09\u5bf9 TMDS \u5dee\u5206\u4fe1\u53f7\u4e0a\u4f20\u8f93\u6570\u636e\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u5bf9 TMDS \u5dee\u5206\u65f6\u949f\u548c DDC\u3002\u5e38\u89c1\u7684\u8fde\u63a5\u5668\u662f Type A\uff0c\u6709\u65f6\u5019\u4e5f\u80fd\u770b\u5230\u6bd4\u8f83\u5c0f\u7684 Mini HDMI\uff08Type C\uff09\u548c\u66f4\u5c0f\u7684 Micro HDMI\uff08Type D\uff09\u3002</p> <p>HDMI \u9664\u4e86\u4f20\u8f93\u89c6\u9891\uff0c\u8fd8\u652f\u6301\u4f20\u8f93\u97f3\u9891\u3002</p> <p>HDMI \u968f\u7740\u7248\u672c\u66f4\u65b0\uff0c\u9010\u6e10\u63d0\u9ad8\u4e86 TMDS \u65f6\u949f\u9891\u7387\u3002HDMI 1.0 \u7248\u672c\u548c DVI \u4e00\u6837\uff0c\u6700\u9ad8 TMDS \u65f6\u949f\u662f 165 MHz\uff0c\u4e0d\u8ba1\u5165 8b/10b \u7f16\u7801\u635f\u8017\u7684\u8bdd\uff08\u4e0b\u540c\uff09\uff0c\u4f20\u8f93\u901f\u7387\u662f $165 \\mathrm{MHz} * 3 * 10 = 4.95 \\mathrm{Gbps}$\uff1bHDMI 1.3 \u7248\u672c\u628a TMDS \u65f6\u949f\u63d0\u9ad8\u5230\u4e86 340 MHz\uff0c\u4f20\u8f93\u901f\u7387\u8fbe\u5230 $340 \\mathrm{MHz} * 3 * 10 = 10.2 \\mathrm{Gbps}$\u3002HDMI 2.0 \u7248\u672c\u63d0\u9ad8\u5230\u4e86 600MHz\uff0c\u4f20\u8f93\u901f\u7387\u8fbe\u5230 $600 \\mathrm{MHz} * 3 * 10 = 18 \\mathrm{Gbps}$\u3002</p> <p>HDMI 2.1 \u4e0d\u518d\u4f7f\u7528\u5355\u72ec\u7684 TMDS \u65f6\u949f\u5dee\u5206\u5bf9\uff0c\u628a\u6700\u540e\u4e00\u5bf9\u4e5f\u7528\u6765\u4f20\u8f93\u6570\u636e\uff0c\u628a\u6570\u636e\u7f16\u7801\u4ece 8b/10b \u6539\u6210\u4e86 16b/18b\uff0c\u4f20\u8f93\u901f\u7387\u8fbe\u5230 $4 * 12 \\mathrm{Gbps} = 48 \\mathrm{Gbps}$\uff0c\u76f8\u6bd4 HDMI 2.0 \u6709\u4e86\u5de8\u5927\u7684\u63d0\u5347\u3002\u6309\u7167 16b/18b \u7b97\uff0c\u6570\u636e\u901f\u7387\u662f 42.7 Gbps\uff0c\u4f46 HDMI 2.1 \u8fd8\u6709\u989d\u5916\u7684 FEC \u5f00\u9500\uff08RS(255,251)\uff09\uff0c\u6298\u7b97\u4e0b\u6765\u662f $48 \\mathrm{Gbps} * 16 / 18 * 251 / 255 = 42.0 \\mathrm{Gbps}$\u3002</p> <p>\u4e0b\u9762\u662f\u8fd9\u51e0\u4ee3 HDMI \u7684\u5bf9\u6bd4\uff0c\u5176\u4e2d HDMI 2.1 \u7248\u672c\u6ca1\u8003\u8651 FEC \u5f00\u9500\uff1a</p> 1.0-1.2 1.3-1.4 2.0 2.1 \u4f20\u8f93\u901f\u7387 4.95 Gbps 10.2 Gbps 18 Gbps 48 Gbps \u6570\u636e\u901f\u7387 3.96 Gbps 8.16 Gbps 14.4 Gbps 42.0 Gbps \u7f16\u7801\u65b9\u5f0f 8b/10b 8b/10b 8b/10b 16b/18b \u5206\u8fa8\u7387 1080p 60Hz 1440p 75Hz 4k 60Hz 8k 30Hz <p>\u4f46\u8fd9\u4e2a\u8868\u683c\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u4f8b\u5982 HDMI 1.4b \u5728\u91c7\u7528\u4e0d\u5728 HDMI 1.4b \u6807\u51c6\u91cc\u4f46\u662f\u7531\u663e\u5361\u548c\u663e\u793a\u5668\u652f\u6301\u7684 YCbCr 420 \u65f6\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa 4k 60Hz \u7684\u5206\u8fa8\u7387\uff1aNVIDIA Kepler Cards Get HDMI 4K@60Hz Support (Kind Of)\u3002</p> <p>HDMI 2.1 \u8fd8\u652f\u6301 DSC \u89c6\u9891\u6d41\u538b\u7f29\uff0c\u53ef\u4ee5\u652f\u6301\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff0c\u5982 8k 60Hz \u751a\u81f3 8k 120Hz\u3002</p> <p>\u53c2\u8003\uff1aWikipedia HDMI 2.1 FEC RX IP Core</p>"},{"location":"hardware/display_interface/#displayport","title":"DisplayPort","text":"<p>DisplayPort \u91c7\u7528\u56db\u5bf9\u5dee\u5206\u5bf9\u6765\u4f20\u8f93\u6570\u636e\uff0c\u652f\u6301\u89c6\u9891\u548c\u97f3\u9891\u7b49\u3002</p> <p>DisplayPort 1.0 \u7248\u672c\u652f\u6301 10.8 Gbps \u7684\u4f20\u8f93\u901f\u7387\uff08\u7f16\u7801\u65b9\u5f0f 8b/10b\uff0c\u56e0\u6b64\u6570\u636e 8.64 Gbps\uff09\u3002DisplayPort 1.2 \u7248\u672c\u901f\u7387\u7ffb\u500d\uff0c\u8fbe\u5230\u4e86 21.6 Gbps\uff08\u6570\u636e 17.28 Gbps\uff09\u3002DisplayPort 1.3 \u8fdb\u4e00\u6b65\u63d0\u9ad8\u5230\u4e86 32.4 Gbps\uff08\u6570\u636e 25.92 Gbps\uff09\u3002DisplayPort 2.0 \u8fdb\u4e00\u6b65\u63d0\u9ad8\u5230 80 Gbps\uff08\u7f16\u7801\u65b9\u5f0f 128b/132b\uff09\uff0c\u6570\u636e\u901f\u7387 77.37 Gbps\uff08\u8ba1\u7b97\u516c\u5f0f\u4e0d\u660e\uff09\u3002</p> <p>DisplayPort \u53ef\u4ee5\u5728 USB Type C \u4e0a\u901a\u8fc7 Alternate Mode \u4f20\u8f93\u3002</p> <p>\u5728\u7b14\u8bb0\u672c\u6216\u624b\u673a\u4e2d\uff0c\u5185\u7f6e\u7684\u663e\u793a\u5668\u53ef\u80fd\u4f1a\u91c7\u7528 eDP \u63a5\u53e3\u3002</p> <p>\u53c2\u8003\uff1aWikipedia</p>"},{"location":"hardware/display_interface/#sdi","title":"SDI","text":"<p>SDI \u5168\u79f0 Serial Digital Interface\uff0c\u5728\u540c\u8f74\u7535\u7f06\u4e0a\uff0c\u4e32\u884c\u4f20\u8f93\u89c6\u9891\u6570\u636e\u3002</p> <p>\u53c2\u8003\uff1aWikipedia</p>"},{"location":"hardware/error_detection_correction_code/","title":"\u68c0\u9519\u7ea0\u9519\u7801","text":""},{"location":"hardware/error_detection_correction_code/#_2","title":"\u7406\u8bba","text":"<p>\u5728\u6570\u636e\u4f20\u8f93\u65f6\uff0c\u8003\u8651\u5230\u5404\u79cd\u56e0\u7d20\u7684\u5370\u8c61\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u90e8\u5206\u6570\u636e\u51fa\u9519\uff0c\u6b64\u65f6\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u7f16\u7801\u65b9\u6cd5\uff0c\u4f7f\u5f97\u63a5\u53d7\u65b9\u53ef\u4ee5\u68c0\u6d4b\u51fa\u9519\u8bef\uff0c\u8ba9\u53d1\u9001\u65b9\u91cd\u65b0\u4f20\u8f93\uff1b\u6216\u8005\u8ba9\u63a5\u53d7\u65b9\u76f4\u63a5\u7ea0\u6b63\u9519\u8bef\u3002\u968f\u7740\u4f20\u8f93\u901f\u5ea6\u4e0d\u65ad\u63d0\u9ad8\uff0c\u8bef\u7801\u7387\u4e0a\u5347\uff0c\u91cd\u65b0\u4f20\u8f93\u7684\u6982\u7387\u63d0\u9ad8\uff0c\u901a\u5e38\u5c31\u4f1a\u5f15\u5165\u7ea0\u9519\u7801\uff0c\u4e00\u822c\u53eb\u505a FEC\uff08Forward Error Correction\uff09\u3002</p> <p>\u6838\u5fc3\u601d\u8def\u662f\u53d1\u9001\u6570\u636e\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u5197\u4f59\uff0c\u4f7f\u5f97\u539f\u59cb\u6570\u636e\u5728\u7f16\u7801\u4ee5\u540e\uff0c\u53ea\u6709\u4e00\u90e8\u5206\u5408\u6cd5\u503c\uff0c\u5176\u4f59\u7684\u662f\u975e\u6cd5\u7684\uff0c\u4e14\u5408\u6cd5\u503c\u4e4b\u95f4\u4fdd\u8bc1\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u7f16\u8f91\u8ddd\u79bb\u3002\u7f16\u8f91\u8ddd\u79bb\u4e5f\u53eb Hamming \u8ddd\u79bb\uff0c\u7b49\u4e8e\u5f02\u6216\u540e\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d 1 \u7684\u4e2a\u6570\u3002</p> <p>\u5728\u4f20\u8f93\u51fa\u9519\u65f6\uff0c\u5982\u679c\u51fa\u9519\u7684\u4f4d\u6570\u5728\u7f16\u8f91\u8ddd\u79bb\u4e4b\u5185\uff0c\u5c31\u4e00\u5b9a\u4f1a\u4ece\u5408\u6cd5\u503c\u53d8\u4e3a\u975e\u6cd5\u503c\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u68c0\u6d4b\u51fa\u9519\u8bef\u3002\u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u51fa\u9519\u7684\u4f4d\u6570\u6bd4\u8f83\u5c0f\uff0c\u8ddd\u79bb\u975e\u6cd5\u503c\u6700\u8fd1\u7684\u5408\u6cd5\u503c\u552f\u4e00\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u7ea0\u6b63\u9519\u8bef\u3002</p>"},{"location":"hardware/error_detection_correction_code/#parity","title":"\u5947\u5076\u6821\u9a8c Parity","text":"<p>\u5947\u5076\u6821\u9a8c\u5bf9\u6bcf k \u4f4d\u6570\u636e\uff0c\u6dfb\u52a0\u989d\u5916\u7684 1 \u4f4d\uff0c\u8bb0\u5f55\u8fd9 k \u4f4d\u6570\u636e\u4e2d\u6709\u5947\u6570\u4e2a 1 \u8fd8\u662f\u5076\u6570\u4e2a 1\u3002\u5947\u5076\u6821\u9a8c\u7f16\u7801\u540e\uff0c\u5408\u6cd5\u503c\u7684\u7f16\u8f91\u8ddd\u79bb\u4e3a 2\uff0c\u53ea\u80fd\u68c0\u6d4b\u51fa 1 \u4f4d\u7684\u9519\u8bef\uff0c\u65e0\u6cd5\u7ea0\u6b63\u9519\u8bef\u3002</p> <p>\u7f16\u7801\u7684\u6548\u7387\u662f $k/(k+1)$\u3002</p> <p>UART \u534f\u8bae\u7528\u7684\u662f\u5947\u5076\u6821\u9a8c\u3002</p> <p>\u53c2\u8003\uff1aParity bit</p>"},{"location":"hardware/error_detection_correction_code/#_3","title":"\u91cd\u590d\u7f16\u7801","text":"<p>\u91cd\u590d\u7f16\u7801\u7684\u65b9\u6cd5\u662f\uff0c\u628a\u8f93\u5165\u7684\u6bcf\u4e2a\u4f4d\u91cd\u590d n \u6b21\uff0cn \u4e3a\u5947\u6570\uff1a\u4f8b\u5982 n \u7b49\u4e8e 3\uff0c\u90a3\u4e48 0 \u53d8\u6210 000\uff0c1 \u53d8\u6210 111\uff0c\u4e24\u4e2a\u5408\u6cd5\u503c\u7684\u7f16\u8f91\u8ddd\u79bb\u662f 3\uff0c\u6b64\u65f6\u53ef\u4ee5\u68c0\u6d4b\u51fa 1 \u4f4d\u7684\u9519\u8bef\uff0c\u4e5f\u53ef\u4ee5\u7ea0\u6b63 1 \u4f4d\u7684\u9519\u8bef\u3002\u53ef\u4ee5\u68c0\u6d4b\u51fa 2 \u4f4d\u7684\u9519\u8bef\uff0c\u4f46\u662f\u65e0\u6cd5\u548c 1 \u4f4d\u7684\u9519\u8bef\u533a\u5206\u5f00\u3002\u89e3\u7801\u7684\u65f6\u5019\uff0c\u6309 n \u4f4d\u5206\u7ec4\uff0c\u6bcf\u4e2a\u5206\u7ec4\u5185\u7684 0 \u548c 1 \u7684\u6570\u91cf\u54ea\u4e2a\u591a\uff0c\u5c31\u8ba4\u4e3a\u539f\u59cb\u503c\u662f\u54ea\u4e2a\u3002</p> <p>\u7f16\u7801\u7684\u6548\u7387\u662f $1/n$\u3002</p> <p>\u53c2\u8003\uff1aRepetition code</p>"},{"location":"hardware/error_detection_correction_code/#hamming","title":"Hamming \u7801","text":"<p>Hamming \u7801\u7684\u7279\u70b9\u662f\uff0c\u53ef\u4ee5\u68c0\u6d4b\u5e76\u7ea0\u6b63 1 \u4f4d\u7684\u9519\u8bef\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e00\u70b9\uff0c\u7f16\u8f91\u8ddd\u79bb\u9700\u8981\u4fdd\u8bc1\u81f3\u5c11\u662f 3\u3002\u5982\u679c\u4e0d\u7ea0\u6b63\u9519\u8bef\u7684\u8bdd\uff0c\u53ef\u4ee5\u68c0\u6d4b\u51fa 1 \u4f4d\u6216\u8005 2 \u4f4d\u7684\u9519\u8bef\uff0c\u4f46\u662f\u65e0\u6cd5\u533a\u5206\u662f\u54ea\u79cd\u60c5\u51b5\u3002</p> <p>\u6b64\u5916\u5982\u679c\u7ed9 Hamming \u7801\u52a0\u4e0a\u989d\u5916\u7684\u5947\u5076\u6821\u9a8c\u4f4d\uff0c\u90a3\u4e48\u7f16\u8f91\u8ddd\u79bb\u81f3\u5c11\u662f 4\uff0c\u5c31\u53ef\u4ee5\u68c0\u6d4b\u51fa 2 \u4f4d\u7684\u9519\u8bef\uff0c\u4f46\u662f\u4e0d\u80fd\u7ea0\u6b63 2 \u4f4d\u7684\u9519\u8bef\u3002\u8fd9\u79cd\u6269\u5c55 Hamming \u7801\u5b9e\u73b0\u4e86 SECDED\uff08Single Error Correction\uff0cDouble Error Detection\uff09\u3002</p> <p>\u5047\u8bbe\u4f20\u8f93\u7684\u6570\u636e\u662f k \u4f4d\uff0c\u6dfb\u52a0\u5197\u4f59\u7684 r \u4f4d\u6821\u9a8c\u7801\uff0c\u5f53\u51fa\u73b0 1 \u4f4d\u9519\u8bef\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u7ea0\u6b63\u9519\u8bef\uff0c\u9700\u8981\u77e5\u9053\u9519\u8bef\u7684\u4f4d\u7f6e\u3002\u9519\u8bef\u7684\u4f4d\u7f6e\u53ef\u80fd\u51fa\u73b0\u5728 k+r \u4f4d\u7684\u4efb\u610f\u4e00\u4e2a\u5730\u65b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9519\u8bef\u7684\u4f4d\u7f6e\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u5197\u4f59\u7684 r \u4f4d\u6821\u9a8c\u7801\u63a8\u65ad\u51fa\u6765\uff0c\u56e0\u6b64\uff1a</p> <p>$$ 2^r \\ge k+r $$</p> <p>\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u5408\u6cd5\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u51fa\u9519\u4f4d\u7f6e\uff0c\u56e0\u6b64\uff1a</p> <p>$$ 2^r \\ge k+r+1 $$</p> <p>\u4f8b\u5982\u5f53 $r=3$ \u65f6\uff0c$k \\le 4$\uff0c\u6b64\u65f6\u5982\u679c\u53d6 $k=4$\uff0c\u90a3\u5c31\u662f\u6bcf 4 \u4f4d\u6570\u636e\uff0c\u6dfb\u52a0 3 \u4f4d\u7684\u6821\u9a8c\u7801\uff0c\u4e00\u5171\u662f 7 \u4f4d\u3002\u6b64\u65f6\u5c31\u79f0\u8fd9\u4e2a\u7f16\u7801\u4e3a Hamming(7,4)\u3002</p> <p>\u91cd\u590d\u7f16\u7801\u5728 n=3 \u65f6\u7b49\u4ef7\u4e8e Hamming(3,1)\u3002</p> <p>\u7f16\u7801\u7684\u6548\u7387\u662f $k/(k+r)$\u3002</p> <p>ECC DRAM \u5bf9 64 \u4f4d\u6570\u636e\u6dfb\u52a0 8 \u4f4d\u7684\u5197\u4f59\uff0c\u53ef\u4ee5\u91c7\u7528\u6269\u5c55 Hamming \u7801\u6765\u5b9e\u73b0 SECDED\u3002</p> <p>\u53c2\u8003\uff1aHamming code</p>"},{"location":"hardware/error_detection_correction_code/#reed-soloman","title":"Reed-Soloman","text":"<p>Reed-Solomon \u6709\u4e09\u4e2a\u53c2\u6570\uff1a\u5b57\u6bcd\u8868\u5927\u5c0f $q$\uff0c\u7f16\u7801\u540e\u7684\u5757\u5927\u5c0f $n$ \u548c\u6570\u636e\u957f\u5ea6 $k$\uff0c\u8981\u6c42 $k &lt; n \\le q$ \u4e14 $q$ \u662f\u7d20\u6570\u3002</p> <p>Reed-Solomon \u7b97\u6cd5\u7684\u8fc7\u7a0b\u662f\uff0c\u5bf9\u4e8e $k$ \u4e2a\u6570\u636e\uff0c\u6bcf\u4e2a\u6570\u636e\u8303\u56f4\u90fd\u5728 $[0, q-1]$ \u5185\uff0c\u4ee5\u8fd9 $k$ \u4e2a\u6570\u4e3a\u7cfb\u6570\u5f97\u5230\u4e00\u4e2a\u591a\u9879\u5f0f $p$\u3002\u53d6 $n$ \u4e2a\u70b9 $a_1, \\ldots a_n$\uff0c\u5206\u522b\u5e26\u5165\u591a\u9879\u5f0f\uff0c\u628a\u7ed3\u679c\u5bf9 $q$ \u53d6\u4f59\uff0c\u5c31\u5f97\u5230\u4e86 Reed Solomon \u7f16\u7801\uff1a</p> <p>$$ p_x(a) = \\sum_{i=1}^k x_ia^{i-1} \\bmod q $$</p> <p>$$ C(x) = (p_x(a_1), \\ldots, p_x(a_n)) $$</p> <p>\u7531\u4e8e\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684 $k$ \u6b21\u591a\u9879\u5f0f\uff0c\u6700\u591a\u53ea\u4f1a\u6709 $k-1$ \u4e2a\u4ea4\u70b9\uff0c\u6240\u4ee5 Reed Solomon \u7f16\u7801\u4e2d\uff0c\u5176\u4f59\u7684 $n-(k-1)=n-k+1$ \u4e2a\u503c\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u7f16\u8f91\u8ddd\u79bb\u5c31\u662f $n-k+1$\u3002</p> <p>\u56e0\u6b64 Reed Solomon \u53ef\u4ee5\u7ea0\u6b63 $(n-k)/2$ \u4e2a\u7cfb\u6570\u7684\u9519\u8bef\u3002\u8fd9\u4f7f\u5f97 Reed Solomon \u7f16\u7801\u53ef\u4ee5\u6839\u636e\u9700\u8981\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u7f16\u8f91\u8ddd\u79bb\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u68c0\u9519\u548c\u7ea0\u9519\u80fd\u529b\u3002\u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u9519\u8bef\u4f1a\u8fde\u7eed\u51fa\u73b0\uff08erasure\uff09\uff0c\u7531\u4e8e\u4f20\u8f93\u7684\u662f\u591a\u4e2a\u503c\uff0c\u5bf9\u540c\u4e00\u4e2a\u503c\u4ea7\u751f\u7684\u591a\u4e2a\u4f4d\u7684\u9519\u8bef\u548c\u4e00\u4e2a\u4f4d\u7684\u9519\u8bef\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u8fde\u7eed\u9519\u8bef\u7684\u7ea0\u9519\u80fd\u529b\u66f4\u5f3a\u3002</p> <p>\u9664\u4e86\u4e0a\u9762\u8fd9\u79cd\u628a\u6570\u636e\u7f16\u7801\u4e3a\u591a\u9879\u5f0f\u7cfb\u6570\u7684\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u3002\u4f8b\u5982\u628a\u6570\u636e\u8bbe\u5b9a\u4e3a\u591a\u9879\u5f0f\u5728 $k$ \u4e2a\u70b9\u4e0a\u7684\u53d6\u503c\uff0c\u5176\u4f59\u7684\u70b9\u7684\u503c\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u8ba1\u7b97\u5f97\u51fa\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u7f16\u7801\u4ee5\u540e\uff0c\u6570\u636e\u4f1a\u539f\u6837\u4fdd\u7559\u4e0b\u6765\u3002</p> <p>\u6b64\u5916\u8fd8\u53ef\u4ee5\u9884\u5148\u8bbe\u5b9a\u4e00\u4e2a\u591a\u9879\u5f0f $g(x)$\uff0c\u7f16\u7801\u7684\u65f6\u5019\uff0c\u8ba1\u7b97 $s(x)=p(x)g(x)$\uff0c\u7136\u540e\u4f20\u8f93 $s(x)$ \u7684 $n$ \u4e2a\u7cfb\u6570\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505a BCH\uff08Bose\u2013Chaudhuri\u2013Hocquenghem\uff09\u3002</p> <p>\u5b9e\u8df5\u4e2d\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u8ba1\u7b97\u673a\u4f20\u8f93\u65f6\u6bcf\u4e2a\u5b57\u8282\u6709 256 \u79cd\u53d6\u503c\uff0c\u6b64\u65f6\u5982\u679c\u7528\u7d20\u6570 $q$ \u6765\u9650\u5236\u5b57\u6bcd\u8868\u5927\u5c0f\uff0c\u90a3\u5c31\u8981\u6c42 $q$ \u662f\u6bd4 256 \u5927\u7684\u7d20\u6570\uff0c\u4f1a\u6709\u6240\u6d6a\u8d39\u3002\u56e0\u6b64\uff0c\u5e38\u7528\u5927\u5c0f\u4e3a 256 \u7684 Galois Field \u6765\u66ff\u4ee3\u7d20\u6570\u57df\uff0c\u4e0a\u9762\u591a\u9879\u5f0f\u4e2d\u7684\u8fd0\u7b97\u90fd\u66ff\u6362\u4e3a Galois Field \u4e2d\u5bf9\u5e94\u7684\u8fd0\u7b97\uff0c\u6b64\u65f6\u4e00\u4e2a\u7b26\u53f7\u5c31\u662f\u4e00\u4e2a\u5b57\u8282\u3002\u4f8b\u5982 RS(255,223) \u7801\uff088 \u4f4d\u7b26\u53f7\uff09\u5c31\u662f\u6bcf 223 \u4e2a\u5b57\u8282\u5206\u4e3a\u4e00\u7ec4\uff0c\u7f16\u7801\u4e3a 255 \u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7ea0\u6b63 16 \u4e2a\u5b57\u8282\u7684\u9519\u8bef\u3002</p> <p>\u5982\u679c\u5e0c\u671b\u7f29\u51cf $n$\uff0c\u53ef\u4ee5\u586b\u5145\u4e00\u90e8\u5206\u5b57\u8282\uff0c\u4f8b\u5982 RS(200,168) \u7801\uff0c\u7ed9\u6570\u636e\u586b\u5145 55 \u4e2a\u96f6\u5b57\u8282\u540e\uff0c\u518d\u6309\u7167 RS(255,223) \u8fdb\u884c\u7f16\u7801\uff0c\u5f97\u5230 32 \u4e2a\u6821\u9a8c\u5b57\u8282\uff0c\u4f20\u8f93\u7684\u65f6\u5019\uff0c\u53ea\u4f20\u8f93 168+32 \u4e2a\u5b57\u8282\uff0c\u6b64\u65f6\u8981\u6c42\u5728 Reed Solomon \u7f16\u7801\u7684\u65f6\u5019\uff0c\u91c7\u7528\u4fdd\u7559\u539f\u59cb\u6570\u636e\u7684\u65b9\u6cd5\u3002</p> <p>\u53c2\u8003\uff1aReed-Solomon error correction</p>"},{"location":"hardware/error_detection_correction_code/#crc","title":"CRC","text":"<p>CRC \u662f\u628a\u6570\u636e\u5f53\u6210\u4e00\u4e2a GF(2) \u591a\u9879\u5f0f\u7684\u7cfb\u6570\uff0c\u9664\u4ee5\u5df2\u77e5\u7684\u591a\u9879\u5f0f\uff0c\u5f97\u5230\u7684\u4f59\u6570\u5c31\u662f CRC \u7684\u7ed3\u679c\u3002CRC \u4e3b\u8981\u662f\u4e3a\u4e86\u68c0\u6d4b\u9519\u8bef\uff0c\u4f46\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u7ea0\u6b63\u9519\u8bef\uff0c\u4f46 CRC \u4e3b\u8981\u8fd8\u662f\u7528\u6765\u68c0\u6d4b\u9519\u8bef\u3002\u6b64\u5916\uff0cCRC \u4e0d\u8981\u6c42\u6570\u636e\u957f\u5ea6\u56fa\u5b9a\u3002</p>"},{"location":"hardware/error_detection_correction_code/#_4","title":"\u5c0f\u7ed3","text":"<p>\u4e0b\u9762\u7ed9\u51fa\u4e0d\u540c\u68c0\u9519\u7ea0\u9519\u7801\u7684\u5bf9\u6bd4\uff1a</p> \u7f16\u8f91\u8ddd\u79bb \u6570\u636e\u4f4d\u6570 \u5197\u4f59\u4f4d\u6570 \u603b\u4f4d\u6570 \u5947\u5076\u6821\u9a8c $2$ $n$ $1$ $n+1$ \u91cd\u590d\u7f16\u7801 $n$ $1$ $n-1$ $n$ Hamming \u7801 $3$ $2^r-r-1$ r $2^r-1$ \u6269\u5c55 Hamming \u7801 $4$ $2^r-r-1$ $r+1$ $2^r$ Reed Solomon $n-k+1$ $k\\log_2(q)$ $(n-k)\\log_2(q)$ $n\\log_2(q)$"},{"location":"hardware/error_detection_correction_code/#_5","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>Error correction code</li> </ul>"},{"location":"hardware/high_speed_serial/","title":"\u9ad8\u901f\u4e32\u884c\u901a\u4fe1","text":""},{"location":"hardware/high_speed_serial/#_2","title":"\u4ecb\u7ecd","text":"<p>\u5386\u53f2\u4e0a\uff0c\u82af\u7247\u95f4\u7684\u4f20\u8f93\u63a5\u53e3\u7ecf\u5386\u4e86\u4e32\u884c\u5230\u5e76\u884c\u518d\u5230\u4e32\u884c\u7684\u8fc7\u7a0b\u3002\u4ece\u4e32\u884c\u5230\u5e76\u884c\uff0c\u662f\u56e0\u4e3a\u5e76\u884c\u63a5\u53e3\u540c\u65f6\u4f20\u8f93\u591a\u8def\u6570\u636e\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u9ad8\u7684\u5e26\u5bbd\u3002\u4ece\u5e76\u884c\u518d\u56de\u5230\u4e32\u884c\uff0c\u662f\u56e0\u4e3a\u968f\u7740\u5e76\u884c\u4fe1\u53f7\u6570\u589e\u5927\uff0cPCB \u8d70\u7ebf\u6108\u53d1\u56f0\u96be\uff0c\u4e32\u6270\u95ee\u9898\u6108\u53d1\u4e25\u91cd\uff0c\u96be\u4ee5\u7ee7\u7eed\u6269\u5c55\u5e76\u884c\u63a5\u53e3\u7684\u5bbd\u5ea6\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u968f\u7740\u6280\u672f\u7684\u53d1\u5c55\uff0c\u4e32\u884c\u901a\u4fe1\u53d1\u5c55\u51fa\u4e86\u65b0\u7684\u6280\u672f\uff0c\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7684\u901f\u5ea6\uff0c\u56e0\u6b64\u53c8\u4ece\u5e76\u884c\u56de\u5230\u4e86\u4e32\u884c\u3002</p> <p>\u5176\u4e2d\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u7684\u662f SerDes\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e32\u5e76\u8f6c\u6362\uff1a\u5728\u53d1\u9001\u7aef\uff0c\u628a\u82af\u7247\u5185\u90e8\u7684\u5e76\u884c\u6570\u636e\u8f6c\u6362\u4e3a\u4e32\u884c\u6570\u636e\u8f93\u51fa\uff1b\u5728\u63a5\u6536\u7aef\uff0c\u628a\u4e32\u884c\u6570\u636e\u8f93\u5165\u8f6c\u6362\u4e3a\u82af\u7247\u5185\u90e8\u7684\u5e76\u884c\u6570\u636e\u3002</p> <p>\u53c2\u8003\u8d44\u6599\uff1aFrom Parallel to Serial and Back Again: Understanding SerDes</p>"},{"location":"hardware/high_speed_serial/#_3","title":"\u4e32\u884c\u901a\u4fe1","text":"<p>\u4e3a\u4e86\u5b9e\u73b0\u9ad8\u901f\u7684\u4e32\u884c\u901a\u4fe1\uff0c\u9700\u8981\u5f88\u591a\u6280\u672f\u6765\u4fdd\u8bc1\u9ad8\u9891\u7387\u4e0b\u6570\u636e\u7684\u6b63\u5e38\u4f20\u8f93\uff1a</p> <ol> <li>\u5dee\u5206\u4fe1\u53f7\u4f20\u8f93</li> <li>\u5185\u5d4c\u65f6\u949f\u4ee5\u53ca\u65f6\u949f\u6062\u590d</li> <li>\u6570\u636e\u7f16\u7801</li> <li>\u9884\u52a0\u91cd\u548c\u5747\u8861\uff1a</li> </ol> <p>\u5e38\u89c1\u7684 SerDes \u901f\u7387\u6709\uff1a3.125 Gb/s\uff0c6 Gb/s\uff0c10 Gb/s\uff0c28 GB/s\uff0c56 GB/s \u548c 112 Gb/s\u3002\u8fd9\u662f\u7ecf\u8fc7\u6570\u636e\u7f16\u7801\u540e\u7684\u901f\u7387\uff0c\u56e0\u6b64\u5b9e\u9645\u4f20\u8f93\u7684\u6570\u636e\u901f\u7387\u8fd8\u8981\u51cf\u53bb\u4e00\u90e8\u5206\u3002</p> <p>\u5f88\u591a\u9ad8\u901f\u534f\u8bae\u91c7\u7528\u4e86\u4e32\u884c\u901a\u4fe1\uff1a</p> <ul> <li>PCIe</li> <li>USB 3</li> <li>Ethernet</li> <li>SGMII</li> <li>Infiniband</li> <li>SATA/SAS</li> </ul> <p>\u5e38\u89c1\u7684\u6570\u636e\u7f16\u7801\u65b9\u5f0f\u6709 4b/5b\uff0c8b/10b\uff0c64/66b \u548c 128/130b\u30024b/5b \u7684\u610f\u601d\u5c31\u662f\u6bcf 4 bit \u7684\u6570\u636e\u4f1a\u88ab\u7f16\u7801\u6210 5 bit\uff0c\u5176\u4ed6\u4e5f\u662f\u7c7b\u4f3c\u3002\u7f16\u7801\u540e\uff0c\u4fdd\u8bc1 1 \u548c 0 \u7684\u4e2a\u6570\u57fa\u672c\u76f8\u540c\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e86\u6709\u8db3\u591f\u7684\u8fb9\u6cbf\u7528\u4e8e\u65f6\u949f\u6062\u590d\uff0c\u6b64\u65f6\u5c31\u4e0d\u9700\u8981\u989d\u5916\u4f20\u8f93\u65f6\u949f\u4fe1\u53f7\u4e86\uff0c\u63a5\u6536\u4fa7\u4ece\u6570\u636e\u4e2d\u6062\u590d\u65f6\u949f\u5e76\u4e14\u91c7\u6837\u3002</p> <p>\u9884\u5148\u52a0\u91cd\u548c\u5747\u8861\u89e3\u51b3\u7684\u662f\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u9ad8\u9891\u4fe1\u53f7\u7684\u8870\u51cf\uff1a\u65e2\u7136\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5bf9\u9ad8\u9891\u4fe1\u53f7\u8870\u51cf\u7684\u6bd4\u8f83\u5389\u5bb3\uff0c\u90a3\u5c31\u5728\u53d1\u9001\u7684\u65f6\u5019\u9884\u5148\u589e\u52a0\u9ad8\u9891\u4fe1\u53f7\u5206\u91cf\uff1b\u5747\u8861\u5219\u662f\u5728\u63a5\u6536\u7aef\u8fdb\u884c\u6ee4\u6ce2\uff0c\u628a\u60f3\u8981\u7684\u9891\u7387\u8fc7\u6ee4\u51fa\u6765\u3002</p> <p>\u5f53\u63a5\u53e3\u9700\u8981\u66f4\u9ad8\u5e26\u5bbd\u7684\u65f6\u5019\uff0c\u901a\u5e38\u5c31\u662f\u7ec4\u5408\u591a\u4e2a SerDes\uff0c\u4f8b\u5982 PCIe x1 \u5c31\u662f Serdes \u4e00\u6536\u4e00\u53d1\uff1bPCIe x16 \u5c31\u662f SerDes \u5341\u516d\u6536\u5341\u516d\u53d1\u3002</p> <p>\u4e0b\u9762\u5217\u4e3e\u4e00\u4e9b\u9ad8\u901f\u4e32\u884c\u901a\u4fe1\u534f\u8bae\u91c7\u7528\u7684\u6280\u672f\uff1a</p> <ol> <li>PCIe 1.0-2.0: NRZ, 8b/10b</li> <li>PCIe 3.0-5.0: NRZ, 128b/130b</li> <li>PCIe 6.0: PAM-4, FEC, 242B/256B FLIT</li> <li>HDMI 1.0-2.0:8b/10b</li> <li>HDMI 2.1:16b/18b, FEC</li> <li>DisplayPort 1.0-1.4:8b/10b</li> <li>DisplayPort 2.0-2.1:128b/132b, FEC</li> <li>SGMII\uff1a8b/10b</li> <li>SATA\uff1a8b/10b</li> <li>SAS 1-3:8b/10b</li> <li>SAS 4:128b/150b, FEC</li> </ol>"},{"location":"hardware/i2c/","title":"I2C","text":""},{"location":"hardware/i2c/#_1","title":"\u63a5\u53e3","text":"<p>I2C \u534f\u8bae\u6d89\u53ca\u5230\u4e24\u4e2a\u4fe1\u53f7\uff1a</p> <ul> <li>SCL: \u65f6\u949f\u4fe1\u53f7\uff0cMaster -&gt; Slave</li> <li>SDA\uff1a\u6570\u636e\u4fe1\u53f7\uff0cMaster &lt;-&gt; Slave</li> </ul> <p>\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u4fe1\u53f7\uff0c\u6240\u4ee5 SDA \u7531 Master \u548c Slave \u8f6e\u6d41\u8f93\u51fa\u3002\u4e00\u6b21\u8bf7\u6c42\u7684\u5f00\u59cb\u6761\u4ef6\u662f\uff0cSDA \u4ece 1 \u53d8\u6210 0\uff0c\u4e4b\u540e SCL \u4ece 1 \u53d8\u6210 0\u3002\u5f00\u59cb\u8bf7\u6c42\u4ee5\u540e\uff0c\u6bcf\u6b21 SCL \u4e0a\u5347\u6cbf\u91c7\u6837\u4e00\u4f4d\u7684\u6570\u636e\u3002\u8bf7\u6c42\u7ed3\u675f\u65f6\uff0cSCL \u4ece 0 \u53d8\u6210 1\uff0c\u7136\u540e SDA \u4ece 0 \u53d8\u6210 1\u3002\u4e00\u6b21\u8bf7\u6c42\u7684\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"scl\", wave: \"1.0101010|.101...\"},\n      { name: \"sda\", wave: \"10....1..|0....1.\", phase: -0.1},\n      { name: \"i2c\", wave: \"34.5.....|6.7....\", data: [\"idle\", \"start\", \"data\", \"ack\", \"stop\"]},\n    ]\n}\n</code></pre> <ol> <li>idle \u9636\u6bb5\uff0cscl \u548c sda \u90fd\u662f 1</li> <li>start \u9636\u6bb5\uff0c\u9996\u5148\u662f sda \u53d8\u6210 0\uff0c\u4e4b\u540e\u662f scl \u53d8\u6210 0</li> <li>data/ack \u9636\u6bb5\uff0c\u5728 scl \u4e0a\u5347\u6cbf\u91c7\u6837\u6570\u636e\uff0c\u5728 scl \u4e0b\u964d\u6cbf\uff08\u51c6\u786e\u6765\u8bf4\uff0c\u8d1f\u534a\u5468\u671f\uff09\u4fee\u6539\u6570\u636e</li> <li>stop \u9636\u6bb5\uff0c\u9996\u5148\u662f scl \u53d8\u6210 1\uff0c\u4e4b\u540e\u662f sda \u53d8\u6210 1</li> </ol> <p>\u4f20\u8f93\u6570\u636e\u7684\u65f6\u5019\uff0c\u9700\u8981\u4fdd\u8bc1 sda \u5728 scl \u6b63\u534a\u5468\u671f\u7684\u65f6\u5019\u4fdd\u6301\u4e0d\u53d8\u3002\u5982\u679c\u53d8\u4e86\uff0c\u90a3\u5c31\u662f start \u6216\u8005 stop\u3002\u56e0\u6b64\uff0c\u5728 data/ack \u9636\u6bb5\uff0c\u5efa\u8bae\u4fdd\u8bc1 sda \u7684\u53d8\u5316\u76f8\u6bd4 scl \u4e0b\u964d\u6cbf\u6709\u4e00\u4e2a\u5ef6\u8fdf\uff08Hold Time\uff0c\u4e00\u822c\u7684\u8981\u6c42\u662f Min 0us\uff09\u3002\u5b9e\u73b0\u65b9\u6cd5\u53ef\u80fd\u662f\u5728\u5206\u9891\u7684\u65f6\u5019\uff0c\u5148\u62c9\u4f4e scl\uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u518d\u4fee\u6539 sda\u3002</p> <p>\u8fd9\u91cc\u7684 data/ack \u6307\u7684\u5219\u662f\u4f20\u8f93\u7684\u5177\u4f53\u5185\u5bb9\uff1a\u4f8b\u5982 master \u8981\u4f20\u8f93 7 \u4f4d\u7684\u5730\u5740\u548c 1 \u4f4d\u7684\u8bfb\u4f7f\u80fd\uff0c\u54cd\u5e94\u5730\u5740\u7684 slave \u8981\u8fd4\u56de ack\uff1b\u4e4b\u540e\uff0c\u65e0\u8bba\u662f master \u8fd8\u662f slave \u53d1\u9001\u6570\u636e\uff0c\u63a5\u6536\u7684\u4e00\u65b9\u90fd\u8981\u8fd4\u56de ack\u3002ack \u662f\u4f4e\u6709\u6548\uff0c\u610f\u5473\u7740 0 \u8868\u793a\u6210\u529f\uff08ack\uff09\uff0c1 \u8868\u793a\u5931\u8d25\uff08nack\uff09\u3002</p> <p>\u7531\u4e8e sda \u5e26\u6709\u4e0a\u62c9\u7535\u963b\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709 slave \u54cd\u5e94\uff0cack \u9636\u6bb5\u7684 sda \u5c31\u4f1a\u53d8\u6210 1\uff0c\u610f\u5473\u7740\u5931\u8d25\uff08nack\uff09\u3002</p>"},{"location":"hardware/i2c/#i2c_1","title":"I2C \u63a7\u5236\u5668\u5b9e\u73b0","text":"<p>\u7ed3\u5408\u4e0a\u9762\u7684 I2C \u6ce2\u5f62\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001\u673a\uff1a</p> <ol> <li>INIT \u72b6\u6001\uff1a\u521d\u59cb\u60c5\u51b5\u4e0b\uff0cSCL \u548c SDA \u90fd\u4e3a 1\uff0c\u8981\u53d1\u9001\u6570\u636e\u7684\u65f6\u5019\uff0c\u8f6c\u79fb\u5230 START1 \u72b6\u6001</li> <li>START1 \u72b6\u6001\uff1a\u8bbe\u7f6e SDA=0\uff0c\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0c\u8f6c\u79fb\u5230 START2 \u72b6\u6001</li> <li>START2 \u72b6\u6001\uff1a\u8bbe\u7f6e SCL=0\uff0c\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0cSTART \u53d1\u9001\u5b8c\u6210\uff0c\u8f6c\u79fb\u5230 SEND \u72b6\u6001</li> <li>SEND \u72b6\u6001\uff1a\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0cSCL \u53d6\u53cd\uff0c\u5982\u679c SCL \u8981\u4ece 1 \u53d8\u6210 0\uff0c\u5ef6\u8fdf\u4e00\u4e2a\u5468\u671f\uff0c\u518d\u8f93\u51fa 1 \u4f4d\u7684\u6570\u636e\u5230 SDA \u4e0a\uff0c\u4fdd\u8bc1 SDA \u7684\u53d8\u5316\u5728 SCL \u7684\u8d1f\u534a\u5468\u671f\uff1b\u540c\u65f6\u7edf\u8ba1\u4f20\u8f93\u4f4d\u6570\uff0c\u6bcf\u4f20\u8f93 8 \u4f4d\uff0c\u5c31\u8981\u7b49\u5f85\u4e00\u4e2a\u5468\u671f\u8ba9 Slave \u54cd\u5e94 ACK\uff0c\u6b64\u65f6\u8981\u8bbe\u7f6e inout \u8f93\u51fa\u4e3a\u9ad8\u963b\u6001\uff1b\u5982\u679c\u8981\u8f6c\u6362\u4f20\u8f93\u65b9\u5411\uff0c\u5373 Master \u8981\u8bfb\u53d6\u6570\u636e\uff0c\u90a3\u4e48\u8f6c\u79fb\u5230 RECV \u72b6\u6001\uff1b\u5982\u679c\u4f20\u8f93\u7ed3\u675f\uff0c\u8f6c\u79fb\u5230 STOP1 \u72b6\u6001</li> <li>RECV \u72b6\u6001\uff1a\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0cSCL \u53d6\u53cd\uff0c\u5982\u679c SCL \u4ece 0 \u53d8\u6210 1\uff0c\u5bf9 SDA \u8fdb\u884c\u91c7\u6837\u5e76\u4e14\u4fdd\u5b58\u4e0b\u6765\uff1b\u540c\u65f6\u7edf\u8ba1\u4f20\u8f93\u4f4d\u6570\uff0c\u6bcf\u4f20\u8f93 8 \u4f4d\uff0c\u5c31\u8981\u5728 SDA \u8f93\u51fa\u4e00\u6b21 ACK\uff1b\u5982\u679c\u4f20\u8f93\u7ed3\u675f\uff0c\u8f6c\u79fb\u5230 STOP1 \u72b6\u6001</li> <li>STOP1 \u72b6\u6001\uff1a\u8bbe\u7f6e SCL=1\uff0c\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0c\u8f6c\u79fb\u5230 STOP2 \u72b6\u6001</li> <li>STOP2 \u72b6\u6001\uff1a\u8bbe\u7f6e SDA=1\uff0c\u5f53\u8fbe\u5230\u5206\u9891\u6761\u4ef6\u65f6\uff0c\u8f6c\u79fb\u5230 INIT \u72b6\u6001</li> </ol> <p>\u5206\u9891\u662f\u56e0\u4e3a\u4e00\u822c I2C \u7684\u9891\u7387\u6bd4\u8f83\u4f4e\uff0c\u662f kHz \u7684\u91cf\u7ea7\u3002\u9700\u8981\u6309\u7167\u63a7\u5236\u903b\u8f91\u7684\u4e3b\u9891\uff0c\u7ed3\u5408\u5916\u8bbe\u80fd\u63a5\u53d7\u7684 I2C \u9891\u7387\u8303\u56f4\uff0c\u8ba1\u7b97\u51fa\u5206\u9891\u7684\u500d\u6570\u3002</p>"},{"location":"hardware/i2c/#_2","title":"\u4e0a\u5c42\u534f\u8bae","text":"<p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e0a\u5c42\u534f\u8bae\uff0c\u4f8b\u5982 WM8731\uff0c\u652f\u6301\u901a\u8fc7 I2C \u5199\u5165\u5185\u90e8\u5bc4\u5b58\u5668\uff0c\u4e00\u6b21\u5199\u64cd\u4f5c\u5206\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>start</li> <li>master \u53d1\u9001 7 \u4f4d\u7684\u8bbe\u5907\u5730\u5740\u548c 0\uff08\u8868\u793a\u5199\uff09\uff0cslave \u53d1\u9001 ack</li> <li>master \u53d1\u9001 7 \u4f4d\u7684\u5bc4\u5b58\u5668\u5730\u5740 \u548c 1 \u4f4d\u7684\u5bc4\u5b58\u5668\u6570\u636e\uff0cslave \u53d1\u9001 ack</li> <li>master \u53d1\u9001 8 \u4f4d\u7684\u5bc4\u5b58\u5668\u6570\u636e\uff0cslave \u53d1\u9001 ack</li> <li>stop</li> </ol> <p>\u8fd9\u91cc\u7684\u7b2c\u4e8c\u6b65\u53d1\u9001\u7684 7 \u4f4d\u5730\u5740 + \u8bfb/\u5199\u4f4d\u662f\u6807\u51c6\u7684\uff0cI2C Slave \u90fd\u4f1a\u6839\u636e 7 \u4f4d\u5730\u5740\u6765\u51b3\u5b9a\u662f\u5426\u7531\u81ea\u5df1\u6765\u54cd\u5e94\u3002\u6b64\u540e\u7684\u6570\u636e\u7684\u5b9a\u4e49\uff0c\u5219\u662f\u5404\u4e2a\u82af\u7247\u6309\u7167\u5404\u81ea\u7684\u534f\u8bae\u6765\u8fdb\u884c\u3002</p> <p>\u4e3a\u4e86\u8ba9\u591a\u4e2a\u540c\u578b\u53f7 I2C \u82af\u7247\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\uff0c\u901a\u5e38\u82af\u7247\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5f15\u811a\u6765\u914d\u7f6e\u5b83\u7684\u5730\u5740\uff0c\u90a3\u4e48\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c\u7ed9\u4e0d\u540c\u7684\u82af\u7247\u8bbe\u7f6e\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5c31\u89e3\u51b3\u4e86\u5730\u5740\u51b2\u7a81\u7684\u95ee\u9898\u3002</p>"},{"location":"hardware/i2c/#i2c-eeprom","title":"I2C EEPROM","text":"<p>\u4ee5 AT24C32/AT24C64 \u4e3a\u4f8b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a I2C \u63a5\u53e3\u7684 EEPROM\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <p>\u5199\u5165\u6570\u636e\uff1astart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cW\uff0cACK\uff1b\u5199\u5165\u5730\u5740\u7684\u9ad8 8 \u4f4d\uff0cack\uff1b\u5199\u5165\u5730\u5740\u7684\u4f4e 8 \u4f4d\uff0cack\uff1b\u6570\u636e\u7684\u6bcf\u4e2a\u5b57\u8282\uff0cack\uff1b\u6700\u7ec8 stop\u3002</p> <p>\u8bfb\u53d6\u6570\u636e\uff1astart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cW\uff0cack\uff1b\u8bfb\u53d6\u5730\u5740\u7684\u9ad8 8 \u4f4d\uff0cack\uff1b\u8bfb\u53d6\u5730\u5740\u7684\u4f4e 8 \u4f4d\uff0cack\uff1bstart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cR\uff0cack\uff1b\u6570\u636e\u7684\u6bcf\u4e2a\u5b57\u8282\uff0cack\uff1b\u6700\u7ec8\u4e0d\u60f3\u8bfb\u7684\u65f6\u5019 nack\uff0cstop\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u8bbe\u8ba1\u6210\u5199\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u6709 Master \u5230 Slave \u7684\u6570\u636e\u4f20\u8f93\uff0c\u53cd\u8fc7\u6765\u8bfb\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u6709 Slave \u5230 Master \u7684\u6570\u636e\u4f20\u8f93\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4f20\u8f93\u8bfb\u53d6\u7684\u5730\u5740\uff0c\u8981\u9996\u5148\u201c\u5199\u5165\u201d\u8bfb\u53d6\u7684\u5730\u5740\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u8bfb\u64cd\u4f5c\uff0c\u628a\u6570\u636e\u8bfb\u51fa\u6765\u3002</p>"},{"location":"hardware/i2c/#i2c-audio-codec","title":"I2C Audio Codec","text":"<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u7684 WM8731 \u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a Audio Codec\uff0c\u53ef\u4ee5\u901a\u8fc7 I2C \u5bf9\u5176\u5bc4\u5b58\u5668\u8fdb\u884c\u5199\u5165\u3002WM8731 \u7684\u5bc4\u5b58\u5668\u5730\u5740\u6709 9 \u4f4d\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6709 8 \u4f4d\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5199\u5165\u6d41\u7a0b\u662f\uff1astart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cW\uff0cack\uff1b7 \u4f4d\u5bc4\u5b58\u5668\u5730\u5740\uff0c1 \u4f4d\u5bc4\u5b58\u5668\u6570\u636e\uff0cack\uff1b8 \u4f4d\u5bc4\u5b58\u5668\u6570\u636e\uff0cack\uff1bstop\u3002</p>"},{"location":"hardware/i2c/#i2c-sensor","title":"I2C Sensor","text":"<p>\u4e3e\u4e00\u4e2a\u4f20\u611f\u5668\u7684\u4f8b\u5b50\uff1aPAJ7620U2: Integrated Gesture Recognition Sensor \uff0c\u5b83\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\u8bfb\u5199\u7684\u63a5\u53e3\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <p>\u5355\u6b21\u5199\u5165\uff1astart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cW\uff0cack\uff1b8 \u4f4d\u5730\u5740\uff0cack\uff1b8 \u4f4d\u6570\u636e\uff0cack\uff1bstop\u3002</p> <p>\u5355\u6b21\u8bfb\u53d6\uff1astart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cW\uff0cack\uff1b8 \u4f4d\u5730\u5740\uff0cack\uff1bstop\uff1bstart\uff0c7 \u4f4d\u8bbe\u5907\u5730\u5740\uff0cR\uff0cack\uff1b8 \u4f4d\u6570\u636e\uff0cnack\uff1bstop\u3002\u8fd9\u91cc\u7684\u8bfb\u53d6\u4e5f\u62c6\u6210\u4e86\u4e24\u6b65\uff1a\u7b2c\u4e00\u6b65\u201c\u5199\u5165\u201d\u8bfb\u53d6\u7684\u5730\u5740\uff0c\u7b2c\u4e8c\u6b65\u8bfb\u53d6\u51fa\u6570\u636e\u3002\u6700\u540e\u7684 nack \u8868\u793a master \u4e0d\u9700\u8981\u8bfb\u53d6\u66f4\u591a\u7684\u6570\u636e\u3002</p> <p>\u5982\u679c\u8981\u6279\u91cf\u8bfb\u53d6\u7684\u8bdd\uff0c\u53ea\u8981\u5728\u5355\u6b21\u8bfb\u53d6\u7684\u57fa\u7840\u4e0a\uff0c\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u5019\u53d1 ack\uff0c\u7b49\u5230\u4e0d\u9700\u8981\u7ee7\u7eed\u8bfb\u7684\u65f6\u5019\u518d\u53d1 nack\uff0c\u5c31\u53ef\u4ee5\u8fde\u7eed\u8bfb\u53d6\u591a\u4e2a\u5bc4\u5b58\u5668\u7684\u6570\u636e\u3002</p> <p>\u8fd9\u4e9b\u547d\u4ee4\u683c\u5f0f\u548c\u4e0a\u9762\u7684 I2C EEPROM \u57fa\u672c\u662f\u4e00\u6837\u7684\u3002</p> <p>\u989c\u8272\u4f20\u611f\u5668 TCS3472 \u7684\u547d\u4ee4\u683c\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002</p>"},{"location":"hardware/logic_levels.en/","title":"Logic level standards","text":"<p>The logic level standard defines how to convert the digital signal 0 or 1 into high and low levels, and how to convert the high and low levels back to 0 or 1 between different chips.</p> <p>The first part is for output, to convert 0 or 1 into high and low levels, so it is necessary to define the range:</p> <ul> <li>Output 0: The maximum voltage is $V_{OL}$, Output Low Voltage</li> <li>Output 1: The minimum voltage is $V_{OH}$, Output High Voltage</li> </ul> <p>Conversely, when converting the level to 0 or 1, the range must also be defined:</p> <ul> <li>If the voltage is higher than $V_{IH}$, it is considered 1</li> <li>If the voltage is below $V_{IL}$, it is considered 0</li> </ul> <p>Usually, the above four items satisfy $V_{OL} &lt; V_{IL} &lt; V_{IH} &lt; V_{OH}$, that is to say, the range of input will be larger and more tolerant than that of output, providing certain fault tolerance.</p>"},{"location":"hardware/logic_levels.en/#ttl-logic-level","title":"TTL logic level","text":"<p>5V TTL logic level is common. Take the data from https://learn.sparkfun.com/tutorials/logic-levels/ttl-logic-levels as an example, its level range is:</p> <ul> <li>Output 0: $V_{OL}=0.4$, $[0, 0.4]\\mathrm{V}$</li> <li>Output 1: $V_{OH}=2.7$, $[2.7, 5]\\mathrm{V}$</li> <li>Input 0: $V_{IL}=0.8$, $[0, 0.8]\\mathrm{V}$</li> <li>Input 1: $V_{IH}=2.0$, $[2, 5]\\mathrm{V}$</li> </ul> <p>$V_{OH}=2.4$ in the data on Wikipedia.</p> <p>The FT232H chip supports TTL, the parameters are as follows:</p> <ul> <li>$V_{OL}=0.4$, $V_{OH}=2.4$</li> <li>$V_{IL}=0.8$, $V_{OL}=2.0$</li> </ul>"},{"location":"hardware/logic_levels.en/#cmos-logic-level","title":"CMOS logic level","text":"<p>CMOS logic level is more common nowadays. Take Artix-7 FPGAs as an example, it supports multiple CMOS level standards:</p> <ul> <li>LVCMOS12: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS15: $V_{OL}=0.25V_{CCO}, V_{OH}=0.75V_{CCO}, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS18: $V_{OL}=0.45, V_{OH}=V_{CCO}-0.45, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS25: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.7, V_{IH}=1.7$</li> <li>LVCMOS33: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.8, V_{IH}=2.0$</li> </ul> <p>Among them, $V_{CCO}$ is the external input voltage, which matches the two digits behind LVCMOS, and LVCMOS33 corresponds to 3.3 V. Each Bank has the same $V_{CCO}$ voltage, which is why IOSTANDARD is written in the constraint file, and often consecutive signals use the same logic level standard.</p> <p>In some cases, TTL level standards and CMOS level standards are compatible as long as their voltage range meets the requirements and can accept higher input voltages. For details, see Can I Use 3.3V TTL to Trigger a 3.3V CMOS Device and Logic Guide - Texas Instruments:</p> <p> </p> Compatibility between different TTL and CMOS levels (Source Logic Guide - Texas Instruments)"},{"location":"hardware/logic_levels.en/#rs232","title":"RS232","text":"<p>RS232 is special, its logic level can be positive or negative:</p> <ul> <li>Output 0: $[-15, -5] \\mathrm{V}$</li> <li>Output 1: $[5, 15] \\mathrm{V}$</li> <li>Input 0: $[-15, -3] \\mathrm{V}$</li> <li>Input 1: $[3, 15] \\mathrm{V}$</li> </ul> <p>Therefore, if you want to connect RS232 peripherals to FPGA, you usually need to perform level conversion (for example MAX3232 3-V to 5.5-V Multichannel RS-232 Line Driver and Receiver With \u00b115-kV ESD Protection), otherwise it will not work properly.</p>"},{"location":"hardware/logic_levels.en/#rs485","title":"RS485","text":"<p>RS485 is transmitted through differential signals, that is, a pair of data signals is used to represent 0 or 1 of the digital signal by the difference between the two. It requires that the number 1 corresponds to the differential voltage $V_{a} - V_{b} \\le -200 \\mathrm{mV}$, and the number 0 corresponds to the differential voltage $V_{a} - V_{b} \\ge +200 \\mathrm {mV}$. The waveform is as follows:</p> <pre><code>{\n  signal:\n    [\n      { name: \"rs485_a\", wave: \"01010.1.\"},\n      { name: \"rs485_b\", wave: \"10101.0.\"},\n      { name: \"data\", wave: \"10101.0.\"},\n    ]\n}\n</code></pre>"},{"location":"hardware/logic_levels.en/#sstl","title":"SSTL","text":"<p>SSTL (Stub Series Terminated Logic) is the logic level standard used by SDRAM, and there are different versions:</p> <ul> <li>SSTL_15</li> <li>SSTL_18: $V_{DDQ} = 1.8 \\mathrm{V}$, $V_{REF} = 0.9 \\mathrm{V}$</li> <li>SSTL_2: $V_{DDQ} = 2.5 \\mathrm{V}$, $V_{REF} = 1.25 \\mathrm{V}$</li> <li>SSTL_3: $V_{DDQ} = 3.3 \\mathrm{V}$, $V_{REF} = 1.5 \\mathrm{V}$</li> </ul> <p>SSTL also has a differential version for transmitting differential signals such as CK and DQS.</p>"},{"location":"hardware/logic_levels.en/#lvds","title":"LVDS","text":"<p>LVDS (Low Voltage Differential Signaling) is also a common differential logic level standard. Since it uses differential transmission, there is a common-mode voltage and a differential-mode voltage. For example, the common-mode voltage of LVDS_25 is $1.2 \\mathrm{V}$, and the differential-mode voltage is $0.45 \\mathrm{V}$, which means that the voltages on the two data signals will be around $1.2-0.45/2 = 0.975 \\mathrm{V}$ and $1.2+0.45/2 = 1.425 \\mathrm{V}$.</p> <p>TMDS is similar to LVDS, but the voltage is different. TMDS is often used for DVI and HDMI signal transmission.</p>"},{"location":"hardware/logic_levels.en/#acknowledgement","title":"Acknowledgement","text":"<p>The English version is kindly translated with the help of Google Translator.</p>"},{"location":"hardware/logic_levels.zh/","title":"\u903b\u8f91\u7535\u5e73\u6807\u51c6","text":"<p>\u903b\u8f91\u7535\u5e73\u6807\u51c6\u5b9a\u4e49\u4e86\u4e0d\u540c\u82af\u7247\u4e4b\u95f4\uff0c\u5982\u4f55\u628a\u6570\u5b57\u4fe1\u53f7 0 \u6216\u8005 1 \u8f6c\u5316\u4e3a\u9ad8\u4f4e\u7535\u5e73\uff0c\u4ee5\u53ca\u5982\u4f55\u628a\u9ad8\u4f4e\u7535\u5e73\u8f6c\u6362\u56de 0 \u6216\u8005 1\u3002</p> <p>\u9996\u5148\u662f\u8f93\u51fa\uff0c\u8981\u628a 0 \u6216\u8005 1 \u8f6c\u5316\u4e3a\u9ad8\u4f4e\u7535\u5e73\uff0c\u4e8e\u662f\u5c31\u8981\u5b9a\u4e49\u8303\u56f4\uff1a</p> <ul> <li>\u8f93\u51fa 0\uff1a\u7535\u538b\u6700\u9ad8\u662f $V_{OL}$\uff0cOutput Low Voltage</li> <li>\u8f93\u51fa 1\uff1a\u7535\u538b\u6700\u4f4e\u662f $V_{OH}$\uff0cOutput High Voltage</li> </ul> <p>\u53cd\u8fc7\u6765\uff0c\u8981\u628a\u7535\u5e73\u8f6c\u6362\u5230 0 \u6216\u8005 1 \u7684\u65f6\u5019\uff0c\u4e5f\u8981\u5b9a\u4e49\u8303\u56f4\uff1a</p> <ul> <li>\u5982\u679c\u7535\u538b\u9ad8\u4e8e $V_{IH}$\uff0c\u5c31\u8ba4\u4e3a\u662f 1</li> <li>\u5982\u679c\u7535\u538b\u4f4e\u4e8e $V_{IL}$\uff0c\u5c31\u8ba4\u4e3a\u662f 0</li> </ul> <p>\u901a\u5e38\uff0c\u4e0a\u9762\u56db\u9879\u6ee1\u8db3 $V_{OL} &lt; V_{IL} &lt; V_{IH} &lt; V_{OH}$\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f93\u5165\u4f1a\u6bd4\u8f93\u51fa\u7684\u8303\u56f4\u66f4\u5927\uff0c\u66f4\u52a0\u5bbd\u5bb9\uff0c\u63d0\u4f9b\u4e00\u5b9a\u7684\u5bb9\u9519\u3002</p>"},{"location":"hardware/logic_levels.zh/#ttl","title":"TTL \u7535\u5e73","text":"<p>\u5e38\u89c1\u7684 5V TTL \u7535\u5e73\uff0c\u4ee5 https://learn.sparkfun.com/tutorials/logic-levels/ttl-logic-levels \u7684\u6570\u636e\u4e3a\u4f8b\u5b50\uff0c\u5b83\u7684\u7535\u5e73\u8303\u56f4\u662f\uff1a</p> <ul> <li>\u8f93\u51fa 0: $V_{OL}=0.4$, $[0, 0.4]\\mathrm{V}$</li> <li>\u8f93\u51fa 1: $V_{OH}=2.7$, $[2.7, 5]\\mathrm{V}$</li> <li>\u8f93\u5165 0: $V_{IL}=0.8$, $[0, 0.8]\\mathrm{V}$</li> <li>\u8f93\u5165 1: $V_{IH}=2.0$, $[2, 5]\\mathrm{V}$</li> </ul> <p>Wikipedia \u4e0a\u7684\u6570\u636e\u4e2d $V_{OH}=2.4$\u3002</p> <p>FT232H \u82af\u7247\u652f\u6301 TTL\uff0c\u53c2\u6570\u5982\u4e0b\uff1a</p> <ul> <li>$V_{OL}=0.4$, $V_{OH}=2.4$</li> <li>$V_{IL}=0.8$, $V_{OL}=2.0$</li> </ul>"},{"location":"hardware/logic_levels.zh/#cmos","title":"CMOS \u7535\u5e73","text":"<p>\u73b0\u5728\u6bd4\u8f83\u5e38\u89c1\u7684\u662f CMOS \u7535\u5e73\u3002\u4ee5 Artix-7 FPGAs \u4e3a\u4f8b\uff0c\u5b83\u652f\u6301\u591a\u79cd CMOS \u7535\u5e73\u6807\u51c6\uff1a</p> <ul> <li>LVCMOS12: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS15: $V_{OL}=0.25V_{CCO}, V_{OH}=0.75V_{CCO}, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS18: $V_{OL}=0.45, V_{OH}=V_{CCO}-0.45, V_{IL}=0.35V_{CCO}, V_{IH}=0.65V_{CCO}$</li> <li>LVCMOS25: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.7, V_{IH}=1.7$</li> <li>LVCMOS33: $V_{OL}=0.4, V_{OH}=V_{CCO}-0.4, V_{IL}=0.8, V_{IH}=2.0$</li> </ul> <p>\u5176\u4e2d $V_{CCO}$ \u662f\u5916\u90e8\u8f93\u5165\u7684\u7535\u538b\uff0c\u4e0e LVCMOS \u540e\u9762\u7684\u4e24\u4f4d\u6570\u5b57\u5339\u914d\uff0cLVCMOS33 \u5c31\u5bf9\u5e94 3.3 V\u3002\u6bcf\u4e2a Bank \u90fd\u6709\u76f8\u540c\u7684 $V_{CCO}$ \u7535\u538b\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u7ea6\u675f\u6587\u4ef6\u91cc\u8981\u5199 IOSTANDARD\uff0c\u5e76\u4e14\u7ecf\u5e38\u8fde\u7eed\u7684\u4fe1\u53f7\u90fd\u4f7f\u7528\u540c\u6837\u7684\u7535\u5e73\u6807\u51c6\u3002</p> <p>\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0cTTL \u7535\u5e73\u6807\u51c6\u548c CMOS \u7535\u5e73\u6807\u51c6\u662f\u53ef\u4ee5\u517c\u5bb9\u7684\uff0c\u53ea\u8981\u5b83\u4eec\u7684\u7535\u538b\u8303\u56f4\u6ee1\u8db3\u8981\u6c42\uff0c\u5e76\u4e14\u53ef\u4ee5\u63a5\u53d7\u8f83\u9ad8\u7684\u8f93\u5165\u7535\u538b\u3002\u8be6\u89c1 Can I Use 3.3V TTL to Trigger a 3.3V CMOS Device \u548c Logic Guide - Texas Instruments\uff1a</p> <p> </p> \u4e0d\u540c TTL \u548c CMOS \u7535\u5e73\u7684\u517c\u5bb9\u6027\uff08\u56fe\u6e90 Logic Guide - Texas Instruments\uff09"},{"location":"hardware/logic_levels.zh/#rs232","title":"RS232","text":"<p>RS232 \u6bd4\u8f83\u7279\u522b\uff0c\u5b83\u7684\u7535\u5e73\u6709\u6b63\u6709\u8d1f\uff1a</p> <ul> <li>\u8f93\u51fa 0: $[-15, -5] \\mathrm{V}$</li> <li>\u8f93\u51fa 1: $[5, 15] \\mathrm{V}$</li> <li>\u8f93\u5165 0: $[-15, -3] \\mathrm{V}$</li> <li>\u8f93\u5165 1: $[3, 15] \\mathrm{V}$</li> </ul> <p>\u56e0\u6b64\u5982\u679c\u60f3\u8981\u63a5 RS232 \u5916\u8bbe\u5230 FPGA \u4e0a\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u7535\u5e73\u8f6c\u6362\uff08\u4f8b\u5982 MAX3232 3-V to 5.5-V Multichannel RS-232 Line Driver and Receiver With \u00b115-kV ESD Protection\uff09\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"hardware/logic_levels.zh/#rs485","title":"RS485","text":"<p>RS485 \u901a\u8fc7\u5dee\u5206\u4fe1\u53f7\u6765\u4f20\u8f93\uff0c\u4e5f\u5c31\u662f\u7528\u4e00\u5bf9\u6570\u636e\u4fe1\u53f7\uff0c\u4ee5\u4e8c\u8005\u7684\u5dee\u503c\u6765\u8868\u793a\u6570\u5b57\u4fe1\u53f7\u7684 0 \u6216\u8005 1\u3002\u5b83\u8981\u6c42\uff0c\u6570\u5b57 1 \u5bf9\u5e94\u5dee\u5206\u7535\u538b $V_{a} - V_{b} \\le -200 \\mathrm{mV}$\uff0c\u6570\u5b57 0 \u5bf9\u5e94\u5dee\u5206\u7535\u538b $V_{a} - V_{b} \\ge +200 \\mathrm{mV}$\uff0c\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"rs485_a\", wave: \"01010.1.\"},\n      { name: \"rs485_b\", wave: \"10101.0.\"},\n      { name: \"data\", wave: \"10101.0.\"},\n    ]\n}\n</code></pre>"},{"location":"hardware/logic_levels.zh/#sstl","title":"SSTL","text":"<p>SSTL(Stub Series Terminated Logic) \u662f SDRAM \u6240\u91c7\u7528\u7684\u7535\u5e73\u6807\u51c6\uff0c\u6709\u4e0d\u540c\u7684\u7248\u672c\uff1a</p> <ul> <li>SSTL_15</li> <li>SSTL_18: $V_{DDQ} = 1.8 \\mathrm{V}$, $V_{REF} = 0.9 \\mathrm{V}$</li> <li>SSTL_2: $V_{DDQ} = 2.5 \\mathrm{V}$, $V_{REF} = 1.25 \\mathrm{V}$</li> <li>SSTL_3: $V_{DDQ} = 3.3 \\mathrm{V}, $V_{REF} = 1.5 \\mathrm{V}$</li> </ul> <p>SSTL \u8fd8\u6709\u5dee\u5206\u7248\u672c\uff0c\u7528\u4e8e\u4f20\u8f93 CK\u3001DQS \u7b49\u5dee\u5206\u4fe1\u53f7\u3002</p>"},{"location":"hardware/logic_levels.zh/#lvds","title":"LVDS","text":"<p>LVDS(Low Voltage Differential Signaling) \u4e5f\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u5dee\u5206\u4fe1\u53f7\u7535\u5e73\u6807\u51c6\u3002\u7531\u4e8e\u662f\u5dee\u5206\u4f20\u8f93\uff0c\u5c31\u6709\u5171\u6a21\u7535\u538b\u548c\u5dee\u6a21\u7535\u538b\u3002\u4f8b\u5982 LVDS_25 \u7684\u5171\u6a21\u7535\u538b\u662f $1.2 \\mathrm{V}$\uff0c\u5dee\u6a21\u7535\u538b\u662f $0.45 \\mathrm{V}$\uff0c\u610f\u5473\u7740\u4e24\u4e2a\u6570\u636e\u4fe1\u53f7\u4e0a\u7684\u7535\u538b\u4f1a\u5206\u522b\u5728 $1.2-0.45/2 = 0.975 \\mathrm{V}$ \u548c $1.2+0.45/2 = 1.425 \\mathrm{V}$ \u4e0a\u4e0b\u3002</p> <p>TMDS \u548c LVDS \u7c7b\u4f3c\uff0c\u4f46\u662f\u7535\u538b\u4e0d\u4e00\u6837\u3002TMDS \u7ecf\u5e38\u7528\u4e8e DVI \u548c HDMI \u7684\u4fe1\u53f7\u4f20\u8f93\u3002</p>"},{"location":"hardware/on_chip_networks/","title":"\u7247\u4e0a\u7f51\u7edc","text":""},{"location":"hardware/on_chip_networks/#_2","title":"\u80cc\u666f","text":"<p>\u968f\u7740\u82af\u7247\u5185\u7684\u6838\u5fc3\u6570\u91cf\u589e\u591a\uff0c\u5728\u5b9e\u73b0\u4e92\u8054\u7684\u65f6\u5019\uff0c\u4f20\u7edf\u7684 Crossbar \u9047\u5230\u4e86\u6269\u5c55\u6027\u7684\u74f6\u9888\uff0c\u56e0\u6b64\u9700\u8981\u7528\u7247\u4e0a\u7f51\u7edc\u6765\u66ff\u4ee3 Crossbar\u3002</p> <p>\u4e0b\u9762\u4e3b\u8981\u6309\u7167 On-Chip Networks, Second Edition \u4ee5\u53ca\u300a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7ed3\u6784\u300b\u8bfe\u7a0b\u548c\u300a\u9ad8\u7b49\u8ba1\u7b97\u673a\u7cfb\u7edf\u7ed3\u6784\u300b\u8bfe\u4ef6\u7684\u987a\u5e8f\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"hardware/on_chip_networks/#_3","title":"\u62d3\u6251","text":"<p>\u62d3\u6251\u8bb2\u7684\u5c31\u662f\u7ed3\u70b9\u95f4\u7684\u8fde\u63a5\u65b9\u5f0f\u3002\u6bd4\u8f83\u5e38\u89c1\u7684\u62d3\u6251\u6709\uff1a</p> <ol> <li>Ring\uff1a\u6bcf\u4e2a\u7ed3\u70b9\u8fde\u63a5\u5230\u73af\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u7ed3\u70b9</li> <li>Mesh\uff1a\u4ee5 2D Mesh \u4e3a\u4f8b\uff0c\u628a\u7ed3\u70b9\u653e\u5728\u4e00\u4e2a\u7f51\u683c\u91cc\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6700\u591a\u8fde\u63a5\u56db\u4e2a\u76f8\u90bb\u7ed3\u70b9\uff1a\u5728\u5185\u90e8\u7684\u8fde\u63a5\u56db\u4e2a\u76f8\u90bb\u7ed3\u70b9\uff0c\u5728\u8fb9\u4e0a\u7684\u53ea\u8fde\u63a5\u4e09\u4e2a\u76f8\u90bb\u7ed3\u70b9\uff0c\u5728\u89d2\u4e0a\u7684\u53ea\u8fde\u63a5\u4e24\u4e2a\u7ed3\u70b9</li> <li>Torus\uff1a\u5728 Mesh \u7684\u57fa\u7840\u4e0a\uff0c\u8ba9\u8fb9\u548c\u89d2\u4e0a\u7684\u7ed3\u70b9\u4e5f\u8fde\u63a5\u56db\u4e2a\u7ed3\u70b9\uff1a\u8fb9\u4e0a\u7684\u7ed3\u70b9\u8fde\u5230\u5bf9\u4fa7\u6700\u8fdc\u7684\u7ed3\u70b9\uff0c\u89d2\u4e0a\u7684\u7ed3\u70b9\u8fde\u5230\u53e6\u5916\u4e24\u4e2a\u89d2</li> </ol> <p> </p> Ring\uff0cMesh \u548c Torus\uff08\u56fe\u6e90 On Chip Networks, Second Edition\uff09 <p>\u5176\u4e2d Mesh \u548c Torus \u8fd8\u53ef\u4ee5\u6269\u5c55\u5230\u9ad8\u9636\u60c5\u51b5\uff0c\u4f8b\u5982 3D \u7684\u7acb\u65b9\u4f53\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\uff0c\u4f8b\u5982 Fat Tree\uff0c\u5728\u6811\u5f62\u62d3\u6251\u7684\u57fa\u7840\u4e0a\uff0c\u7531\u4e8e\u6811\u4e0a\u4e24\u53f6\u5b50\u7ed3\u70b9\u95f4\u8def\u5f84\u4f1a\u6bd4\u8f83\u591a\u5730\u7ecf\u8fc7\u5c42\u6570\u6bd4\u8f83\u5c0f\u7684\u7ed3\u70b9\uff0c\u4f8b\u5982\u6839\u7ed3\u70b9\uff0c\u628a\u9760\u8fd1\u6839\u7ed3\u70b9\u7684\u8fb9\u53d8\u7c97\uff08\u589e\u52a0\u5e26\u5bbd\uff09\uff1a</p> <p> </p> Fat Tree\uff08\u56fe\u6e90 Wikipedia\uff09 <p>\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u8bc4\u4f30\u4e00\u4e2a\u62d3\u6251\u7684\u5c5e\u6027\uff1a</p> <ol> <li>\u7ed3\u70b9\u7684\u5ea6\uff1a\u8fde\u63a5\u7684\u7ed3\u70b9\u6570</li> <li>\u76f4\u5f84\uff1a\u7ed3\u70b9\u95f4\u8ddd\u79bb\u7684\u6700\u5927\u503c</li> <li>\u7b49\u5206\u5bbd\u5ea6\uff1a\u7f51\u7edc\u88ab\u5207\u6210\u4e24\u534a\uff08\u6216\u8005\u51e0\u4e4e\u4e24\u534a\uff09\u7684\u65f6\u5019\uff0c\u5207\u5272\u7684\u6700\u5c0f\u8fb9\u6570</li> </ol> <p>\u5728\u8fd9\u4e09\u79cd\u62d3\u6251\u4e2d\uff0c\u7ed3\u70b9\u65e2\u662f\u6d41\u91cf\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u53c8\u8d1f\u8d23\u4e86\u6d41\u91cf\u7684\u8f6c\u53d1\u3002</p> <p>\u53e6\u4e00\u7c7b\u62d3\u6251\u4e2d\uff0c\u6709\u90e8\u5206\u7ed3\u70b9\u53ea\u8d1f\u8d23\u8f6c\u53d1\u6d41\u91cf\uff0c\u4e0d\u4f5c\u4e3a\u6d41\u91cf\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u4f8b\u5982 Butterfly \u7f51\u7edc\uff0cClos \u7f51\u7edc\uff0cFat Tree\u3002</p> <p>\u4f46\u7531\u4e8e\u7247\u4e0a\u7f51\u7edc\u662f\u8981\u5b9e\u73b0\u5728\u82af\u7247\u4e0a\u7684\uff0c\u800c\u82af\u7247\u662f 2D \u7684\uff0c\u6240\u4ee5\u7247\u4e0a\u7f51\u7edc\u4e00\u822c\u4f1a\u7528\u53ef\u4ee5\u653e\u5728\u5e73\u9762\u4e0a\u7684\u62d3\u6251\uff0c\u6bd4\u8f83\u5e38\u89c1\u7684\u5c31\u662f Mesh \u548c Ring\u3002</p>"},{"location":"hardware/on_chip_networks/#_4","title":"\u8def\u7531","text":"<p>\u786e\u5b9a\u597d\u7f51\u7edc\u62d3\u6251\u540e\uff0c\u5728\u5b9e\u9645\u4f20\u8f93\u4e4b\u524d\uff0c\u7531\u4e8e\u4e24\u4e2a\u7ed3\u70b9\u95f4\u8def\u5f84\u4e0d\u552f\u4e00\uff0c\u6240\u4ee5\u9700\u8981\u8003\u8651\u5982\u4f55\u628a\u8bf7\u6c42\u4ece\u8d77\u70b9\u8def\u7531\u5230\u7ec8\u70b9\u3002\u8fd9\u91cc\u4e3b\u8981\u8003\u8651\u7684\u662f Mesh \u62d3\u6251\u7684\u8def\u7531\u7b97\u6cd5\u3002</p> <p>\u9996\u5148\u5bb9\u6613\u60f3\u5230\u7684\u662f\u9009\u62e9\u6700\u77ed\u8def\u5f84\uff0c\u4f46\u5728 Mesh \u62d3\u6251\u4e2d\uff0c\u6700\u77ed\u8def\u5f84\u4e5f\u662f\u4e0d\u552f\u4e00\u7684\uff0c\u56e0\u6b64\u8fd8\u662f\u9700\u8981\u66f4\u52a0\u5177\u4f53\u7684\u7b97\u6cd5\u6765\u505a\u51fa\u9009\u62e9\u3002</p> <p>\u8def\u7531\u5728\u9009\u53d6\u7684\u65f6\u5019\u8fd8\u9700\u8981\u8003\u8651\u6b7b\u9501\u7684\u95ee\u9898\uff1a\u7531\u4e8e\u901a\u5e38\u7247\u4e0a\u7f51\u7edc\u662f\u4e0d\u5141\u8bb8\u4e22\u5305\u7684\uff0c\u56e0\u6b64\u5982\u679c\u53d1\u9001\u6570\u636e\u65f6\uff0c\u63a5\u6536\u65b9\u7684\u7f13\u51b2\u533a\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5c31\u4e0d\u80fd\u7ee7\u7eed\u53d1\u9001\u4e86\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\uff1aA \u8981\u53d1\u7ed9 B\uff0c\u4f46\u540c\u65f6 B \u4e5f\u8981\u53d1\u7ed9 C\uff0c\u73b0\u5728 B \u548c C \u7684\u7f13\u51b2\u533a\u6ee1\u4e86\uff0c\u90a3\u4e48\u53ea\u6709\u7b49 C \u7684\u7f13\u51b2\u533a\u91ca\u653e\u7a7a\u95f4\uff0cB \u624d\u80fd\u53d1\u7ed9 C\uff0c\u7136\u540e B \u7684\u7f13\u51b2\u533a\u624d\u5f97\u4ee5\u91ca\u653e\uff0cA \u624d\u80fd\u53d1\u7ed9 B\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cA \u5230 B \u7684\u4f20\u8f93\u53ea\u6709\u7b49 B \u5230 C \u7684\u4f20\u8f93\u5b8c\u6210\u624d\u53ef\u4ee5\u7ee7\u7eed\u3002</p> <p>\u90a3\u4e48\uff0c\u5047\u5982\u6b64\u65f6 A \u5230 B \u8981\u7b49\u5f85 B \u5230 C \u4f20\u8f93\u5b8c\u6210\uff0cB \u5230 C \u8981\u7b49\u5f85 C \u5230 D \u4f20\u8f93\u5b8c\u6210\uff0cC \u5230 D \u8981\u7b49\u5f85 D \u5230 A \u4f20\u8f93\u5b8c\u6210\uff0cD \u5230 A \u8981\u7b49\u5f85 A \u5230 B \u4f20\u8f93\u5b8c\u6210\uff0c\u6b64\u65f6\u5c31\u51fa\u73b0\u4e86\u6b7b\u9501\uff1a\u4e92\u76f8\u4f9d\u8d56\uff0c\u51fa\u73b0\u4e86\u73af\uff0c\u5e76\u4e14\u6ca1\u6709\u529e\u6cd5\u4ece\u73af\u4e2d\u9000\u51fa\uff0c\u90a3\u5c31\u6b7b\u9501\u4e86\u3002</p> <p> </p> \u8def\u7531\u534f\u8bae\u6b7b\u9501\u7684\u60c5\u51b5\uff08\u56fe\u6e90 On Chip Networks, Second Edition\uff09 <p>\u4e00\u4e2a\u7ecf\u5178\u7684\u8def\u7531\u7b97\u6cd5\u662f\u7ef4\u5e8f\u8def\u7531\uff08Dimension Ordering Routing\uff0c\u7b80\u79f0 DOR\uff09\uff0c\u610f\u601d\u5c31\u662f\u6309\u7167\u7ef4\u5ea6\u7684\u987a\u5e8f\u53bb\u8def\u7531\uff0c\u53ea\u6709\u524d\u4e00\u4e2a\u7ef4\u5ea6\u8d70\u5230\u548c\u7ec8\u70b9\u76f8\u540c\uff0c\u624d\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7ef4\u5ea6\u7ee7\u7eed\u8d70\u3002\u4f8b\u5982\u5728\u4e8c\u7ef4\u573a\u666f\u4e0b\uff0cX-Y \u8def\u7531\u5c31\u662f\u5148\u8d70 X \u8f74\uff0c\u8d70\u5b8c X \u8f74\u4ee5\u540e\u518d\u8d70 Y \u8f74\u3002\u53cd\u8fc7\u6765 Y-X \u8def\u7531\u5219\u662f\u5148\u8d70 Y \u8f74\uff0c\u518d\u8d70 X \u8f74\u3002</p> <p>\u7ef4\u5e8f\u8def\u7531\u5341\u5206\u7b80\u5355\uff0c\u5bb9\u6613\u5b9e\u73b0\uff0c\u5e76\u4e14\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002\u7ef4\u5e8f\u8def\u7531\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u7684\u539f\u56e0\u662f\uff0c\u5b83\u7684\u4f9d\u8d56\u4e0d\u4f1a\u51fa\u73b0\u73af\uff1a\u4ee5 X-Y \u8def\u7531\u4e3a\u4f8b\uff0c\u6240\u6709 X \u65b9\u5411\u4e0a\u7684\u4f20\u8f93\u53ef\u80fd\u4f9d\u8d56 Y \u65b9\u5411\u4e0a\u7684\u4f20\u8f93\uff0c\u4f46 Y \u65b9\u5411\u4e0a\u7684\u4f20\u8f93\u4e0d\u4f1a\u4f9d\u8d56 X \u65b9\u5411\u4e0a\u7684\u4f20\u8f93\u3002\u8fd8\u662f\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\u5b50\uff1aA \u5230 B \u7684\u4f20\u8f93\u4f9d\u8d56 B \u5230 C \u7684\u4f20\u8f93\uff0c\u4f46\u662f B \u5230 C \u7684\u4f20\u8f93\u4e0d\u4f1a\u4f9d\u8d56 C \u5230 D \u7684\u4f20\u8f93\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u7b26\u5408 X-Y \u8def\u7531\u7684\u89c4\u5219\u3002</p> <p>\u4f46\u662f\u7ef4\u5e8f\u8def\u7531\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u6d6a\u8d39\u4e86\u5f88\u591a\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u4f8b\u5982 A \u548c B \u540c\u65f6\u8981\u5411 C \u4f20\u8f93\uff0c\u5c31\u4f1a\u5728 B \u5230 C \u7684\u8fb9\u4e0a\u62e5\u6324\uff0c\u65e0\u6cd5\u5229\u7528\u5269\u4e0b\u7684\u8def\u5f84\u3002</p> <p>\u63a5\u4e0b\u6765\u4ecb\u7ecd\u8def\u7531\u7b97\u6cd5\u7684\u4e24\u4e2a\u5206\u7c7b\uff1a\u4e00\u7c7b\u662f Oblivious \u8def\u7531\u7b97\u6cd5\uff0c\u53e6\u4e00\u7c7b\u662f Adaptive \u8def\u7531\u7b97\u6cd5\u3002\u987e\u540d\u601d\u4e49\uff0cOblivious \u4e0d\u8003\u8651\u7f51\u7edc\u5f53\u524d\u7684\u62e5\u585e\u72b6\u6001\uff0c\u76f4\u63a5\u6309\u7167\u81ea\u5df1\u7684\u7b97\u6cd5\u6765\u53d1\uff1bAdaptive \u4f1a\u6839\u636e\u7f51\u7edc\u5f53\u524d\u7684\u62e5\u585e\u72b6\u6001\uff0c\u671f\u671b\u627e\u5230\u4e00\u4e2a\u4e0d\u90a3\u4e48\u62e5\u6324\u7684\u8def\u5f84\u3002</p> <p>\u663e\u7136\uff0c\u7ef4\u5e8f\u8def\u7531\u6ca1\u6709\u8003\u8651\u7f51\u7edc\u662f\u5426\u62e5\u585e\uff0c\u5c5e\u4e8e Oblivious \u8def\u7531\u7b97\u6cd5\u3002\u53e6\u4e00\u4e2a\u5178\u578b\u7684 Oblivious \u8def\u7531\u662f Valiant \u968f\u673a\u8def\u7531\u7b97\u6cd5\uff1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5148\u4ece\u8d77\u70b9\u8def\u7531\u5230\u4e2d\u95f4\u7ed3\u70b9\uff0c\u518d\u4ece\u4e2d\u95f4\u7ed3\u70b9\u8def\u7531\u5230\u7ec8\u70b9\u3002\u8fd8\u6709\u4e00\u79cd\u5178\u578b\u7684 Oblivious \u8def\u7531\uff0c\u5c31\u662f\u968f\u673a\u9009\u62e9 X-Y \u8def\u7531\u6216 Y-X \u8def\u7531\u7684\u4e00\u79cd\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002</p> <p>Adaptive \u8def\u7531\u7b97\u6cd5\u7684\u76ee\u7684\u662f\uff0c\u6839\u636e\u7f51\u7edc\u7684\u62e5\u585e\u60c5\u51b5\uff0c\u627e\u5230\u4e00\u4e2a\u66f4\u4f18\u7684\u8def\u7531\uff0c\u7ed5\u8fc7\u62e5\u585e\u7684\u90e8\u5206\uff0c\u5b9e\u73b0\u66f4\u9ad8\u7684\u5e26\u5bbd\u5229\u7528\u7387\u3002\u4f8b\u5982\u5982\u679c\u6700\u77ed\u8def\u5f84\u4e0a\u51fa\u73b0\u4e86\u62e5\u585e\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7ed5\u8def\uff0c\u5728\u4e00\u6761\u4e0d\u62e5\u585e\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u4f20\u8f93\u3002\u4f46\u662f\u7ed5\u8def\u7684\u65f6\u5019\uff0c\u9700\u8981\u9632\u6b62\u6d3b\u9501\uff1a\u4e00\u76f4\u5728\u7ed5\u8def\uff0c\u4ece\u6765\u6ca1\u5230\u8fbe\u76ee\u7684\u5730\u3002</p> <p>\u8bbe\u8ba1 Adaptive \u8def\u7531\u7684\u65f6\u5019\uff0c\u4e5f\u8981\u8003\u8651\u5982\u4f55\u907f\u514d\u6b7b\u9501\u3002\u7ef4\u5e8f\u8def\u7531\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\uff0c\u4f46\u4e5f\u552f\u4e00\u786e\u5b9a\u4e86\u8def\u7531\uff0c\u65e0\u6cd5\u652f\u6301 Adaptive \u8def\u7531\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e3a\u4e86\u907f\u514d\u6b7b\u9501\uff0c\u4e0d\u9700\u8981\u50cf\u7ef4\u5e8f\u8def\u7531\u90a3\u4e48\u4e25\u683c\u3002</p> <p>\u56de\u987e\u4e00\u4e0b\u7ef4\u5e8f\u8def\u7531\u4e2d\u7684 X-Y \u8def\u7531\uff1a\u5b83\u8981\u6c42\u5148\u8d70 X \u8f74\uff0c\u518d\u8d70 Y \u8f74\uff0c\u90a3\u4e48\u4ece X \u8f74\u62d0\u5230 Y \u8f74\u7684\u65f6\u5019\uff0c\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u89c1\u4e0b\u56fe (b)\uff1a</p> <p> </p> Mesh \u7684\u8f6c\u5411\uff08(a) \u662f\u6240\u6709\u53ef\u80fd\uff0c(b) \u662f X-Y \u8def\u7531\uff09\uff08\u56fe\u6e90 On Chip Networks, Second Edition\uff09 <p>\u8fd9\u79cd\u62d0\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u6b7b\u9501\uff0c\u4f46\u662f\u6709\u66f4\u52a0\u5bbd\u677e\u7684\u8f6c\u5411\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u6b7b\u9501\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u4e09\u79cd\uff1a</p> <p> </p> Mesh \u7684\u4e09\u79cd\u8f6c\u5411\u6a21\u578b\uff08\u56fe\u6e90 On Chip Networks, Second Edition\uff09 <p>\u6bcf\u79cd\u8f6c\u5411\u6a21\u578b\u90fd\u5728\u516b\u79cd\u8f6c\u5411\u4e2d\u53bb\u6389\u4e86\u4e24\u79cd\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u65e0\u6b7b\u9501\u3002West First Turns \u7684\u610f\u601d\u662f\u5148\u5f80\u897f\u8d70\uff0c\u8f6c\u5411\u540e\u4e0d\u518d\u5f80\u897f\u8d70\uff1bNorth Last Turns \u7684\u610f\u601d\u662f\u5f80\u5317\u8d70\u53ea\u80fd\u51fa\u73b0\u5728\u6700\u540e\u9636\u6bb5\uff0c\u5f80\u5317\u8d70\u4ee5\u540e\u5c31\u4e0d\u518d\u8f6c\u5411\uff1bNegative First Turns \u7684\u610f\u601d\u662f\u5148\u5f80\u897f\uff08X \u8f74\u8d1f\u65b9\u5411\uff09\u6216\u8005\u5357\uff08Y \u8f74\u8d1f\u65b9\u5411\uff09\u8d70\uff0c\u4e4b\u540e\u518d\u5f80\u4e1c\uff08X \u8f74\u6b63\u65b9\u5411\uff09\u6216\u8005\u5317\uff08Y \u8f74\u6b63\u65b9\u5411\uff09\u8d70\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd Odd-even \u65b9\u6cd5\uff1a\u5728\u5076\u6570\u5217\u7684\u65f6\u5019\uff0c\u7981\u6b62\u4e1c\u8f6c\u5317\u548c\u5317\u8f6c\u897f\uff1b\u5728\u5947\u6570\u5217\u7684\u65f6\u5019\uff0c\u7981\u6b62\u4e1c\u8f6c\u5357\u548c\u5357\u8f6c\u897f\u3002</p> <p>\u6709\u4e86\u66f4\u591a\u8f6c\u5411\u65b9\u5411\u540e\uff0c\u5c31\u5141\u8bb8\u51fa\u73b0\u591a\u79cd\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u610f\u5473\u7740 Adaptive \u8def\u7531\u7b97\u6cd5\u53ef\u4ee5\u5728\u4fdd\u8bc1\u4e0d\u6b7b\u9501\u7684\u524d\u63d0\u4e0b\uff0c\u627e\u51fa\u4e00\u6761\u6bd4\u8f83\u4f18\u7684\u8def\u5f84\u3002</p> <p>\u5728\u4e0b\u4e00\u8282\u4f1a\u4ecb\u7ecd\u5982\u4f55\u7528\u6d41\u63a7\u6765\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\uff0c\u6b64\u65f6\u8def\u7531\u5c31\u4e0d\u9700\u8981\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u6b7b\u9501\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002</p>"},{"location":"hardware/on_chip_networks/#_5","title":"\u6d41\u63a7","text":"<p>\u786e\u5b9a\u597d\u8def\u7531\u4ee5\u540e\uff0c\u8fd8\u9700\u8981\u8003\u8651\u6d41\u91cf\u63a7\u5236\u7684\u95ee\u9898\uff1a\u5f53\u94fe\u8def\u51fa\u73b0\u62e5\u585e\uff0c\u5982\u4f55\u4fdd\u8bc1\u9ad8\u6548\u7684\u4f20\u8f93\u3002</p> <p>\u5728\u5b9e\u73b0\u6d41\u63a7\u4e4b\u524d\uff0c\u9700\u8981\u5148\u4e86\u89e3\u5728\u7247\u4e0a\u7f51\u7edc\u4e0a\u4f20\u8f93\u7684\u662f\u4ec0\u4e48\u6570\u636e\uff0c\u53c8\u662f\u600e\u4e48\u4f20\u8f93\u6570\u636e\u7684\u3002</p> <p>\u9996\u5148\uff0c\u7ed3\u70b9\u8981\u53d1\u9001\u7684\u662f\u6d88\u606f\uff08Message\uff09\uff0c\u4f8b\u5982\u8981\u8bfb\u5199\u5185\u5b58\uff0c\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u7b49\u7b49\u3002\u5bf9\u4e8e\u4e0a\u5c42\u6765\u8bf4\uff0c\u5b83\u6536\u53d1\u7684\u90fd\u662f\u6d88\u606f\uff0c\u628a\u6d88\u606f\u4ea4\u7ed9\u7247\u4e0a\u7f51\u7edc\u4ee5\u540e\uff0c\u7531\u7247\u4e0a\u7f51\u7edc\u8d1f\u8d23\u4f20\u8f93\u5230\u76ee\u7684\u5730\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u7247\u4e0a\u7f51\u7edc\u662f\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u5982\u679c\u62ff\u7f51\u7edc\u6765\u7c7b\u6bd4\uff0c\u5c31\u50cf\u662f\u5728\u4e00\u4e2a\u53ef\u9760\u7684 UDP \u534f\u8bae\u4e0a\u4f20\u8f93\u6d88\u606f\u3002</p> <p>\u6b63\u5982 IP \u6709\u6700\u5927\u957f\u5ea6\uff0c\u9700\u8981\u8fdb\u884c\u5206\u7247\uff0c\u7247\u4e0a\u7f51\u7edc\u4e5f\u6709\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u5c31\u662f\u628a\u6d88\u606f\u62c6\u6210\u5f88\u591a\u4e2a Packet\uff0cPacket \u6709\u6700\u5927\u957f\u5ea6\u3002\u4ece Message \u5230 Packet \u9664\u4e86\u5206\u7247\u4ee5\u5916\uff0c\u53ef\u80fd\u8fd8\u6d89\u53ca\u5230\u5730\u5740\u7684\u8f6c\u6362\uff1a\u4f8b\u5982\u6839\u636e\u8bfb\u53d6\u5185\u5b58\u7684\u5730\u5740\uff0c\u627e\u5230\u5730\u5740\u6240\u5bf9\u5e94\u7684\u5185\u5b58\u63a7\u5236\u5668\uff0c\u8ba1\u7b97\u51fa\u5185\u5b58\u63a7\u5236\u5668\u5728\u7247\u4e0a\u7f51\u7edc\u7684\u5750\u6807\uff0c\u7136\u540e\u586b\u5230 Packet \u7684\u5934\u90e8\u4e0a\u3002\u5230 Packet \u8fd9\u4e00\u5c42\u4e4b\u540e\uff0c\u5c31\u662f\u7528\u7247\u4e0a\u7f51\u7edc\u7684\u903b\u8f91\u6765\u5904\u7406\u4e86\uff0c\u4e0a\u5c42\u7684 Message \u4ec5\u4ec5\u662f\u8f7d\u8377\u3002\u5f53 Packet \u5230\u8fbe\u76ee\u7684\u5730\u7684\u65f6\u5019\uff0c\u5219\u8981\u91cd\u65b0\u7ec4\u88c5\u6210 Message \u4ea4\u7ed9\u4e0a\u5c42\u903b\u8f91\u3002</p> <p>\u7b2c\u4e00\u4e2a\u6d41\u63a7\u65b9\u6cd5\u662f\u7535\u8def\u4ea4\u6362\uff08Circuit Switching\uff09\uff1a\u5148\u521d\u59cb\u5316\u4e00\u4e2a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u94fe\u8def\uff0c\u521d\u59cb\u5316\u597d\u4ee5\u540e\u624d\u5f00\u59cb\u53d1\u9001\u6570\u636e\uff0c\u6b64\u65f6\u6570\u636e\u4e0d\u9700\u8981\u5206\u7247\uff0c\u76f4\u63a5\u53d1\u9001\u3002\u94fe\u8def\u5efa\u7acb\u4ee5\u540e\uff0c\u94fe\u8def\u4e0a\u7684\u7ed3\u70b9\u53ea\u8d1f\u8d23\u4f20\u8f93\u8fd9\u4e00\u4e2a\u94fe\u8def\u4e0a\u7684\u6d88\u606f\uff0c\u6240\u4ee5\u5982\u679c\u4f20\u8f93\u7684\u6570\u636e\u5360\u4e0d\u6ee1\u94fe\u8def\u7684\u5e26\u5bbd\uff0c\u5c31\u4f1a\u6d6a\u8d39\u3002\u4f46\u662f\u4f20\u8f93\u6570\u636e\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\uff1a\u6ca1\u6709\u5206\u7247\u7684\u5f00\u9500\uff0c\u5982\u679c\u4f20\u8f93\u7684\u6570\u636e\u91cf\u5927\uff0c\u53ef\u4ee5\u5206\u644a\u5efa\u7acb\u9636\u6bb5\u7684\u5f00\u9500\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u6d41\u63a7\u65b9\u6cd5\u662f\u5b58\u50a8\u8f6c\u53d1\uff08Store and Forward\uff09\uff1a\u628a\u6536\u5230\u7684 Packet \u4fdd\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6839\u636e\u6bcf\u4e2a Packet \u7684\u76ee\u7684\u5730\uff0c\u8ba1\u7b97\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u65b9\u5411\uff0c\u7136\u540e\u53d1\u9001\u3002\u8fd9\u5728\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u91cc\u5f88\u5e38\u89c1\uff0c\u4f46\u662f\u7f3a\u70b9\u662f\u5ef6\u8fdf\u6bd4\u8f83\u5927\u3002\u5728\u7247\u4e0a\u7f51\u7edc\u4e2d\uff0c\u5b58\u50a8\u8f6c\u53d1\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\u4e00\u662f\u7684\u5b58\u50a8\u8f6c\u53d1\u5ef6\u8fdf\u65e0\u6cd5\u5ffd\u7565\uff0c\u4e8c\u662f\u9700\u8981\u6bd4\u8f83\u5927\u7684\u7f13\u51b2\u533a\u6765\u4fdd\u5b58 Packet\u3002</p> <p>\u5728\u5b58\u50a8\u8f6c\u53d1\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u5f97\u5230\u865a\u62df\u76f4\u901a\uff08Virtual Cut-through\uff09\u65b9\u6cd5\uff1a\u6536\u5230 Packet \u5934\u90e8\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5c31\u53ef\u4ee5\u77e5\u9053\u8981\u8f6c\u53d1\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a Packet \u62c6\u6210\u66f4\u5c0f\u7684\u5355\u4f4d\uff0c\u79f0\u4e3a Flit\uff08Flow control unit/Flow control digit\uff09\u3002\u628a\u4e00\u4e2a Packet \u62c6\u5206\u6210\u591a\u4e2a Flit \u4ee5\u540e\uff0c\u7ed3\u70b9\u63a5\u6536\u5230\u7b2c\u4e8c\u4e2a Flit \u65f6\uff0c\u53ef\u4ee5\u540c\u6b65\u53d1\u9001\u7b2c\u4e00\u4e2a Flit\uff1b\u63a5\u6536\u5230\u7b2c\u4e09\u4e2a Flit \u7684\u65f6\u5019\uff0c\u540c\u6b65\u53d1\u9001\u7b2c\u4e8c\u4e2a Flit\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u7ee7\u7eed\u53d1\u9001\u7684\u524d\u63d0\u662f\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u7f13\u5b58\u53ef\u4ee5\u653e\u5f97\u4e0b\u4e00\u4e2a Packet\u3002\u53ea\u6709\u7b2c\u4e00\u4e2a Flit \u4f1a\u4fdd\u5b58\u8def\u7531\u4fe1\u606f\uff0c\u5176\u4f59\u7684\u53ea\u4fdd\u5b58\u6570\u636e\u3002</p> <p>\u865a\u62df\u76f4\u901a\u7f13\u89e3\u4e86\u5b58\u50a8\u8f6c\u53d1\u7684\u5ef6\u8fdf\u95ee\u9898\uff0c\u63a5\u4e0b\u6765\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5373\u5728\u7f13\u51b2\u533a\u5927\u5c0f\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u5f97\u5230\u866b\u5b54\u6d41\u63a7\uff08Wormhole\uff09\u65b9\u6cd5\uff1a\u7f13\u51b2\u533a\u4e0d\u9700\u8981\u4fdd\u5b58\u5b8c\u6574\u7684 Packet\uff0c\u53ea\u9700\u8981\u80fd\u653e\u5f97\u4e0b\u4e00\u4e2a Flit\uff0c\u5c31\u53ef\u4ee5\u50cf\u865a\u62df\u76f4\u901a\u90a3\u6837\u7ee7\u7eed\u4f20\u8f93\u3002</p> <p>\u4f46\u662f\u866b\u5b54\u6d41\u63a7\u51fa\u73b0\u4e86\u65b0\u7684 Head of Line Blocking \u95ee\u9898\uff1a\u5f53\u7f13\u51b2\u533a\u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u4e00\u4e2a Packet \u7684\u591a\u4e2a Flit \u53ef\u80fd\u6563\u843d\u5728\u591a\u4e2a\u7ed3\u70b9\u4e2d\uff0c\u8fd9\u4e9b\u7ed3\u70b9\u90fd\u56e0\u4e3a\u540c\u4e00\u4e2a Packet \u5835\u585e\uff0c\u65e0\u6cd5\u4f20\u8f93\u5176\u4ed6\u6570\u636e\u3002\u6bd4\u8f83\u6781\u7aef\u7684\u60c5\u51b5\u662f\uff0c\u540c\u4e00\u4e2a Packet \u7684\u7b2c\u4e00\u4e2a Flit \u5df2\u7ecf\u5230\u8fbe\u7ec8\u70b9\uff0c\u4f46\u662f\u6700\u540e\u4e00\u4e2a Flit \u8fd8\u5728\u8d77\u70b9\uff0c\u6b64\u65f6\u5982\u679c\u51fa\u73b0\u4e86\u963b\u585e\uff0c\u5c31\u53ef\u80fd\u628a\u6574\u4e2a\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u5835\u4f4f\u3002\u865a\u62df\u76f4\u901a\uff08Virtual cut-through\uff09\u7b97\u6cd5\u5728\u51fa\u73b0\u963b\u585e\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u53d1\u9001\u65f6\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u7f13\u51b2\u533a\u53ef\u4ee5\u653e\u4e0b\u6574\u4e2a Packet\uff0c\u56e0\u6b64\u5373\u4f7f\u51fa\u73b0\u4e86\u963b\u585e\uff0c\u90e8\u5206\u7ed3\u70b9\u8fd8\u662f\u53ef\u4ee5\u7ee7\u7eed\u53d1\u9001 Flit\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3 Head of Line Blocking \u7684\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u865a\u62df\u901a\u9053\uff08Virtual Channel\uff09\u65b9\u6cd5\uff1a\u65e2\u7136 Block \u5728 Head of Line \u4e0a\uff0c\u90a3\u5c31\u652f\u6301\u591a\u4e2a Line\uff0c\u4e5f\u5c31\u662f\u591a\u4e2a Virtual Channel\u3002\u867d\u7136\u7269\u7406\u4e0a\u8fd8\u662f\u539f\u6765\u7684\u901a\u9053\uff0c\u4f46\u662f\u903b\u8f91\u4e0a\u5b9e\u73b0\u4e86\u591a\u4e2a Virtual Channel\u3002\u5728 Packet \u8fdb\u5165\u7ed3\u70b9\u7684\u65f6\u5019\uff0cPacket \u4f1a\u88ab\u5206\u5230\u5176\u4e2d\u4e00\u4e2a Virtual Channel \u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a Packet \u5835\u585e\u4e86\uff0c\u53ea\u4f1a\u5835\u4f4f\u5b83\u6240\u5728\u7684 Virtual Channel\uff0c\u5176\u4ed6 Virtual Channel \u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f20\u8f93\u3002\u591a\u4e2a Virtual Channel \u7ade\u4e89\u540c\u4e00\u4e2a\u7269\u7406\u901a\u9053\uff0c\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\u4ef2\u88c1\u3002</p> <p>Virtual Channel \u52a0\u4e0a Wormhole Routing \u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6d41\u63a7\u7b97\u6cd5\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6d41\u63a7\u7b97\u6cd5\u7684\u603b\u7ed3\uff1a</p> \u94fe\u8def \u7f13\u5b58 \u8bc4\u4ef7 \u7535\u8def\u4ea4\u6362 Message N/A (\u65e0\u7f13\u5b58) \u9700\u8981\u5efa\u7acb\u548c\u786e\u8ba4 \u5b58\u50a8\u8f6c\u53d1 Packet Packet \u6536\u5230\u5b8c\u6574 Packet \u624d\u53ef\u4ee5\u53d1\u9001 \u865a\u62df\u76f4\u901a Packet Packet \u5934 Flit \u53ef\u4ee5\u53d1\u9001 \u866b\u5b54\u6d41\u63a7 Packet Flit Head of Line Blocking \u865a\u62df\u901a\u9053 Flit Flit \u4e0d\u540c\u6570\u636e\u5305\u7684\u6570\u636e\u7247\u4ea4\u9519 <p>\u6765\u6e90\uff1a\u300a\u9ad8\u7b49\u8ba1\u7b97\u673a\u7cfb\u7edf\u7ed3\u6784\u300b\u8bfe\u4ef6</p>"},{"location":"hardware/on_chip_networks/#_6","title":"\u65e0\u6b7b\u9501\u6d41\u63a7","text":"<p>\u6b64\u5916\uff0cVirtual Channel \u8fd8\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u6b7b\u9501\u7684\u95ee\u9898\uff0c\u6b64\u65f6\u8def\u7531\u7b97\u6cd5\u5c31\u4e0d\u7528\u8003\u8651\u6b7b\u9501\u7684\u95ee\u9898\uff0c\u800c\u662f\u7531 Virtual Channel \u6765\u89e3\u51b3\u3002</p> <p>\u56de\u5fc6\u6b7b\u9501\u7684\u573a\u666f\uff0c\u6b7b\u9501\u662f\u56e0\u4e3a\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff0c\u5bfc\u81f4\u6240\u6709\u7ed3\u70b9\u7f13\u51b2\u533a\u90fd\u6ee1\u4e86\uff0c\u6240\u6709\u7ed3\u70b9\u90fd\u65e0\u6cd5\u4f20\u8f93\u6570\u636e\u3002\u4e3a\u4e86\u523b\u753b\u51fa\u4f9d\u8d56\u60c5\u51b5\uff0c\u53ef\u4ee5\u7ed8\u5236\u51fa Channel Dependency Graph\uff1a\u5982\u679c A \u5230 B \u7684\u4f20\u8f93 Channel \u4f9d\u8d56\u4e8e B \u5230 C \u7684\u4f20\u8f93 Channel\uff0c\u5c31\u4ece (A, B) \u753b\u4e00\u6761\u8fb9\u5230 (B, C)\u3002\u6ce8\u610f\uff0c\u539f\u6765\u7247\u4e0a\u7f51\u7edc\u62d3\u6251\u91cc\u7684\u8fb9\uff0c\u5728 Channel Dependency Graph \u91cc\u53d8\u6210\u4e86\u70b9\u3002</p> <p>\u5f15\u5165 Virtual Channel \u4ee5\u540e\uff0c\u7531\u4e8e\u6bcf\u4e2a Virtual Channel \u6709\u81ea\u5df1\u7684\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u4ece A \u5230 B \u7684\u94fe\u8def\u4e0a\uff0c\u76f8\u5f53\u4e8e\u6709\u4e86\u591a\u4e2a\u4f20\u8f93 Channel\uff0c\u6bcf\u4e2a Virtual Channel \u5c31\u662f\u4e00\u4e2a\u4f20\u8f93 Channel\u3002\u867d\u7136\u7269\u7406\u4e0a\u8fd8\u662f\u53ea\u6709\u4e00\u4e2a Channel\uff0c\u4f46\u662f\u4e00\u4e2a Virtual Channel \u5728\u963b\u585e\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6 Virtual Channel \u7684\u5de5\u4f5c\u3002</p> <p>\u6b64\u65f6\uff0c\u7531\u4e8e\u4e24\u4e2a\u7ed3\u70b9\u95f4\u4e0d\u6b62\u4e00\u4e2a Channel\uff0c\u5373\u4f7f\u4eba\u4e3a\u5730\u7981\u7528\u4e00\u4e2a Channel\uff0c\u4e5f\u53ef\u4ee5\u6b63\u5e38\u4f20\u8f93\uff0c\u5e76\u4e14\u4e5f\u6253\u7834\u4e86\u73af\u3002\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\uff1a\u4e0b\u56fe (a) \u5de6\u4fa7\u4e2d $n_1$ \u5230 $n_4$ \u662f\u7ec4\u6210\u73af\u7684\u56db\u4e2a\u7ed3\u70b9\uff0c\u56db\u4e2a Channel \u4e92\u76f8\u4f9d\u8d56\uff0c\u56e0\u6b64 Channel Dependency Graph \u51fa\u73b0\u4e86\u73af\uff08\u4e0b\u56fe (a) \u53f3\u4fa7\uff09\uff1b\u5f15\u5165\u4e86 Virtual Channel \u4ee5\u540e\uff0c\u76f8\u90bb\u7ed3\u70b9\u95f4\u5c31\u6709\u4e86\u4e24\u4e2a Channel\uff0c\u6b64\u65f6\u7981\u7528 $c_{00}$ \u901a\u9053\uff0c\u5e76\u4e14\u7ea6\u5b9a Channel \u7684\u4f18\u5148\u7ea7\uff0c\u90a3\u4e48 Channel Dependency Graph \u5c31\u4e0d\u518d\u6210\u73af\uff08\u4e0b\u56fe (b) \u53f3\u4fa7\uff09\uff0c\u5e76\u4e14\u7531\u4e8e\u6570\u636e\u4e0d\u4f1a\u7ed5\u7740\u73af\u8f6c\u4e24\u5708\uff0c\u4e0d\u5f71\u54cd\u53ef\u8fbe\u6027\u3002</p> <p> </p> \u4f7f\u7528 Virtual Channel \u89e3\u51b3\u6b7b\u9501\u95ee\u9898\uff08\u56fe\u6e90 Deadlock-Free Message Routing in Multiprocessor Interconnection Networks\uff09 <p>\u53e6\u4e00\u79cd\u601d\u8def\u662f\u628a Virtual Channel \u5206\u6210\u4e24\u7c7b\uff0c\u7b2c\u4e00\u7c7b\u90fd\u91c7\u7528 X-Y \u8def\u7531\uff0c\u7b2c\u4e8c\u7c7b\u90fd\u91c7\u7528 Y-X \u8def\u7531\uff0c\u8fd9\u6837\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ec4\u5408\u591a\u79cd\u65e0\u6b7b\u9501\u7684\u8def\u7531\u7b97\u6cd5\u3002</p> <p>\u4e00\u4e2a\u91cd\u8981\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f Escape Virtual Channel\u3002\u5177\u4f53\u5730\uff0c\u5728\u591a\u4e2a Virtual Channel \u7684\u573a\u666f\u4e0b\uff0c\u8bbe\u7f6e\u5176\u4e2d\u4e00\u4e2a Virtual Channel\uff0c\u4f8b\u5982 VC0 \u4e3a Escape Virtual Channel\u3002\u53ea\u6709 VC0 \u5fc5\u987b\u91c7\u7528\u65e0\u6b7b\u9501\u7684\u8def\u7531\u7b97\u6cd5\uff0c\u4f8b\u5982 X-Y \u8def\u7531\uff0c\u5176\u4ed6 Virtual Channel \u53ef\u4ee5\u7528\u53ef\u80fd\u6b7b\u9501\u7684\u8def\u7531\u7b97\u6cd5\u3002</p>"},{"location":"hardware/on_chip_networks/#_7","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>On-Chip Networks, Second Edition</li> </ul>"},{"location":"hardware/ooo_cpu/","title":"\u4e71\u5e8f\u6267\u884c CPU","text":""},{"location":"hardware/ooo_cpu/#tomasulo","title":"\u7ecf\u5178 Tomasulo","text":"<p>\u53c2\u8003\u6559\u6750\uff1aBerkeley CS252\u3002</p> <p>\u7ecf\u5178 Tomasulo\uff0c\u4e5f\u662f Wikipedia \u4e0a\u63cf\u8ff0\u7684 Tomasulo \u7b97\u6cd5\uff0c\u5b83\u7684\u6838\u5fc3\u662f\u4fdd\u7559\u7ad9\u3002\u6307\u4ee4\u5728 Decode \u4e4b\u540e\uff0c\u4f1a\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u4fdd\u7559\u7ad9\u4e2d\u3002\u4fdd\u7559\u7ad9\u6709\u4ee5\u4e0b\u7684\u8fd9\u4e9b\u5c5e\u6027\uff1a</p> <ol> <li>Op\uff1a\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c</li> <li>Qj\uff0cQk\uff1a\u64cd\u4f5c\u6570\u4f9d\u8d56\u7684\u6307\u4ee4\u76ee\u524d\u6240\u5728\u7684\u4fdd\u7559\u7ad9 ID</li> <li>Vj\uff0cQk\uff1a\u64cd\u4f5c\u6570\u7684\u503c</li> <li>Rj\uff0cRk\uff1a\u64cd\u4f5c\u6570\u662f\u5426 ready\uff08\u6216\u8005\u7528\u7279\u6b8a\u7684 Qj\uff0cQk \u503c\u8868\u793a\u662f\u5426 ready\uff09</li> <li>Busy\uff1a\u8fd9\u4e2a\u4fdd\u7559\u7ad9\u88ab\u5360\u7528</li> </ol> <p>\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a mapping\uff08Wikipedia \u4e0a\u53eb\u505a RegisterStat\uff09\uff0c\u8bb0\u5f55\u4e86\u5bc4\u5b58\u5668\u662f\u5426\u4f1a\u88ab\u67d0\u4e2a\u4fdd\u7559\u7ad9\u4e2d\u7684\u6307\u4ee4\u5199\u5165\u3002</p> <p>\u6307\u4ee4\u5206\u914d\u5230\u4fdd\u7559\u7ad9\u7684\u65f6\u5019\uff0c\u4f1a\u67e5\u8be2 RegisterStat\uff0c\u5f97\u77e5\u64cd\u4f5c\u6570\u5bc4\u5b58\u5668\u662f\u5426 ready\uff0c\u5982\u679c\u4e0d ready\uff0c\u8bf4\u660e\u6709\u4e00\u4e2a\u5148\u524d\u7684\u6307\u4ee4\u8981\u5199\u5165\u8fd9\u4e2a\u5bc4\u5b58\u5668\uff0c\u90a3\u5c31\u8bb0\u5f55\u4e0b\u5bf9\u5e94\u7684\u4fdd\u7559\u7ad9 ID\u3002\u5f53\u64cd\u4f5c\u6570\u90fd ready \u4e86\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u8ba1\u7b97\u5355\u5143\u8ba1\u7b97\u3002\u5f53\u4e00\u6761\u6307\u4ee4\u5728\u6267\u884c\u5355\u5143\u4e2d\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u672a\u51fa\u73b0 WAW \u65f6\u4f1a\u628a\u7ed3\u679c\u5199\u5165\u5bc4\u5b58\u5668\u5806\uff0c\u5e76\u4e14\u901a\u8fc7 Common Data Bus \u8fdb\u884c\u5e7f\u64ad\uff0c\u76ee\u524d\u5728\u4fdd\u7559\u7ad9\u4e2d\u7684\u6307\u4ee4\u5982\u679c\u53d1\u73b0\uff0c\u5b83\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6570\u521a\u597d\u8ba1\u7b97\u51fa\u6765\u4e86\uff0c\u5c31\u4f1a\u628a\u53d6\u503c\u4fdd\u5b58\u4e0b\u6765\u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ec6\u8282\uff1a\u56e0\u4e3a\u4fdd\u7559\u7ad9\u4e2d\u7684\u6307\u4ee4\u53ef\u80fd\u8981\u7b49\u5f85\u5176\u4ed6\u6307\u4ee4\u7684\u5b8c\u6210\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u5355\u5143\u5229\u7528\u7387\u66f4\u9ad8\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8ba1\u7b97\u7c7b\u578b\uff08\u6bd4\u5982 ALU\uff09\uff0c\u9700\u8981\u6709\u82e5\u5e72\u4e2a\u540c\u7c7b\u7684\u4fdd\u7559\u7ad9\uff08\u6bd4\u5982 Add1\uff0cAdd2\uff0cAdd3\uff09\u3002\u5728 Wikipedia \u7684\u8868\u8ff0\u4e2d\uff0c\u6bcf\u4e2a\u4fdd\u7559\u7ad9\u5bf9\u5e94\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5355\u5143\uff0c\u8fd9\u6837\u6027\u80fd\u6bd4\u8f83\u597d\uff0c\u4f46\u81ea\u7136\u9762\u79ef\u4e5f\u5c31\u66f4\u5927\u3002\u5982\u679c\u8282\u7701\u9762\u79ef\uff0c\u4e5f\u53ef\u4ee5\u51cf\u5c11\u8ba1\u7b97\u5355\u5143\u7684\u6570\u91cf\uff0c\u7136\u540e\u6bcf\u4e2a\u8ba1\u7b97\u5355\u5143\u4ece\u591a\u4e2a\u4fdd\u7559\u7ad9\u4e2d\u83b7\u53d6\u8ba1\u7b97\u7684\u6307\u4ee4\u3002</p> <p>\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u74f6\u9888\u5728\u4ec0\u4e48\u5730\u65b9\u3002\u9996\u5148\uff0c\u6bcf\u6761\u6307\u4ee4\u90fd\u653e\u5728\u4e00\u4e2a\u4fdd\u7559\u7ad9\u4e2d\uff0c\u5f53\u4fdd\u7559\u7ad9\u6ee1\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u53d1\u5c04\u65b0\u7684\u6307\u4ee4\u3002\u5176\u6b21\uff0c\u5982\u679c\u8ba1\u7b97\u5355\u5143\u7684\u541e\u5410\u8ddf\u4e0d\u4e0a\u4fdd\u7559\u7ad9\u7684\u586b\u5145\u901f\u5ea6\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u963b\u585e\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u70b9\u5728\u4e8e\u96be\u4ee5\u5b9e\u73b0\u7cbe\u786e\u5f02\u5e38\u3002\u7cbe\u786e\u5f02\u5e38\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5f02\u5e38\u4e4b\u524d\u7684\u6307\u4ee4\u90fd\u751f\u6548\uff0c\u5f02\u5e38\u548c\u5f02\u5e38\u4e4b\u540e\u7684\u6307\u4ee4\u4e0d\u751f\u6548\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6cd5\u8fdb\u884c\u533a\u5206\u3002</p> <p>\u4ece\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u79cd\u65b9\u6cd5\u5c5e\u4e8e Implicit Register Renaming\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a Register \u91cd\u547d\u540d\u4e3a\u4fdd\u7559\u7ad9\u7684 ID\u3002</p> <p>\u518d\u5206\u6790\u4e00\u4e0b\u5bc4\u5b58\u5668\u5806\u9700\u8981\u54ea\u4e9b\u8bfb\u5199\u53e3\u3002\u6709\u4e00\u6761\u89c4\u5f8b\u662f\uff0c\u5bc4\u5b58\u5668\u5806\u7684\u9762\u79ef\u4e0e\u8bfb\u5199\u53e3\u4e2a\u6570\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3002\u5bf9\u4e8e\u6bcf\u6761\u53d1\u5c04\u7684\u6307\u4ee4\uff0c\u90fd\u9700\u8981\u4ece\u5bc4\u5b58\u5668\u5806\u8bfb\u64cd\u4f5c\u6570\uff0c\u6240\u4ee5\u8bfb\u53e3\u662f\u64cd\u4f5c\u6570 x \u6307\u4ee4\u53d1\u5c04\u6570\u3002\u5f53\u6267\u884c\u5355\u5143\u5b8c\u6210\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u9700\u8981\u5199\u5165\u5bc4\u5b58\u5668\u5806\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6267\u884c\u5355\u5143\u90fd\u5bf9\u5e94\u4e00\u4e2a\u5bc4\u5b58\u5668\u5806\u7684\u5199\u53e3\u3002</p> <p>\u786c\u4ef6\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u6027\u80fd\uff0c\u5e0c\u671b\u4fdd\u7559\u7ad9\u53ef\u4ee5\u505a\u7684\u6bd4\u8f83\u591a\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bb9\u7eb3\u66f4\u591a\u7684\u6307\u4ee4\u3002\u4f46\u662f\uff0c\u4fdd\u7559\u7ad9\u91cc\u9762\u81f3\u5c11\u8981\u4fdd\u5b58\u64cd\u4f5c\u6570\u7684\u503c\uff0c\u4f1a\u6bd4\u8f83\u5360\u7528\u9762\u79ef\uff0c\u5e76\u4e14\u65f6\u5ef6\u4e5f\u6bd4\u8f83\u5927\u3002</p>"},{"location":"hardware/ooo_cpu/#rob-reorder-buffer","title":"ROB (ReOrder Buffer)","text":"<p>\u53c2\u8003\u6559\u6750\uff1aStanford CS349G</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u7cbe\u786e\u5f02\u5e38\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165 ROB\u3002\u5728\u4e0a\u9762\u7684 Tomasulo \u7b97\u6cd5\u4e2d\uff0c\u8ba1\u7b97\u5355\u5143\u8ba1\u7b97\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u628a\u7ed3\u679c\u5199\u5165\u5230\u5bc4\u5b58\u5668\u5806\u4e2d\uff0c\u56e0\u6b64\u7cbe\u786e\u5f02\u5e38\u65f6\u96be\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u5bc4\u5b58\u5668\u5806\u53d6\u503c\u3002\u65e2\u7136\u6211\u4eec\u5e0c\u671b\u5bc4\u5b58\u5668\u5806\u7684\u72b6\u6001\u4e0e\u987a\u5e8f\u6267\u884c\u7684\u7ed3\u679c\u4e00\u81f4\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165 ROB\u3002</p> <p>ROB \u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u961f\u5217\u5934\u5c3e\u6307\u9488\u4e4b\u95f4\u5c31\u662f\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e2a ROB \u8868\u9879\u8bb0\u5f55\u4e86\u6307\u4ee4\u7684\u72b6\u6001\u3001\u76ee\u7684\u5bc4\u5b58\u5668\u548c\u76ee\u7684\u5bc4\u5b58\u5668\u5c06\u8981\u5199\u5165\u7684\u503c\u3002ROB \u4f1a\u68c0\u67e5\u961f\u5217\u5934\u7684\u6307\u4ee4\uff0c\u5982\u679c\u5df2\u7ecf\u6267\u884c\u5b8c\u6210\uff0c\u5e76\u4e14\u6ca1\u6709\u5f02\u5e38\uff0c\u5c31\u53ef\u4ee5\u8ba9\u7ed3\u679c\u751f\u6548\uff0c\u5e76\u628a\u6307\u4ee4\u4ece\u961f\u5217\u5934\u4e2d\u5220\u53bb\uff0c\u7ee7\u7eed\u68c0\u67e5\u540e\u9762\u7684\u3002Decode \u51fa\u6765\u7684\u6307\u4ee4\u5219\u4f1a\u63d2\u5165\u5230 ROB \u7684\u5c3e\u90e8\uff0c\u5e76\u4e14\u968f\u7740\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u66f4\u65b0\u72b6\u6001\u3002\u9047\u5230\u5f02\u5e38\u7684\u6307\u4ee4\uff0c\u5c31\u628a\u961f\u5217\u4e2d\u7684\u6307\u4ee4\u3001\u4fdd\u7559\u7ad9\u548c\u6267\u884c\u5355\u5143\u6e05\u7a7a\uff0c\u4ece\u5f02\u5e38\u5904\u7406\u5730\u5740\u5f00\u59cb\u91cd\u65b0\u6267\u884c\u3002</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u5bc4\u5b58\u5668\u5806\u7684\u6b63\u786e\u6027\uff0c\u8fd0\u7b97\u5355\u5143\u7684\u8fd0\u7b97\u7ed3\u679c\u4f1a\u5199\u5165 ROB \u9879\u4e2d\uff0c\u5f53\u8fd9\u4e00\u9879\u5728 ROB \u961f\u5217\u5934\u90e8\u88ab\u5220\u53bb\u65f6\uff0c\u5c31\u4f1a\u5199\u5165\u5bc4\u5b58\u5668\u5806\u3002\u5728\u7ecf\u5178 Tomasulo \u4e2d\uff0c\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u4e3a\u4fdd\u7559\u7ad9\u7684 ID\uff0c\u4f46\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u5e94\u8be5\u91cd\u547d\u540d\u4e3a ROB \u7684 ID\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5bc4\u5b58\u5668\u5230 ROB ID \u7684\u6620\u5c04\uff0c\u5f53\u6307\u4ee4\u8fdb\u5165\u4fdd\u7559\u7ad9\u7684\u65f6\u5019\uff0c\u9700\u8981\u4ece\u5bc4\u5b58\u5668\u5806\u6216\u8005 ROB \u4e2d\u53bb\u8bfb\u53d6\u64cd\u4f5c\u6570\u7684\u503c\u3002\u5728 CDB \u4e0a\u5e7f\u64ad\u7684\u4e5f\u662f ROB \u7684 ID\uff0c\u800c\u4e0d\u662f\u4fdd\u7559\u7ad9\u7684 ID\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0cROB \u7684\u5927\u5c0f\u6210\u4e3a\u4e86\u4e00\u4e2a\u65b0\u7684\u74f6\u9888\uff0c\u56e0\u4e3a\u6bcf\u6761\u5728\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4\u90fd\u9700\u8981\u5728 ROB \u4e2d\u8bb0\u5f55\u4e00\u4efd\u3002\u4e0d\u8fc7\u597d\u5904\u662f\u5b9e\u73b0\u4e86\u7cbe\u786e\u5f02\u5e38\u3002</p>"},{"location":"hardware/ooo_cpu/#explicit-register-renaming","title":"Explicit Register Renaming","text":"<p>\u4e0a\u9762\u4e24\u79cd\u8bbe\u8ba1\u90fd\u662f\u91c7\u7528\u7684 Implicit Register Renaming \u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u91cd\u547d\u540d\u5230\u4e86\u4fdd\u7559\u7ad9\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u91cd\u547d\u540d\u5230\u4e86 ROB\u3002\u8fd8\u6709\u4e00\u79cd\u8bbe\u8ba1\uff0c\u628a\u5bc4\u5b58\u5668\u7f16\u53f7\u6620\u5c04\u5230\u7269\u7406\u7684\u5bc4\u5b58\u5668\u3002\u628a ISA \u4e2d\u7684\u5bc4\u5b58\u5668\u79f0\u4e3a\u67b6\u6784\u5bc4\u5b58\u5668\uff08\u6bd4\u5982 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff09\uff0cCPU \u4e2d\u5b9e\u9645\u7684\u5bc4\u5b58\u5668\u79f0\u4e3a\u7269\u7406\u5bc4\u5b58\u5668\uff0c\u7269\u7406\u5bc4\u5b58\u5668\u4e00\u822c\u4f1a\u6bd4\u67b6\u6784\u5bc4\u5b58\u5668\u591a\u5f88\u591a\uff08\u4e00\u4e24\u767e\u4e2a\u751a\u81f3\u66f4\u591a\uff09\u3002</p> <p>Explicit Register Renaming \u548c ReOrder Buffer \u8fd9\u4e24\u4e2a\u8bbe\u8ba1\u65b9\u5411\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\u3002</p> <p>\u6620\u5c04\u7684\u65b9\u6cd5\u548c\u524d\u9762\u7684\u7c7b\u4f3c\uff0c\u4e5f\u662f\u7ef4\u62a4\u4e00\u4e2a mapping\uff0c\u4ece\u67b6\u6784\u5bc4\u5b58\u5668\u5230\u7269\u7406\u5bc4\u5b58\u5668\u3002\u5f53\u4e00\u6761\u6307\u4ee4 Dispatch \u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u6570\u5728 mapping \u4e2d\u627e\u5230\u5b9e\u9645\u7684\u7269\u7406\u5bc4\u5b58\u5668\u7f16\u53f7\u3002\u5982\u679c\u8fd9\u6761\u6307\u4ee4\u8981\u5199\u5165\u65b0\u7684\u67b6\u6784\u5bc4\u5b58\u5668\uff0c\u5219\u4ece\u672a\u5206\u914d\u7684\u7269\u7406\u5bc4\u5b58\u5668\u4e2d\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u66f4\u65b0 mapping\uff0c\u5373\u628a\u5199\u5165\u7684\u67b6\u6784\u5bc4\u5b58\u5668\u6620\u5c04\u5230\u65b0\u7684\u7269\u7406\u5bc4\u5b58\u5668\u4e0a\u3002\u7136\u540e\uff0c\u653e\u5230 Issue Queue \u4e2d\u3002</p> <p>Issue Queue \u53ef\u4ee5\u7406\u89e3\u4e3a\u4fdd\u7559\u7ad9\u7684\u7b80\u5316\u7248\uff0c\u5b83\u4e0d\u518d\u4fdd\u5b58\u64cd\u4f5c\u6570\u7684\u53d6\u503c\uff0c\u800c\u4ec5\u4ec5\u7ef4\u62a4\u64cd\u4f5c\u6570\u662f\u5426 ready\u3002\u540e\u9762\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u4fdd\u5b58\u64cd\u4f5c\u6570\u7684\u53d6\u503c\u3002\u5728 Issue Queue \u4e2d\u7684\u6307\u4ee4\u5728\u6240\u6709\u64cd\u4f5c\u6570\u90fd ready \u7684\u65f6\u5019\uff0c\u5219\u4f1a Issue \u5230\u4e0d\u540c\u7684\u7aef\u53e3\u4e2d\u3002\u6bcf\u4e2a\u7aef\u53e3\u5bf9\u5e94\u7740\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u6bd4\u5982\u4e24\u4e2a ALU \u7aef\u53e3\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a ALU \u6267\u884c\u5355\u5143\u3002\u6307\u4ee4\u9996\u5148\u901a\u8fc7\u5bc4\u5b58\u5668\u5806\uff0c\u4ee5\u7269\u7406\u5bc4\u5b58\u5668\u4e3a\u7f16\u53f7\u53bb\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u8fd9\u4e2a\u503c\u76f4\u63a5\u4f20\u7ed9\u6267\u884c\u5355\u5143\uff0c\u4e0d\u4f1a\u5b58\u4e0b\u6765\u3002\u5f53\u6267\u884c\u5355\u5143\u6267\u884c\u5b8c\u6bd5\u7684\u65f6\u5019\uff0c\u7ed3\u679c\u4e5f\u662f\u5199\u5230\u7269\u7406\u5bc4\u5b58\u5668\u5806\u4e2d\uff0cROB \u4e0d\u4fdd\u5b58\u6570\u636e\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u503c\u4ec5\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u5806\u4e2d\uff0cIssue Queue \u548c ROB \u90fd\u53ea\u4fdd\u5b58\u4e00\u4e9b\u72b6\u6001\u4f4d\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u505a\u7684\u5f88\u5927\uff0c\u5178\u578b\u7684 Issue Queue \u6709\u51e0\u5341\u9879\uff0cROB \u5219\u6709\u51e0\u767e\u9879\u3002</p> <p>\u63a5\u4e0b\u6765\u8ba8\u8bba\u4e00\u4e9b\u7ec6\u8282\u3002\u9996\u5148\u662f\uff0c\u7269\u7406\u5bc4\u5b58\u5668\u4f55\u65f6\u91ca\u653e\u3002\u5f53\u4e00\u6761\u6307\u4ee4\u5199\u5165\u4e00\u4e2a\u67b6\u6784\u5bc4\u5b58\u5668\u7684\u65f6\u5019\uff0c\u5728\u4e0b\u4e00\u6b21\u8fd9\u4e2a\u67b6\u6784\u5bc4\u5b58\u5668\u88ab\u5199\u5165\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u90fd\u6709\u53ef\u80fd\u88ab\u8bfb\u53d6\uff0c\u56e0\u6b64\u8fd9\u4e2a\u67b6\u6784\u5bc4\u5b58\u5668\u5230\u7269\u7406\u5bc4\u5b58\u5668\u7684\u6620\u5c04\u8981\u4fdd\u7559\u3002\u5982\u679c\u6211\u4eec\u80fd\u4fdd\u8bc1\u8bfb\u53d6\u8fd9\u4e2a\u503c\u7684\u6307\u4ee4\u90fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u91ca\u653e\u8fd9\u4e2a\u7269\u7406\u5bc4\u5b58\u5668\u4e86\u3002\u4e00\u4e2a\u65b9\u6cd5\u662f\uff0c\u6211\u5728\u8986\u76d6\u67b6\u6784\u5bc4\u5b58\u5668\u5230\u7269\u7406\u5bc4\u5b58\u5668\u7684\u6620\u5c04\u65f6\uff0c\u6211\u8fd8\u8981\u8bb0\u5f55\u539f\u6765\u7684\u7269\u7406\u5bc4\u5b58\u5668\uff0c\u5f53\u8be5\u6307\u4ee4\u5728 ROB \u4e2d\u63d0\u4ea4\u4e86\uff08\u4ece\u961f\u5934\u51fa\u53bb\u4e86\uff09\uff0c\u8bf4\u660e\u4e4b\u524d\u53ef\u80fd\u4f9d\u8d56\u8fd9\u4e2a\u7269\u7406\u5bc4\u5b58\u5668\u7684\u6240\u6709\u6307\u4ee4\u90fd\u5b8c\u6210\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u628a\u539f\u6765\u7684\u7269\u7406\u5bc4\u5b58\u5668\u653e\u5230\u672a\u6620\u5c04\u7684\u5217\u8868\u4e2d\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u9047\u5230\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u5982\u4f55\u6062\u590d\u5728\u5f02\u5e38\u6307\u4ee4\u5904\u7684\u67b6\u6784\u5bc4\u5b58\u5668\u5230\u7269\u7406\u5bc4\u5b58\u5668\u7684\u6620\u5c04\u5462\uff1f\u4e00\u4e2a\u529e\u6cd5\u662f\uff0c\u5229\u7528\u6211\u5728 ROB \u4e2d\u8bb0\u5f55\u7684\u88ab\u8986\u76d6\u7684\u7269\u7406\u5bc4\u5b58\u5668\u7f16\u53f7\uff0c\u4ece ROB \u961f\u5c3e\u5f80\u524d\u56de\u6eda\uff0c\u5f53\u53d1\u73b0\u4e00\u6761\u6307\u4ee4\u8986\u76d6\u4e86\u4e00\u4e2a\u67b6\u6784\u5bc4\u5b58\u5668\u6620\u5c04\u7684\u65f6\u5019\uff0c\u5c31\u6062\u590d\u4e3a\u8986\u76d6\u4e4b\u524d\u7684\u503c\u3002\u8fd9\u6837\uff0c\u5f53\u56de\u6eda\u5230\u5f02\u5e38\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5f97\u5230\u6b63\u786e\u7684\u6620\u5c04\u3002MIPS R10K \u7684\u8bba\u6587\u4e2d\u662f\u8fd9\u4e48\u63cf\u8ff0\u7684\uff1a</p> <pre><code>The active list contains the logical-destination register number and its\nold physical-register number for each instruction. An instruction's\ngraduation commits its new mapping, so the old physical register can\nreturn to the free list for reuse. When an exception occurs, however,\nsubsequent instructions never graduate. Instead, the processor restores\nold mappings from the active list. The R1OOOO unmaps four instructions\nper cycle--in reverse order, in case it renamed the same logical\nregister twice. Although this is slower than restoring a branch,\nexceptions are much rarer than mispredicted branches. The processor\nreturns new physical registers to the free lists by restoring their read\npointers.\n</code></pre> <p>\u53e6\u4e00\u79cd\u529e\u6cd5\u662f\u8bb0\u5f55\u4e00\u4e2a Committed Map Table\uff0c\u4e5f\u5c31\u662f\uff0c\u53ea\u6709\u5f53 ROB Head \u7684\u6307\u4ee4\u88ab Commit \u7684\u65f6\u5019\uff0c\u624d\u66f4\u65b0 Committed Map Table\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u987a\u5e8f\u6267\u884c\u7684\u5bc4\u5b58\u5668\u6620\u5c04\u8868\u3002\u5f53\u53d1\u751f\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u628a Committed Map Table \u8986\u76d6\u5230 Register Map Table \u4e0a\u3002\u8fd9\u6837\u9700\u8981\u7684\u5468\u671f\u6bd4\u8f83\u5c11\uff0c\u4f46\u662f\u65f6\u5e8f\u53ef\u80fd\u6bd4\u8f83\u5dee\u3002\u53c2\u8003 BOOM \u6587\u6863\u3002</p>"},{"location":"hardware/ooo_cpu/#implicit-renamingrob-explicit-renaming","title":"Implicit Renaming(ROB) \u548c Explicit Renaming \u7684\u6bd4\u8f83","text":"<p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u4e3b\u8981\u533a\u522b\uff1a</p> <ol> <li>Implicit Renaming \u5728\u5206\u53d1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4ece\u5bc4\u5b58\u5668\u5806\u8bfb\u53d6\u6570\u636e\uff0c\u4fdd\u5b58\u5230\u4fdd\u7559\u7ad9\u4e2d\uff1b\u800c Explicit Renaming \u662f\u6307\u4ee4\u4ece Issue Queue \u5230\u6267\u884c\u5355\u5143\u65f6\u5019\u4ece\u5bc4\u5b58\u5668\u5806\u8bfb\u53d6\u6570\u636e</li> <li>Implicit Renaming \u7684\u5bc4\u5b58\u5668\u5806\u8bfb\u53d6\u53e3\u8f83\u5c11\uff0c\u53ea\u9700\u8981\u8003\u8651\u53d1\u5c04\u6570\u4e58\u4ee5\u64cd\u4f5c\u6570\u4e2a\u6570\uff0c\u4f46\u6240\u6709\u7c7b\u578b\u7684\u5bc4\u5b58\u5668\u5806\uff08\u6574\u6570\u3001\u6d6e\u70b9\uff09\u90fd\u9700\u8981\u8bfb\u53d6\uff1bExplicit Renaming \u7684\u5bc4\u5b58\u5668\u5806\u8bfb\u53d6\u53e3\u66f4\u591a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a Issue Queue\uff0c\u90fd\u9700\u8981\u64cd\u4f5c\u6570\u4e2a\u6570\u4e2a\u8bfb\u53d6\u53e3\uff0c\u4f46\u597d\u5904\u662f\u53ef\u4ee5\u5c4f\u853d\u6389\u4e0d\u9700\u8981\u8bbf\u95ee\u7684\u8bfb\u53d6\u53e3\uff0c\u6bd4\u5982\u6d6e\u70b9 FMA \u6d41\u6c34\u4e0d\u9700\u8981\u8bfb\u53d6\u6574\u6570\u5bc4\u5b58\u5668\u5806\u3002\u5199\u548c\u8bfb\u662f\u7c7b\u4f3c\u7684\uff1aImplicit Renaming \u4e2d\uff0c\u5bc4\u5b58\u5668\u5806\u7684\u5199\u5165\u662f\u4ece ROB \u4e0a\u63d0\u4ea4\uff1b\u800c Explicit Renaming \u5219\u662f\u6267\u884c\u5355\u5143\u8ba1\u7b97\u5b8c\u540e\u5199\u5165\u5bc4\u5b58\u5668\u5806\u3002</li> </ol>"},{"location":"hardware/ooo_cpu/#_1","title":"\u5e38\u89c1\u4f18\u5316\u624b\u6bb5","text":"<p>\u5728\u7b2c\u4e00\u548c\u7b2c\u4e8c\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u5f53\u4e00\u6761\u6307\u4ee4\u8ba1\u7b97\u5b8c\u6210\u65f6\uff0c\u7ed3\u679c\u4f1a\u76f4\u63a5\u901a\u8fc7 CDB \u8f6c\u53d1\u5230\u5176\u4ed6\u6307\u4ee4\u7684\u8f93\u5165\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\u5728\u7b2c\u4e09\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u4e5f\u53ef\u4ee5\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4f46\u56e0\u4e3a\u4e2d\u95f4\u591a\u4e86\u4e00\u7ea7\u5bc4\u5b58\u5668\u5806\u8bfb\u53d6\u7684\u6d41\u6c34\u7ebf\u7ea7\uff0c\u5904\u7406\u4f1a\u66f4\u52a0\u590d\u6742\u4e00\u70b9\u3002\u6bd4\u5982\uff0c\u6709\u4e00\u6761 ALU \u6307\u4ee4\uff0c\u53ef\u4ee5\u786e\u5b9a\u5b83\u5728\u4e00\u4e2a\u5468\u671f\u540e\u4e00\u5b9a\u4f1a\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u63d0\u524d\u628a\u4f9d\u8d56\u8fd9\u6761\u6307\u4ee4\u7684\u5176\u4ed6\u6307\u4ee4 Dispatch \u51fa\u53bb\uff0c\u7136\u540e\u5728 ALU \u4e4b\u95f4\u8fde\u63a5\u4e00\u4e2a bypass \u7f51\u7edc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u5468\u671f\u3002</p> <p>\u6b64\u5916\uff0c\u4e3a\u4e86\u63d0\u9ad8\u541e\u5410\u7387\uff0c\u4e00\u822c\u8ba1\u7b97\u5355\u5143\u90fd\u88ab\u8bbe\u8ba1\u4e3a\u6bcf\u4e2a\u5468\u671f\u53ef\u4ee5\u63a5\u53d7\u4e00\u6761\u6307\u4ee4\uff0c\u5728\u5185\u90e8\u5b9e\u73b0\u6d41\u6c34\u7ebf\u6267\u884c\uff0c\u6bcf\u4e2a\u5468\u671f\u5b8c\u6210\u4e00\u6761\u6307\u4ee4\u7684\u8ba1\u7b97\u3002\u5f53\u7136\u4e86\uff0c\u5f88\u591a\u65f6\u5019\u7531\u4e8e\u6570\u636e\u4f9d\u8d56\u95ee\u9898\uff0c\u53ef\u80fd\u5e76\u4e0d\u80fd\u8fbe\u5230\u6bcf\u4e2a\u5468\u671f\u6bcf\u4e2a\u8ba1\u7b97\u5355\u5143\u90fd\u6ee1\u8f7d\u7684\u60c5\u51b5\u3002</p> <p>\u6709\u4e9b\u65f6\u5019\uff0c\u4e00\u4e9b\u6307\u4ee4\u4e0d\u65b9\u4fbf\u540e\u7aef\u5b9e\u73b0\uff0c\u5c31\u4f1a\u52a0\u4e00\u5c42\u8f6c\u6362\uff0c\u4ece\u6307\u4ee4\u8f6c\u6362\u4e3a uop\uff0c\u518d\u7531\u540e\u7aef\u6267\u884c\u3002\u8fd9\u5728 x86 \u5904\u7406\u5668\u4e0a\u5f88\u666e\u904d\uff0c\u56e0\u4e3a\u6307\u4ee4\u96c6\u592a\u590d\u6742\u4e86\u3002\u50cf AArch64 \u6307\u4ee4\u96c6\uff0c\u5b83\u5728 Load/Store \u7684\u65f6\u5019\u53ef\u4ee5\u5bf9\u5730\u5740\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u79cd\u65f6\u5019\u4e5f\u662f\u62c6\u5206\u4e3a\u4e24\u6761 uop \u6765\u6267\u884c\u3002\u4e00\u4e9b\u5b9e\u7528\u7684\u6307\u4ee4\u9700\u8981\u4e09\u4e2a\u64cd\u4f5c\u6570\uff0c\u6bd4\u5982 <code>D = A ? B : C</code>\uff0c\u5728 Alpha 21264 \u4e2d\uff0c\u8fd9\u6761\u6307\u4ee4\u4f1a\u8f6c\u6362\u4e3a\u4e24\u6761 uop\uff0c\u8fd9\u4e24\u6761 uop \u7684\u64cd\u4f5c\u6570\u5c31\u53ea\u6709\u4e24\u4e2a\uff0c\u4fbf\u4e8e\u540e\u7aef\u5b9e\u73b0\uff0c\u5426\u5219\u5728\u5404\u4e2a\u5730\u65b9\u90fd\u5141\u8bb8\u4e09\u4e2a\u64cd\u4f5c\u6570\u4f1a\u5bfc\u81f4\u4e00\u5b9a\u7684\u6d6a\u8d39\u3002</p>"},{"location":"hardware/ooo_cpu/#_2","title":"\u5185\u5b58\u8bbf\u95ee","text":"<p>\u5185\u5b58\u8bbf\u95ee\u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5b83\u6d89\u53ca\u5230\u7f13\u5b58\u3001\u9875\u8868\u3001\u5185\u5b58\u5e8f\u7b49\u95ee\u9898\u3002\u5728\u4e71\u5e8f\u6267\u884c\u4e2d\uff0c\u8981\u5c3d\u91cf\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u5bf9\u5176\u4ed6\u6307\u4ee4\u7684\u5ef6\u8fdf\u7684\u5f71\u54cd\uff0c\u540c\u65f6\u4e5f\u8981\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\u8fd9\u91cc\u53c2\u8003\u7684\u662f BOOM \u7684 LSU \u8bbe\u8ba1\u3002</p> <p>\u9996\u5148\u662f\u6b63\u786e\u6027\u3002\u4e00\u822c\u6765\u8bf4\u53ef\u4ee5\u8ba4\u4e3a\uff0cLoad \u662f\u6ca1\u6709\u526f\u4f5c\u7528\u7684\uff08\u5b9e\u9645\u4e0a\uff0cLoad \u4f1a\u5bfc\u81f4 Cache \u52a0\u8f7d\u6570\u636e\uff0c\u8fd9\u4e5f\u5f15\u53d1\u4e86\u4ee5 Meltdown \u4e3a\u9996\u7684\u4e00\u7cfb\u5217\u6f0f\u6d1e\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u6fc0\u8fdb\u5730\u9884\u6d4b\u6267\u884c Load\u3002\u4f46\u662f\uff0cStore \u662f\u6709\u526f\u4f5c\u7528\u7684\uff0c\u5199\u51fa\u53bb\u7684\u6570\u636e\u5c31\u6ca1\u6cd5\u8fd8\u539f\u4e86\u3002\u56e0\u6b64\uff0cStore \u6307\u4ee4\u53ea\u6709\u5728 ROB Head \u88ab Commit \u7684\u65f6\u5019\uff0c\u624d\u4f1a\u5199\u5165\u5230 Cache \u4e2d\u3002</p> <p>\u5176\u6b21\u662f\u6027\u80fd\uff0c\u6211\u4eec\u5e0c\u671b Load \u6307\u4ee4\u53ef\u4ee5\u5c3d\u5feb\u5730\u5b8c\u6210\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u540e\u7eed\u7684\u8ba1\u7b97\u6307\u4ee4\u53ef\u4ee5\u5c3d\u5feb\u5730\u5f00\u59cb\u8fdb\u884c\u3002\u5f53 Load \u6307\u4ee4\u7684\u5730\u5740\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u53bb\u53d6\u6570\u636e\uff0c\u8fd9\u65f6\u5019\uff0c\u9996\u5148\u8981\u53bb Store Queue \u91cc\u9762\u627e\uff0c\u5982\u679c\u6709 Store \u6307\u4ee4\u8981\u5199\u5165\u7684\u5730\u5740\u7b49\u4e8e Load \u7684\u5730\u5740\uff0c\u8bf4\u660e\u540e\u9762\u7684 Load \u4f9d\u8d56\u4e8e\u524d\u9762\u7684 Store\uff0c\u5982\u679c Store \u7684\u6570\u636e\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u6570\u636e\u8f6c\u53d1\u8fc7\u6765\uff0c\u5c31\u4e0d\u9700\u8981\u4ece Cache \u4e2d\u83b7\u53d6\uff0c\u5982\u679c\u6570\u636e\u8fd8\u6ca1\u51c6\u5907\u597d\uff0c\u5c31\u9700\u8981\u7b49\u5f85\u8fd9\u4e00\u6761 Store \u5b8c\u6210\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684 Store \u6307\u4ee4\uff0c\u518d\u4ece\u5185\u5b58\u4e2d\u53d6\u3002\u4e0d\u8fc7\uff0c\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\uff0c\u5f53 Store \u6307\u4ee4\u7684\u5730\u5740\u8fdf\u8fdf\u6ca1\u6709\u8ba1\u7b97\u51fa\u6765\uff0c\u800c\u540e\u9762\u7684 Load \u5df2\u7ecf\u63d0\u524d\u4ece Cache \u4e2d\u83b7\u53d6\u6570\u636e\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u6240\u4ee5\u5f53 Store \u8ba1\u7b97\u51fa\u5730\u5740\u7684\u65f6\u5019\uff0c\u9700\u8981\u68c0\u67e5\u540e\u9762\u7684 Load \u6307\u4ee4\u662f\u5426\u51fa\u73b0\u5730\u5740\u91cd\u5408\uff0c\u5982\u679c\u51fa\u73b0\u4e86\uff0c\u5c31\u8981\u628a\u8fd9\u6761 Load \u4ee5\u53ca\u4f9d\u8d56\u8fd9\u6761 Load \u6307\u4ee4\u7684\u5176\u4f59\u6307\u4ee4\u91cd\u65b0\u6267\u884c\u3002POWER8 \u5904\u7406\u5668\u5fae\u67b6\u6784\u8bba\u6587\u4e2d\u5bf9\u6b64\u4e5f\u6709\u7c7b\u4f3c\u7684\u8868\u8ff0\uff1a</p> <pre><code>The POWER8 IFU also implements mechanisms to mitigate performance\ndegradation associated with pipeline hazards. A Store-Hit-Load (SHL) is\nan out-of-order pipeline hazard condition, where an older store executes\nafter a younger overlapping load, thus signaling that the load received\nstale data. The POWER8 IFU has logic to detect when this condition\nexists and provide control to avoid the hazard by flushing the load\ninstruction which received stale data (and any following instructions).\nWhen a load is flushed due to detection of a SHL, the fetch address of\nthe load is saved and the load is marked on subsequent fetches allowing\nthe downstream logic to prevent the hazard. When a marked load\ninstruction is observed, the downstream logic introduces an explicit\nregister dependency for the load to ensure that it is issued after the\nstore operation.\n</code></pre>"},{"location":"hardware/ooo_cpu/#load-store-unit","title":"Load Store Unit","text":"<p>LSU \u662f\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8d1f\u8d23 Load/Store/Atomic \u7b49\u6307\u4ee4\u7684\u5b9e\u73b0\u3002\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u6309\u987a\u5e8f\u6267\u884c\uff0c\u4f46\u7531\u4e8e pipeline \u4f1a\u88ab\u6e05\u7a7a\uff0cStore/Atomic/Uncached Load \u8fd9\u7c7b\u6709\u526f\u4f5c\u7528\uff08\u5f53\u7136\u4e86\uff0c\u5982\u679c\u8003\u8651 Meltdown \u7c7b\u653b\u51fb\u7684\u8bdd\uff0cCached Load \u4e5f\u6709\u526f\u4f5c\u7528\uff0c\u8fd9\u91cc\u5c31\u5ffd\u7565\u4e86\uff09\uff0c\u9700\u8981\u7b49\u5230 commit \u7684\u65f6\u5019\u518d\u6267\u884c\u3002\u8fd9\u6837 LSU \u5f88\u5bb9\u6613\u6210\u4e3a\u74f6\u9888\uff0c\u7279\u522b\u662f\u5728\u8bbf\u5b58\u6307\u4ee4\u6bd4\u8f83\u591a\u7684\u65f6\u5019\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f88\u91cd\u8981\u7684\u662f\u8ba9\u8bfb\u5199\u4e5f\u4e71\u5e8f\u8d77\u6765\uff0c\u5177\u4f53\u600e\u4e48\u4e71\u5e8f\uff0c\u53d7\u5230\u5b9e\u73b0\u7684\u5f71\u54cd\u548c Memory Order/Program Order \u7684\u8981\u6c42\u3002\u4ece\u6027\u80fd\u7684\u89d2\u5ea6\u4e0a\u6765\u770b\uff0c\u6211\u4eec\u80af\u5b9a\u5e0c\u671b Load \u53ef\u4ee5\u5c3d\u5feb\u6267\u884c\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u5f88\u591a\u6307\u4ee4\u5728\u7b49\u5f85 Load \u7684\u7ed3\u679c\u3002\u90a3\u4e48\uff0c\u9700\u8981\u63d0\u524d\u6267\u884c Load\uff0c\u4f46\u662f\u600e\u4e48\u4fdd\u8bc1\u6b63\u786e\u6027\u5462\uff1f\u5728 Load \u66f4\u65e9\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u8fd8\u6709\u82e5\u5e72\u4e2a Store \u6307\u4ee4\u5c1a\u672a\u6267\u884c\uff0c\u4e00\u4e2a\u601d\u8def\u662f\u7b49\u5f85\u6240\u6709\u7684 Store \u6267\u884c\u5b8c\u6bd5\uff0c\u4f46\u662f\u8fd9\u6837\u6027\u80fd\u4e0d\u597d\uff1b\u53e6\u4e00\u4e2a\u601d\u8def\u662f\u7528\u5730\u5740\u6765\u641c\u7d22 Store \u6307\u4ee4\uff0c\u770b\u770b\u662f\u5426\u51fa\u73b0\u5bf9\u540c\u4e00\u4e2a\u5730\u5740\u7684 Store \u548c Load\uff0c\u5982\u679c\u6709\uff0c\u76f4\u63a5\u8f6c\u53d1\u6570\u636e\uff0c\u5c31\u4e0d\u9700\u8981\u4ece Cache \u83b7\u53d6\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u76f8\u5f53\u4e8e\u505a\u4e86\u4e00\u4e2a\u5168\u76f8\u8fde\u7684 Buffer\uff0c\u9762\u79ef\u5927\uff0c\u5ef6\u8fdf\u9ad8\uff0c\u4e0d\u597d\u6269\u5c55\u7b49\u95ee\u9898\u63a5\u8e35\u800c\u81f3\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3 Store Queue \u9700\u8981\u76f8\u8fde\u641c\u7d22\u7684\u95ee\u9898\uff0cA high-bandwidth load-store unit for single-and multi-threaded processors \u7684\u89e3\u51b3\u601d\u8def\u662f\uff0c\u628a Store \u6307\u4ee4\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u9700\u8981\u8f6c\u53d1\u7684\uff0c\u4e00\u7c7b\u662f\u4e0d\u9700\u8981\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5c0f\u7684\u76f8\u8fde\u5b58\u50a8\u5668\uff0c\u53ea\u4fdd\u5b58\u8fd9\u4e9b\u9700\u8981\u8f6c\u53d1\u7684 Store \u6307\u4ee4\uff1b\u540c\u65f6\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\uff0c\u4fdd\u5b58\u6240\u6709 Store \u6307\u4ee4\u7684\u961f\u5217\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u76f8\u8fde\u641c\u7d22\uff0c\u6240\u4ee5\u53ef\u4ee5\u505a\u7684\u6bd4\u8f83\u5927\u3002</p> <p>\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1aLoad \u5728\u6267\u884c\u524d\uff0c\u66f4\u65e9\u7684 Store \u7684\u5730\u5740\u53ef\u80fd\u8fd8\u6ca1\u6709\u5c31\u7eea\uff0c\u8fd9\u65f6\u5019\u53bb\u641c\u7d22 Store Queue \u5f97\u5230\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u9519\u7684\uff0c\u8fd9\u65f6\u5019\u8981\u4e48\u7b49\u5f85\u6240\u6709\u7684 Store \u5730\u5740\u90fd\u5c31\u7eea\uff0c\u8981\u4e48\u5c31\u5148\u6267\u884c\uff0c\u518d\u7528\u4e00\u4e9b\u673a\u5236\u6765\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff0c\u663e\u7136\u540e\u8005 IPC \u8981\u66f4\u597d\u3002</p> <p>\u4fee\u590d Load Store \u6307\u4ee4\u76f8\u5173\u6027\u95ee\u9898\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5f53\u4e00\u4e2a Store \u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u662f\u5426\u6709\u5730\u5740\u51b2\u7a81\u7684 Load \u6307\u4ee4\uff08\u90a3\u4e48 Load Queue \u4e5f\u8981\u505a\u6210\u76f8\u8fde\u641c\u7d22\u7684\uff09\uff0c\u662f\u5426\u8f6c\u53d1\u4e86\u9519\u8bef\u7684 Store \u6570\u636e\uff0c\u8fd9\u4e5f\u662f Boom LSU \u91c7\u7528\u7684\u65b9\u6cd5\u3002\u53e6\u4e00\u4e2a\u529e\u6cd5\u662f Commit \u7684\u65f6\u5019\uff08\u6216\u8005\u6309\u987a\u5e8f\uff09\u91cd\u65b0\u6267\u884c Load \u6307\u4ee4\uff0c\u5982\u679c Load \u7ed3\u679c\u548c\u4e4b\u524d\u4e0d\u540c\uff0c\u8981\u628a\u540e\u9762\u4f9d\u8d56\u7684\u5237\u65b0\u6389\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\u6bcf\u6761 Load \u6307\u4ee4\u90fd\u8981\u81f3\u5c11\u8bbf\u95ee\u4e24\u6b21 Cache\u3002Store Vulnerability Window (SVW): Re-Execution Filtering for Enhanced Load Optimization \u5c5e\u4e8e\u91cd\u65b0\u6267\u884c Load \u6307\u4ee4\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7 Bloom filter \u6765\u51cf\u5c11\u4e00\u4e9b\u6ca1\u6709\u5fc5\u8981\u91cd\u590d\u6267\u884c\u7684 Load\u3002\u8fd8\u6709\u4e00\u79cd\u529e\u6cd5\uff0c\u5c31\u662f\u9884\u6d4b Load \u6307\u4ee4\u548c\u54ea\u4e00\u6761 Store \u6307\u4ee4\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u7136\u540e\u76f4\u63a5\u53bb\u8bbf\u95ee\u90a3\u4e00\u9879\uff0c\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5c31\u8ba4\u4e3a\u6ca1\u6709\u4f9d\u8d56\u3002Scalable Store-Load Forwarding via Store Queue Index Prediction \u628a Load \u6307\u4ee4\u5206\u4e3a\u4e09\u7c7b\uff0c\u4e00\u7c7b\u662f\u4e0d\u786e\u5b9a\u4f9d\u8d56\u54ea\u6761 Store \u6307\u4ee4\uff08Difficult Loads\uff09\uff0c\u4e00\u7c7b\u662f\u57fa\u672c\u786e\u5b9a\u4f9d\u8d56\u54ea\u4e00\u6761 Store \u6307\u4ee4\uff0c\u4e00\u7c7b\u662f\u4e0d\u4f9d\u8d56 Store \u6307\u4ee4\u3002\u8fd9\u4e2a\u6709\u70b9\u50cf Cache \u91cc\u9762\u7684 Way Prediction \u673a\u5236\u3002</p> <p>\u5206\u6790\u5b8c\u4e86\u4e0a\u8ff0\u4e00\u4e9b\u4f18\u5316\u65b9\u6cd5\uff0c\u6211\u4eec\u4e5f\u6765\u770b\u4e00\u4e9b CPU \u8bbe\u8ba1\u91c7\u7528\u4e86\u54ea\u79cd\u65b9\u6848\u3002\u9996\u5148\u6765\u5206\u6790\u4e00\u4e0b IBM POWER8 \u7684 LSU\uff0c\u9996\u5148\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u8bbe\u8ba1\u4e86\u6bd4\u8f83\u591a\u9879\u76ee\u7684 virtual STAG/LTAG\uff0c\u7136\u540e\u518d\u8f6c\u6362\u6210\u6bd4\u8f83\u5c11\u9879\u76ee\u7684 physical STAG/LTAG\uff0c\u8fd9\u6837 LSQ \u53ef\u4ee5\u505a\u7684\u6bd4\u8f83\u5c0f\uff0c\u539f\u6587\uff1a</p> <pre><code>A virtual STAG/LTAG scheme is used to minimize dispatch holds due to\nrunning out of physical SRQ/LRQ entries. When a physical entry in the\nLRQ is freed up, a virtual LTAG will be converted to a real LTAG. When a\nphysical entry in the SRQ is freed up, a virtual STAG will be converted\nto a real STAG. Virtual STAG/LTAGs are not issued to the LSU until they\nare subsequently marked as being real in the UniQueue. The ISU can\nassign up to 128 virtual LTAGs and 128 virtual STAGs to each thread.\n</code></pre> <p>\u8fd9\u4e2a\u601d\u8def\u5728 2007 \u5e74\u7684\u8bba\u6587 Late-Binding: Enabling Unordered Load-Store Queues \u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u4e5f\u8bb8 POWER8 \u53c2\u8003\u4e86\u8fd9\u7bc7\u8bba\u6587\u7684\u8bbe\u8ba1\u3002\u53ef\u4ee5\u770b\u5230\uff0cPOWER8 \u6ca1\u6709\u91c7\u7528\u90a3\u4e9b\u514d\u9664 CAM \u7684\u65b9\u6848\uff1a</p> <pre><code>The SRQ is a 40-entry, real address based CAM structure. Similar to the\nSRQ, the LRQ is a 44-entry, real address based, CAM structure. The LRQ\nkeeps track of out-of-order loads, watching for hazards. Hazards\ngenerally exist when a younger load instruction executes out-of-order\nbefore an older load or store instruction to the same address (in part\nor in whole). When such a hazard is detected, the LRQ initiates a flush\nof the younger load instruction and all its subsequent instructions from\nthe thread, without impacting the instructions from other threads. The\nload is then re-fetched from the I-cache and re-executed, ensuring\nproper load/store ordering.\n</code></pre> <p>\u800c\u662f\u5728\u4f20\u7edf\u7684\u4e24\u4e2a CAM \u8bbe\u8ba1\u7684\u57fa\u7840\u4e0a\uff0c\u505a\u4e86\u51cf\u5c11\u7269\u7406 LSQ \u9879\u76ee\u7684\u4f18\u5316\u3002\u6bd4\u8f83\u6709\u610f\u601d\u7684\u662f\uff0cPOWER7 \u548c POWER8 \u7684 L1 Cache \u90fd\u662f 8 \u8def\u7ec4\u76f8\u8fde\uff0c\u5e76\u4e14\u91c7\u7528\u4e86 set-prediction \u7684\u65b9\u5f0f\uff08\u5e94\u8be5\u662f\u901a\u5e38\u8bf4\u7684 way-prediction\uff09\u3002</p> <p>\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e0a\u7684\u5c0f\u7ec6\u8282\uff0c\u5c31\u662f\u5728\u5224\u65ad Load \u548c Store \u6307\u4ee4\u662f\u5426\u6709\u76f8\u5173\u6027\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u5730\u5740\u4f4d\u6570\u6bd4\u8f83\u591a\uff0c\u5b8c\u6574\u6bd4\u8f83\u7684\u5ef6\u8fdf\u6bd4\u8f83\u5927\uff0c\u53ef\u4ee5\u727a\u7272\u7cbe\u5ea6\u7684\u524d\u63d0\u4e0b\uff0c\u9009\u53d6\u5730\u5740\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u6bd4\u8f83\u3002POWER9 \u8bba\u6587 \u63d0\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>POWER8 and prior designs matched the effective address (EA) bits 48:63\nbetween the younger load and the older store queue entry. In POWER9,\nthrough a combination of outright matches for EA bits 32:63 and hashed\nEA matches for bits 0:31, false positive avoidance is greatly improved.\nThis reduces the number of flushes, which are compulsory for false\npositives.\n</code></pre> <p>\u8fd9\u91cc\u53c8\u662f\u4e00\u4e2a\u7cbe\u786e\u5ea6\u548c\u65f6\u5e8f\u4e0a\u7684\u4e00\u4e2a tradeoff\u3002</p> <p>\u5177\u4f53\u5230 Load/Store Queue \u7684\u5927\u5c0f\uff0c\u5176\u5b9e\u90fd\u4e0d\u5927\uff1a</p> <ol> <li>Zen 2 Store Queue 48</li> <li>Intel Skylake Store Buffer 56 Load Buffer 72</li> <li>POWER 8 Store Queue 40 Load Queue 44 (Virtual 128+128)</li> <li>Alpha 21264 Store Queue 32 Load Queue 32</li> </ol>"},{"location":"hardware/ooo_cpu/#vs","title":"\u7cbe\u786e\u5f02\u5e38 vs \u975e\u7cbe\u786e\u5f02\u5e38","text":"<p>\u7cbe\u786e\u5f02\u5e38\u662f\u6307\u53d1\u751f\u5f02\u5e38\u7684\u6307\u4ee4\u4e4b\u524d\u7684\u6307\u4ee4\u90fd\u5b8c\u6210\uff0c\u4e4b\u540e\u7684\u6ca1\u6709\u6267\u884c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5b9e\u73b0\u65b9\u5f0f\u662f\u5b8c\u6210\u5f02\u5e38\u6307\u4ee4\u4e4b\u524d\u7684\u6240\u6709\u6307\u4ee4\uff0c\u5e76\u64a4\u9500\u5f02\u5e38\u6307\u4ee4\u4e4b\u540e\u7684\u6307\u4ee4\u7684\u4f5c\u7528\u3002\u975e\u7cbe\u786e\u5f02\u5e38\u5219\u662f\u4e0d\u4fdd\u8bc1\u8fd9\u4e2a\u6027\u8d28\uff0c\u7f51\u4e0a\u8d44\u6599 \u8bf4\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u786c\u4ef6\u5b9e\u73b0\u66f4\u7b80\u5355\uff0c\u4f46\u662f\u8f6f\u4ef6\u4e0a\u5904\u7406\u6bd4\u8f83\u56f0\u96be\u3002</p> <p>\u4e00\u4e2a\u975e\u7cbe\u786e\u5f02\u5e38\u7684\u4f8b\u5b50\u662f Alpha\uff0c\u5728\u7ae0\u8282 4.7.6.1 \u4e2d\u63d0\u5230\uff0c\u4e00\u4e9b\u6d6e\u70b9\u8ba1\u7b97\u5f02\u5e38\u53ef\u80fd\u662f\u975e\u7cbe\u786e\u7684\uff0c\u5e76\u4e14\u8bf4\u4e86\u4e00\u53e5\uff1a<code>In general, it is not feasible to fix up the result value or to continue from the trap.</code>\u3002\u540c\u65f6\u7ed9\u51fa\u4e86\u4e00\u4e9b\u6761\u4ef6\uff0c\u53ea\u6709\u5f53\u6307\u4ee4\u5e8f\u5217\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u5f02\u5e38\u624d\u662f\u53ef\u4ee5\u6062\u590d\u7684\u3002\u8fd8\u6709\u4e00\u6bb5\u63cf\u8ff0\uff0c\u6458\u5f55\u5728\u8fd9\u91cc\uff1a</p> <pre><code>Alpha lets the software implementor determine the precision of\narithmetic traps.  With the Alpha architecture, arithmetic traps (such\nas overflow and underflow) are imprecise\u2014they can be delivered an\narbitrary number of instructions after the instruction that triggered\nthe trap. Also, traps from many different instructions can be reported\nat once. That makes implementations that use pipelining and multiple\nissue substantially easier to build.  However, if precise arithmetic\nexceptions are desired, trap barrier instructions can be explicitly\ninserted in the program to force traps to be delivered at specific\npoints.\n</code></pre> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5728 Reference Manual \u4e2d\u7b2c 5.4.1 \u7ae0\u8282\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u89e6\u53d1 Arithmetic Trap \u7684\u65f6\u5019\uff0c\u4f1a\u8fdb\u5165 Kernel \u7684 entArith \u51fd\u6570\uff0c\u5e76\u63d0\u4f9b\u53c2\u6570\uff1aa0 \u8868\u793a exception summary\uff0ca1 \u8868\u793a register write mask\u3002exception summary \u53ef\u4ee5\u7528\u6765\u5224\u65ad\u53d1\u751f\u4e86\u4ec0\u4e48\u7c7b\u578b\u7684 exception\uff0c\u6bd4\u5982 integer overflow\uff0cinexact result \u7b49\u7b49\u3002\u4e00\u4e2a\u6bd4\u8f83\u7279\u522b\u7684 exception \u7c7b\u578b\u662f software completion\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u7684\u662f\u89e6\u53d1\u5f02\u5e38\u7684\u6307\u4ee4\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\u4f1a\u5199\u5165\u54ea\u4e9b\u5bc4\u5b58\u5668\uff0864 \u4f4d\uff0c\u4f4e 32 \u4f4d\u5bf9\u5e94\u6574\u6570\u5bc4\u5b58\u5668\uff0c\u9ad8 32 \u4f4d\u5bf9\u5e94\u6d6e\u70b9\u5bc4\u5b58\u5668\uff09\uff0c\u7136\u540e\u4fdd\u5b58\u4e0b\u6765\u7684 PC \u503c\u4e3a\u6700\u540e\u4e00\u6761\u6267\u884c\u7684\u6307\u4ee4\u7684\u4e0b\u4e00\u4e2a\u5730\u5740\uff0c\u4ece\u89e6\u53d1\u5f02\u5e38\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5230\u6700\u540e\u4e00\u6761\u6307\u4ee4\u5c31\u662f trap shadow\uff0c\u8fd9\u90e8\u5206\u6307\u4ee4\u53ef\u80fd\u6267\u884c\u4e86\u4e00\u90e8\u5206\uff0c\u6ca1\u6709\u6267\u884c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u6267\u884c\u7ed3\u679c\u662f\u9519\u8bef\u7684\u3002</p> <p>Linux \u5904\u7406\u4ee3\u7801\u5728 <code>arch/alpha/kernel/traps.c</code> \u7684 <code>do_entArith</code> \u51fd\u6570\u4e2d\u3002\u9996\u5148\u5224\u65ad\uff0c\u5982\u679c\u662f software completion\uff0c\u90a3\u5c31\u8981\u8fdb\u884c\u5904\u7406\uff1b\u5426\u5219\u76f4\u63a5 SIGFPE \u8ba9\u7a0b\u5e8f\u81ea\u5df1\u5904\u7406\u6216\u8005\u9000\u51fa\u3002\u5982\u679c\u662f\u7cbe\u786e\u5f02\u5e38\uff0c\u90a3\u5c31\u5bf9 PC-4 \u8fdb\u884c\u6d6e\u70b9\u6a21\u62df\uff1b\u5982\u679c\u662f\u975e\u7cbe\u786e\u5f02\u5e38\uff0c\u5c31\u4ece trap shadow \u7684\u6700\u540e\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u5f80\u524d\u641c\u7d22\uff0c\u5e76\u540c\u65f6\u8bb0\u5f55\u9047\u5230\u7684\u6307\u4ee4\u5199\u5165\u7684\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u53d1\u73b0\u6307\u4ee4\u7684\u5199\u5165\u7684\u5bc4\u5b58\u5668\u5df2\u7ecf\u8986\u76d6\u4e86 register write mask\uff0c\u5c31\u8bf4\u660e\u627e\u5230\u4e86 trap shadow \u7684\u5f00\u5934\uff0c\u5219\u6a21\u62df\u8fd9\u6761\u6307\u4ee4\uff0c\u7136\u540e\u4ece\u4e0b\u4e00\u6761\u5f00\u59cb\u91cd\u65b0\u6267\u884c\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>long\nalpha_fp_emul_imprecise (struct pt_regs *regs, unsigned long write_mask)\n{\n    unsigned long trigger_pc = regs-&gt;pc - 4;\n    unsigned long insn, opcode, rc, si_code = 0;\n\n    /*\n     * Turn off the bits corresponding to registers that are the\n     * target of instructions that set bits in the exception\n     * summary register.  We have some slack doing this because a\n     * register that is the target of a trapping instruction can\n     * be written at most once in the trap shadow.\n     *\n     * Branches, jumps, TRAPBs, EXCBs and calls to PALcode all\n     * bound the trap shadow, so we need not look any further than\n     * up to the first occurrence of such an instruction.\n     */\n    while (write_mask) {\n        get_user(insn, (__u32 __user *)(trigger_pc));\n        opcode = insn &gt;&gt; 26;\n        rc = insn &amp; 0x1f;\n\n        switch (opcode) {\n              case OPC_PAL:\n              case OPC_JSR:\n              case 0x30 ... 0x3f:   /* branches */\n            goto egress;\n\n              case OPC_MISC:\n            switch (insn &amp; 0xffff) {\n                  case MISC_TRAPB:\n                  case MISC_EXCB:\n                goto egress;\n\n                  default:\n                break;\n            }\n            break;\n\n              case OPC_INTA:\n              case OPC_INTL:\n              case OPC_INTS:\n              case OPC_INTM:\n            write_mask &amp;= ~(1UL &lt;&lt; rc);\n            break;\n\n              case OPC_FLTC:\n              case OPC_FLTV:\n              case OPC_FLTI:\n              case OPC_FLTL:\n            write_mask &amp;= ~(1UL &lt;&lt; (rc + 32));\n            break;\n        }\n        if (!write_mask) {\n            /* Re-execute insns in the trap-shadow.  */\n            regs-&gt;pc = trigger_pc + 4;\n            si_code = alpha_fp_emul(trigger_pc);\n            goto egress;\n        }\n        trigger_pc -= 4;\n    }\n\negress:\n    return si_code;\n}\n</code></pre> <p>ARM \u67b6\u6784\u4e5f\u6709 imprecise asynchronous external abort\uff1a</p> <pre><code>Normally, external aborts are rare. An imprecise asynchronous external\nabort is likely to be fatal to the process that is running. An example\nof an event that might cause an external abort is an uncorrectable\nparity or ECC failure on a Level 2 Memory structure.\n\nBecause imprecise asynchronous external aborts are normally fatal to the\nprocess that caused them, ARM recommends that implementations make\nexternal aborts precise wherever possible.\n</code></pre> <p>\u4e0d\u8fc7\u8fd9\u66f4\u591a\u662f\u56e0\u4e3a\u5185\u5b58\u7684\u65e0\u6cd5\u9884\u77e5\u7684\u9519\u8bef\uff0c\u8fd9\u79cd\u65f6\u5019\u673a\u5668\u76f4\u63a5\u53ef\u4ee5\u62ff\u53bb\u7ef4\u4fee\u4e86\u3002</p> <p>\u6587\u7ae0 \u63d0\u5230\u4e86\u4e24\u4e2a precise/imprecise async/sync\u7684\u4f8b\u5b50\uff1a</p> <ol> <li>\u5916\u90e8\u4e2d\u65ad\u662f\u5f02\u6b65\u7684\uff0c\u540c\u65f6\u4e5f\u662f precise \u7684\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e2a Write-allocate \u7684\u7f13\u5b58\uff0c\u5982\u679c\u7a0b\u5e8f\u5199\u5165\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7269\u7406\u5730\u5740\uff0c\u90a3\u4e48\u5199\u5165\u7f13\u5b58\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u4f46\u5f53\u8fd9\u4e2a cache line \u88ab\u5199\u5165\u5230\u603b\u7ebf\u4e0a\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u89e6\u53d1\u5f02\u5e38\uff0c\u8fd9\u4e2a\u5f02\u5e38\u662f\u5f02\u6b65\u5e76\u4e14\u975e\u7cbe\u786e\u7684\uff0c\u56e0\u4e3a\u4e4b\u524d\u89e6\u53d1\u8fd9\u4e2a\u5f02\u5e38\u7684\u6307\u4ee4\u53ef\u80fd\u5df2\u7ecf\u5b8c\u6210\u5f88\u4e45\u4e86\u3002\u8fd9\u79cd\u65f6\u5019\u8fd9\u4e2a\u8fdb\u7a0b\u4e5f\u5927\u6982\u7387\u6ca1\u6551\u4e86\uff0c\u76f4\u63a5 SIGBUS \u9000\u51fa\u3002</li> </ol>"},{"location":"hardware/ooo_cpu/#_3","title":"\u5904\u7406\u5668\u524d\u7aef","text":"<p>\u518d\u6765\u5206\u6790\u4e00\u4e0b\u4e71\u5e8f\u6267\u884c CPU \u7684\u524d\u7aef\u90e8\u5206\u3002\u4ee5 RISC-V \u4e3a\u4f8b\uff0c\u6307\u4ee4\u957f\u5ea6\u6709 4 \u5b57\u8282\u6216\u8005 2 \u5b57\u8282\u4e24\u79cd\uff0c\u5176\u4e2d 2 \u5b57\u8282\u5c5e\u4e8e\u538b\u7f29\u6307\u4ee4\u96c6\u3002\u5982\u4f55\u6b63\u786e\u5e76\u9ad8\u6548\u5730\u8fdb\u884c\u53d6\u6307\u4ee4\u8bd1\u7801\uff1f</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u5e0c\u671b\u524d\u7aef\u80fd\u591f\u5c3d\u53ef\u80fd\u5feb\u5730\u53d6\u6307\u4ee4\uff0c\u524d\u7aef\u7684\u53d6\u6307\u80fd\u529b\u8981\u548c\u540e\u7aef\u5339\u914d\uff0c\u6bd4\u5982\u5bf9\u4e8e\u4e00\u4e2a\u56db\u53d1\u5c04\u7684 CPU\uff0c\u524d\u7aef\u5bf9\u5e94\u5730\u9700\u8981\u4e00\u4e2a\u5468\u671f\u53d6 <code>4*4=16</code> \u5b57\u8282\u7684\u6307\u4ee4\u3002\u4f46\u662f\uff0c\u8fd9 16 \u5b57\u8282\u53ef\u80fd\u662f 4 \u6761\u975e\u538b\u7f29\u6307\u4ee4\uff0c\u4e5f\u53ef\u80fd\u662f 8 \u6761\u538b\u7f29\u6307\u4ee4\uff0c\u4e5f\u53ef\u80fd\u662f\u6df7\u5408\u7684\u60c5\u51b5\u3002\u6240\u4ee5\uff0c\u8fd9\u91cc\u4f1a\u51fa\u73b0\u4e00\u4e2a\u53ef\u80fd\u51fa\u73b0\u6307\u4ee4\u6761\u6570\u4e0d\u5339\u914d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e2d\u95f4\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a Fetch Buffer\uff0c\u6bd4\u5982 BOOM \u7684\u5b9e\u73b0\u4e2d\uff0cL1 ICache \u6bcf\u5468\u671f\u8bfb\u53d6 16 \u5b57\u8282\uff0c\u7136\u540e\u8fdb\u884c\u9884\u8bd1\u7801\uff0c\u51fa\u6765 8 \u6761\u6307\u4ee4\uff0c\u4fdd\u5b58\u5230 Fetch Buffer \u4e2d\u3002\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a\u9996\u5148\u4ece ICache \u8bfb\u53d6\u7684\u6570\u636e\u662f\u5bf9\u9f50\u7684\uff0c\u4f46\u662f PC \u53ef\u80fd\u4e0d\u662f\uff0c\u6bd4\u5982\u4e2d\u95f4\u7684\u5730\u5740\u3002\u5176\u6b21\uff0c\u53ef\u80fd\u4e00\u4e2a 4 \u5b57\u8282\u7684\u975e\u538b\u7f29\u6307\u4ee4\u8de8\u8d8a\u4e86\u4e24\u6b21 Fetch\uff0c\u6bd4\u5982\u524d 2 \u4e2a\u5b57\u8282\u5728\u524d\u4e00\u4e2a Fetch Bundle\uff0c\u540e 2 \u4e2a\u5b57\u8282\u5728\u540e\u4e00\u4e2a Fetch Bundle\uff1b\u6b64\u5916\uff0c\u6bcf\u4e2a 2 \u5b57\u8282\u7684\u8fb9\u754c\u90fd\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u662f\u538b\u7f29\u6307\u4ee4\u8fd8\u662f\u975e\u538b\u7f29\u6307\u4ee4\u3002\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u60c5\u51b5\u5c31\u662f\uff0c\u4e00\u4e2a 4 \u5b57\u8282\u7684\u6307\u4ee4\u8de8\u8d8a\u4e86\u4e24\u4e2a\u9875\uff0c\u6240\u4ee5\u4e24\u4e2a\u9875\u90fd\u9700\u8981\u67e5\u8be2\u9875\u8868\uff1b\u5982\u679c\u6070\u597d\u5728\u7b2c\u4e8c\u4e2a\u9875\u5904\u53d1\u751f\u4e86\u9875\u7f3a\u5931\uff0c\u6b64\u65f6 epc \u662f\u6307\u4ee4\u7684\u8d77\u59cb\u5730\u5740\uff0c\u4f46 tval \u662f\u7b2c\u4e8c\u4e2a\u9875\u7684\u5730\u5740\uff0c\u8fd9\u6837\u5185\u6838\u624d\u77e5\u9053\u662f\u54ea\u4e2a\u9875\u53d1\u751f\u4e86\u7f3a\u5931\u3002</p> <p>\u5176\u6b21\uff0c\u9700\u8981\u914d\u5408\u5206\u652f\u9884\u6d4b\u3002\u5982\u679c\u9700\u8981\u4fdd\u8bc1\u5206\u652f\u9884\u6d4b\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u5728\u5faa\u73af\u4e2d\u8fbe\u5230\u63a5\u8fd1 100% \u7684\u6027\u80fd\uff0c\u90a3\u4e48\uff0c\u5728 Fetch \u5206\u652f\u7ed3\u5c3e\u7684\u5206\u652f\u6307\u4ee4\u7684\u540c\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u4e0b\u4e00\u6b21 Fetch \u5df2\u7ecf\u5f97\u5230\u4e86\u5206\u652f\u9884\u6d4b\u7684\u76ee\u7684\u5730\u5740\u3002\u8fd9\u4e2a\u5c31\u662f BOOM \u91cc\u9762\u7684 L0 BTB (1-cycle redirect)\u3002\u4f46\u662f\uff0c\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\u7684\u5206\u652f\u9884\u6d4b\uff0c\u5b83\u7684\u9762\u79ef\u80af\u5b9a\u4e0d\u80fd\u5927\uff0c\u5426\u5219\u65f6\u5e8f\u65e0\u6cd5\u6ee1\u8db3\uff0c\u6240\u4ee5 BOOM \u91cc\u9762\u8fd8\u8bbe\u8ba1\u4e86 2-cycle \u548c 3-cycle \u7684\u6bd4\u8f83\u9ad8\u7ea7\u7684\u5206\u652f\u9884\u6d4b\u5668\uff0c\u8fd8\u6709\u9488\u5bf9\u51fd\u6570\u8c03\u7528\u7684 RAS\uff08Return Address Stack\uff09\u3002</p> <p>\u5206\u652f\u9884\u6d4b\u4e5f\u6709\u5f88\u591a\u65b9\u6cd5\u3002\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5b9e\u73b0\u4e00\u4e2a BHT\uff0c\u6bcf\u4e2a\u9879\u662f\u4e00\u4e2a 2 \u4f4d\u7684\u9971\u548c\u8ba1\u6570\u5668\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u65f6\u5019\u589e\u52a0\uff0c\u5c11\u4e8e\u4e00\u534a\u65f6\u51cf\u5c11\u3002\u4f46\u662f\uff0c\u5982\u679c\u9047\u5230\u4e86\u8df3\u8f6c/\u4e0d\u8df3\u8f6c/\u8df3\u8f6c/\u4e0d\u8df3\u8f6c\u8fd9\u79cd\u6765\u56de\u5207\u6362\u7684\u60c5\u51b5\uff0c\u51c6\u786e\u7387\u5c31\u5f88\u4f4e\u3002\u4e00\u4e2a\u590d\u6742\u4e00\u4e9b\u7684\u8bbe\u8ba1\uff0c\u5c31\u662f\u7528 BHR\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5206\u652f\u6307\u4ee4\u6700\u8fd1\u51e0\u6b21\u7684\u5386\u53f2\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u53ef\u80fd\u7684\u5386\u53f2\uff0c\u90fd\u5bf9\u5e94\u4e00\u4e2a 2 \u4f4d\u7684\u9971\u548c\u8ba1\u6570\u5668\u3002\u8fd9\u6837\uff0c\u9047\u5230\u521a\u624d\u6240\u8bf4\u7684\u60c5\u51b5\u5c31\u4f1a\u5f88\u597d\u5730\u9884\u6d4b\u3002\u4f46\u5b9e\u8df5\u4e2d\u4f1a\u9047\u5230\u95ee\u9898\uff1a\u5982\u679c\u5728\u5199\u56de\u4e4b\u524d\uff0c\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21\u9884\u6d4b\uff0c\u56e0\u4e3a\u9884\u6d4b\u662f\u5728\u53d6\u6307\u7684\u65f6\u5019\u505a\u7684\uff0c\u4f46\u662f\u66f4\u65b0 BPU \u662f\u5728\u5199\u56de\u7684\u65f6\u5019\u5b8c\u6210\u7684\uff0c\u8fd9\u65f6\u5019\u9884\u6d4b\u5c31\u662f\u57fa\u4e8e\u65e7\u7684\u72b6\u6001\u8fdb\u884c\u9884\u6d4b\uff0c\u8fd9\u65f6\u5019 BHR \u5c31\u4f1a\u51fa\u73b0\u4e0d\u51c6\u786e\u7684\u95ee\u9898\uff1b\u800c\u4e14\u5199\u56de BPU \u7684\u65f6\u5019\uff0c\u4f1a\u6309\u7167\u539f\u6765\u7684\u72b6\u6001\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd9\u4e2a\u72b6\u6001\u53ef\u80fd\u4e5f\u662f\u9519\u8bef\u7684\uff0c\u5bfc\u81f4\u4e22\u5931\u4e00\u6b21\u66f4\u65b0\uff0c\u8bc6\u522b\u7684\u6a21\u5f0f\u4ece\u8df3\u8f6c/\u4e0d\u8df3\u8f6c/\u8df3\u8f6c/\u4e0d\u8df3\u8f6c\u53d8\u6210\u4e86\u8df3\u8f6c/\u8df3\u8f6c/\u8df3\u8f6c/\u4e0d\u8df3\u8f6c\uff0c\u8fd9\u6837\u53c8\u4f1a\u9884\u6d4b\u9519\u8bef\u3002\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\uff0c\u5728\u53d6\u6307\u9636\u6bb5\uff0cBPU \u9884\u6d4b\u5b8c\u5c31\u7acb\u5373\u6309\u7167\u9884\u6d4b\u7684\u7ed3\u679c\u66f4\u65b0 BHR\uff0c\u4e4b\u540e\u5199\u56de\u9636\u6bb5\u4f1a\u6062\u590d\u5230\u5b9e\u9645\u7684 BHR \u53d6\u503c\u3002\u8bba\u6587 The effect of speculatively updating branch history on branch prediction accuracy, revisited \u548c Speculative Updates of Local and Global Branch History: A Quantitative Analysis \u8ba8\u8bba\u4e86\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u3002</p> <p>\u6bd4\u8f83\u5bb9\u6613\u505a\u9884\u6d4b\u66f4\u65b0\u548c\u6062\u590d\u7684\u662f\u5168\u5c40\u5206\u652f\u5386\u53f2\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a GHR\uff08Global History Register\uff09\uff0c\u4e00\u4e2a\u662f\u76ee\u524d\u53d6\u6307\u4ee4\u6700\u65b0\u7684\uff0c\u4e00\u4e2a\u662f\u63d0\u4ea4\u7684\u6700\u65b0\u7684\u3002\u5728\u9884\u6d4b\u7684\u65f6\u5019\uff0c\u7528 GHR \u53bb\u627e\u5bf9\u5e94\u7684 2-bit \u72b6\u6001\uff0c\u7136\u540e\u628a\u9884\u6d4b\u7ed3\u679c\u66f4\u65b0\u5230 GHR \u4e0a\u3002\u5728\u9884\u6d4b\u5931\u8d25\u7684\u65f6\u5019\uff0c\u628a GHR \u6062\u590d\u4e3a\u63d0\u4ea4\u7684\u72b6\u6001\u3002\u5982\u679c\u8981\u652f\u6301\u4e00\u4e2a Fetch Packet \u4e2d\u6709\u591a\u4e2a\u5206\u652f\uff0c\u53ef\u4ee5\u8ba9 GHR \u5bf9\u5e94\u82e5\u5e72\u4e2a 2-bit \u72b6\u6001\uff0c\u5206\u522b\u5bf9\u5e94\u76f8\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5206\u652f\u7684\u72b6\u6001\uff0c\u5f53\u7136\u8fd9\u6837\u9762\u79ef\u4e5f\u4f1a\u589e\u52a0\u5f88\u591a\u3002</p>"},{"location":"hardware/oscillator/","title":"\u632f\u8361\u5668","text":"<p>\u632f\u8361\u5668\uff08Oscillator\uff09\u5728\u7535\u8def\u4e2d\u7528\u4e8e\u751f\u6210\u65f6\u949f\u4fe1\u53f7\u3002\u632f\u8361\u5668\u6839\u636e\u539f\u7406\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u7684\u7c7b\u578b\uff1a</p> <ol> <li>Harmonic Oscillator\uff1a\u632f\u8361\u5668\u7531\u653e\u5927\u5668\u548c\u6ee4\u6ce2\u5668\u7ec4\u6210\uff0c\u8f93\u51fa\u4e00\u4e2a\u6b63\u5f26\u65f6\u949f\u4fe1\u53f7</li> <li>Relaxation Oscillator\uff1a\u8f93\u51fa\u65b9\u6ce2\u6216\u8005\u952f\u9f7f\u6ce2\u6216\u8005\u4e09\u89d2\u6ce2\u65f6\u949f\u4fe1\u53f7</li> </ol>"},{"location":"hardware/oscillator/#_2","title":"\u6676\u4f53\u632f\u8361\u5668","text":"<p>\u6676\u4f53\u632f\u8361\u5668\uff08Crystal oscillator\uff09\u7b80\u79f0\u6676\u632f\uff0c\u5e38\u89c1\u4e8e PCB\uff0c\u7528\u6765\u7ed9\u82af\u7247\u63d0\u4f9b\u5916\u90e8\u7684\u65f6\u949f\u4fe1\u53f7\u3002\u5b9e\u9645\u4e0a\uff0c\u6676\u632f\u662f\u4e2a\u88ab\u52a8\u5143\u4ef6\uff0c\u4e5f\u5c31\u662f\u5b83\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210\u65f6\u949f\u4fe1\u53f7\uff0c\u8fd8\u9700\u8981\u82af\u7247\u5185\u90e8\u7684\u7535\u8def\u8fdb\u884c\u914d\u5408\u3002</p> <p>\u6bd4\u8f83\u5e38\u89c1\u7684\u4f7f\u7528\u6676\u632f\u4ea7\u751f\u65f6\u949f\u4fe1\u53f7\u7684\u7535\u8def\u662f Pierce oscillator\uff1a</p> <p> </p> Pierce oscillator\uff08\u56fe\u6e90\u7ef4\u57fa\u767e\u79d1\uff09 <p>\u5176\u4e2d $U_1$ \u662f\u53cd\u76f8\u5668\uff08Inverter\uff09\uff0c$X_1$ \u662f\u6676\u632f\u3002\u6709\u65f6\u5019\u7535\u8def\u8fd8\u4f1a\u6dfb\u52a0\u4e0a\u56fe\u4e2d\u6ca1\u6709\u753b\u51fa\u7684\u989d\u5916\u7684\u7535\u963b\u6216\u7535\u5bb9\u3002</p> <p>\u5728\u5d4c\u5165\u5f0f\u8bbe\u8ba1\u4e2d\uff0c\u7ecf\u5e38\u53ef\u4ee5\u770b\u5230\u82af\u7247\u6709 XI \u548c XO \u5f15\u811a\uff0c\u8fde\u63a5\u5230 PCB \u4e0a\u7684\u6676\u632f\u4ee5\u53ca\u4e24\u4e2a\u7535\u5bb9\uff0c\u5b9e\u9645\u4e0a\u5c31\u5bf9\u5e94\u4e86\u4e0a\u56fe\u7684 $X_1$\u3001$C_1$ \u548c $C_2$\uff0c\u800c\u4e0a\u56fe\u4e2d\u7684 $U_1$ \u548c $R_1$ \u653e\u5728\u82af\u7247\u5185\u90e8\u3002\u56e0\u6b64\u5728\u5f88\u591a\u82af\u7247\u7684\u6587\u6863\u4e2d\uff0c\u90fd\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u793a\u610f\u56fe\uff1a</p> <p> </p> \u6676\u632f\u4e0e\u82af\u7247\u7684\u8fde\u63a5\uff08\u56fe\u6e90KSZ9031RNX Datasheet\uff09 <p>\u8fd9\u91cc\u7684\u6676\u632f\uff08$X_1$\uff09\u662f\u65e0\u6e90\u6676\u632f\uff0c\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u54c1\u8d28\u56e0\u6570\uff08Q factor\uff09\u5f88\u9ad8\u7684\u6ee4\u6ce2\u5668\uff0c\u9700\u8981\u501f\u52a9\u82af\u7247\u5185\u7684\u632f\u8361\u7535\u8def\u624d\u53ef\u4ee5\u4ea7\u751f\u65f6\u949f\u4fe1\u53f7\uff0c\u65e0\u6cd5\u72ec\u7acb\u5de5\u4f5c\uff0c\u6240\u4ee5\u79f0\u4f5c\u65e0\u6e90\u6676\u632f\u3002\u5982\u679c\u628a Pierce oscillator \u7535\u8def\u548c\u6676\u632f\u7ec4\u5408\u5728\u4e00\u4e2a\u82af\u7247\u91cc\uff0c\u5c31\u5f97\u5230\u4e86\u6709\u6e90\u6676\u632f\u3002\u5f88\u591a\u82af\u7247\u65e2\u652f\u6301\u65e0\u6e90\u6676\u632f\uff08\u63a5 XI \u548c XO\uff09\uff0c\u53c8\u652f\u6301\u6709\u6e90\u6676\u632f\uff08\u53ea\u63a5 XI\uff0c\u4e0d\u63a5 XO\uff09\u3002</p> <p>Pierce oscillator \u8f93\u51fa\u7684\u662f\u6b63\u5f26\u6ce2\uff0c\u5982\u679c\u60f3\u8981\u53d8\u6210\u65b9\u6ce2\u4f9b\u6570\u5b57\u7535\u8def\u4f7f\u7528\uff0c\u8fd8\u9700\u8981\u518d\u7ecf\u8fc7\u4e00\u4e2a\u53cd\u76f8\u5668\u3002</p> <p>\u5e38\u89c1\u7684\u6676\u632f\u6750\u6599\u6709\u77f3\u82f1\uff08Quartz\uff09\u548c\u9676\u74f7\uff08Ceramics\uff09\uff0c\u4e00\u822c\u77f3\u82f1\u7cbe\u5ea6\u66f4\u9ad8\u3002</p> <p>XTAL \u662f Crystal \u7684\u7f29\u5199\uff0cXO \u662f Crystal Oscillator \u7684\u7f29\u5199\u3002\u7531\u4e8e XO \u6bd4 XTAL \u591a\u4e86\u4e00\u4e2a\u632f\u8361\u5668\uff0c\u6240\u4ee5\u4e00\u822c XTAL \u6307\u7684\u662f\u65e0\u6e90\u6676\u632f\uff0c\u4e5f\u5c31\u662f\u6676\u4f53\u672c\u8eab\uff0cXO \u6307\u7684\u662f\u6709\u6e90\u6676\u632f\u3002</p>"},{"location":"hardware/oscillator/#voltage-controlled-oscillator","title":"Voltage Controlled Oscillator","text":"<p>Voltage Controlled Oscillator \u662f\u538b\u63a7\u632f\u8361\u5668\uff0c\u7f29\u5199 VCO\uff0c\u610f\u601d\u662f\u53ef\u4ee5\u7531\u7535\u538b\u63a7\u5236\u7684\u632f\u8361\u5668\uff0c\u5728\u9501\u76f8\u73af\u4e2d\u53ef\u4ee5\u770b\u5230 VCO \u7684\u8eab\u5f71\u3002</p> <p>\u4ee5 LC \u632f\u8361\u7535\u8def\u4e3a\u4f8b\uff0c\u5176\u632f\u8361\u9891\u7387\u4e0e\u7535\u611f\u548c\u7535\u5bb9\u5927\u5c0f\u6709\u5173\uff0c\u5982\u679c\u53ef\u4ee5\u63a7\u5236\u7535\u5bb9\u5927\u5c0f\uff0c\u5c31\u53ef\u4ee5\u95f4\u63a5\u5730\u63a7\u5236\u632f\u8361\u5668\u7684\u632f\u8361\u9891\u7387\u3002\u800c P-N \u7ed3\u5de5\u4f5c\u5728\u53cd\u5411\u504f\u7f6e\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5176\u7535\u5bb9\u5927\u5c0f\u4e0e\u4e24\u7aef\u7684\u7535\u538b\u76f8\u5173\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 P-N \u7ed3\u548c LC \u632f\u8361\u7535\u8def\u6765\u5b9e\u73b0 VCO\u3002</p>"},{"location":"hardware/pcie/","title":"PCIe","text":""},{"location":"hardware/pcie/#_1","title":"\u5206\u5c42","text":"<p>PCIe \u5b9a\u4e49\u4e86\u4e09\u4e2a\u5c42\uff1aTransaction Layer\uff0cData Link Layer\uff0cPhysical Layer\uff0c\u548c TCP/IP \u56db\u5c42\u6a21\u578b\u5f88\u50cf\u3002PCIe \u4e5f\u662f\u57fa\u4e8e Packet \u4f20\u8f93\u7684\u3002</p> <p> </p> PCIe \u5206\u5c42\uff08\u56fe\u6e90 PCIe 3.0 \u6807\u51c6\uff09"},{"location":"hardware/pcie/#transaction-layer","title":"Transaction Layer","text":"<p>Transaction Layer \u7684\u6838\u5fc3\u662f Transaction Layer Packet(TLP)\u3002TLP \u683c\u5f0f\uff1a</p> <p> </p> PCIe TLP \u683c\u5f0f\uff08\u56fe\u6e90 PCIe 3.0 \u6807\u51c6\uff09 <p>\u5373\u53ef\u9009\u7684\u82e5\u5e72\u4e2a Prefix\uff0c\u4e00\u4e2a Header\uff0c\u53ef\u9009\u7684 Data Payload\uff0c\u53ef\u9009\u7684 Digest\u3002</p> <p>Prefix \u548c Header \u5f00\u5934\u7684\u4e00\u4e2a\u5b57\u8282\u662f <code>Fmt[2:0]</code> \u548c <code>Type[4:0]</code> \u5b57\u6bb5\u3002Fmt \u51b3\u5b9a\u4e86 header \u7684\u957f\u5ea6\uff0c\u6709\u65e0\u6570\u636e\uff0c\u6216\u8005\u8fd9\u662f\u4e00\u4e2a Prefix\u3002</p> <p>\u5b83\u652f\u6301\u51e0\u7c7b Packet\uff1a</p> <ul> <li>Memory: MMIO<ul> <li>Read Request(MRd)/Completion(CplD)</li> <li>Write Request(MWr): \u6ce8\u610f\u53ea\u6709 Request\uff0c\u6ca1\u6709 Completion</li> <li>AtomicOp Request(FetchAdd/Swap/CAS)/Completion(CplD)</li> <li>Locked Memory Read(MRdLk)/Completion(CplDLk): Legacy</li> </ul> </li> <li>IO: Legacy<ul> <li>Read Request(IORd)/Completion(CplD)</li> <li>Write Request(IOWr)/Completion(Cpl)</li> </ul> </li> <li>Configuration: \u8bbf\u95ee\u914d\u7f6e\u7a7a\u95f4<ul> <li>Read Request(CfgRd0/CfgRd1)/Completion(CplD)</li> <li>Write Request(CfgWr0/CfgWr1)/Completion(Cpl)</li> </ul> </li> <li>Message: \u4f20\u8f93 event<ul> <li>Request(Msg/MsgD)</li> </ul> </li> </ul> <p>\u62ec\u53f7\u91cc\u7684\u662f TLP Type\uff0c\u5bf9\u5e94\u4e86\u5b83 Fmt \u548c Type \u5b57\u6bb5\u7684\u53d6\u503c\u3002\u5982\u679c Completion \u5931\u8d25\u4e86\uff0c\u539f\u6765\u5e94\u8be5\u662f CplD/CplDLk \u7684 Completion \u4f1a\u53d8\u6210\u4e0d\u5e26\u6570\u636e\u7684 Cpl/CplLk\u3002</p> <p>\u5728 PCIe 3.0 \u6807\u51c6\u7684\u8868 2-3 \u4e2d\u5217\u51fa\u4e86 TLP Type \u4ee5\u53ca\u5bf9\u5e94\u7684 Fmt \u548c Type \u7f16\u7801\u3002</p> <p>TLP \u8def\u7531\u6709\u4e09\u4e2a\u65b9\u6cd5\uff0c\u51b3\u5b9a\u4e86\u8fd9\u4e2a TLP \u76ee\u7684\u5730\u662f\u54ea\u91cc\uff1a</p> <ul> <li>Address-based: 32 \u4f4d\u6216 64 \u4f4d\u5730\u5740\uff0c\u7528\u4e8e Memory \u548c IO \u8bf7\u6c42</li> <li>ID-based\uff1alspci \u770b\u5230\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f Bus Device Function\uff0c\u7528\u4e8e Configuration \u8bf7\u6c42</li> <li>Implicit\uff1a\u7528\u4e8e Message \u8bf7\u6c42\uff0c\u8def\u7531\u65b9\u6cd5\uff1a<ul> <li>Routed to Root Complex</li> <li>Routed by Address: PCIe 3.0 \u6807\u51c6\u4e2d\u6ca1\u6709\u7528\u8fd9\u4e2a\u8def\u7531\u65b9\u6cd5\u7684 Message</li> <li>Routed by ID</li> <li>Broadcast from Root Complex</li> <li>Local - Terminate at Receiver</li> <li>Gathered and router to Root Complex</li> </ul> </li> </ul>"},{"location":"hardware/pcie/#data-link-layer","title":"Data Link Layer","text":"<p>Data Link Layer \u7684\u4e3b\u8981\u529f\u80fd\u662f\u8fdb\u884c TLP \u7684\u53ef\u9760\u4f20\u8f93\u3002\u5b83\u5728\u4f20\u8f93 TLP \u7684\u65f6\u5019\uff0c\u4f1a\u5728\u5f00\u5934\u52a0\u4e0a\u4e00\u4e2a\u4e24\u5b57\u8282\u7684 Sequence Number\uff0c\u6700\u540e\u52a0\u4e0a\u4e00\u4e2a\u56db\u5b57\u8282\u7684 LCRC\uff08Link CRC\uff09\u3002</p> <p> </p> PCIe TLP Data Link Layer \u683c\u5f0f\uff08\u56fe\u6e90 PCIe 3.0 \u6807\u51c6\uff09 <p>\u9664\u4e86\u4f20\u8f93 TLP\uff0cData Link Layer \u8fd8\u4f1a\u4f20\u8f93 Data Link Layer Packet(DLLP)\uff0c\u7c7b\u578b\u5305\u62ec\uff1a</p> <ul> <li>Ack DLLP: \u544a\u8bc9\u5bf9\u65b9\u81ea\u5df1\u5df2\u7ecf\u6210\u529f\u6536\u5230\u4e86 TLP</li> <li>Nak DLLP\uff1a\u544a\u8bc9\u5bf9\u65b9\u81ea\u5df1\u63a5\u6536 TLP \u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5</li> <li>InitFC1/InitFC2/UpdateFC DLLPs\uff1a\u6d41\u91cf\u63a7\u5236</li> <li>PM_Enter_L1/PM_Enter_L23/PM_Active_State_Request_L1/PM_Request_Ack\uff1a\u7528\u4e8e\u7535\u6e90\u7ba1\u7406</li> </ul> <p>Data Link Layer \u6536\u5230\u4e0a\u5c42\u8981\u53d1\u9001 TLP \u65f6\u5019\uff0c\u9996\u5148\u62fc\u63a5 Sequence Number \u548c LCRC\uff0c\u7136\u540e\u4f1a\u4fdd\u5b58\u5728 retry buffer \u4e2d\uff0c\u901a\u8fc7 Physical Layer \u53d1\u9001\u3002\u4ece Physical Layer \u6536\u5230\u65b0\u7684 TLP/DLLP \u65f6\uff0c\u4f1a\u68c0\u67e5\u5b83\u7684\u5b8c\u6574\u6027\uff08CRC\uff09\uff0c\u5982\u679c\u6b63\u786e\uff0c\u5c31\u5411\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a Ack DLLP\uff0c\u5e76\u628a TLP \u63d0\u4ea4\u7ed9 Transaction Layer\uff1b\u5982\u679c\u4e0d\u6b63\u786e\uff0c\u5c31\u5411\u53d1\u9001\u65b9\u53d1\u9001\u4e00\u4e2a Nak DLLP\u3002\u5982\u679c\u6536\u5230\u4e86 Ack DLLP\uff0c\u5c31\u53ef\u4ee5\u628a\u76f8\u5e94\u7684 TLP \u4ece retry buffer \u4e2d\u5220\u6389\uff1b\u5982\u679c\u6536\u5230\u4e86 Nak DLLP\uff0c\u5219\u8981\u91cd\u4f20\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 TLP \u7684\u53ef\u9760\u4f20\u8f93\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTLP \u548c DLLP \u7684\u533a\u522b\uff1aTLP \u5c31\u50cf IP\uff0c\u76ee\u7684\u5730\u5740\u53ef\u80fd\u4f1a\u8de8\u8d8a\u591a\u8df3\uff1b\u800c DLLP \u662f\u70b9\u5bf9\u70b9\u5730\u5de5\u4f5c\uff0c\u6240\u4ee5\u4e00\u4e2a TLP \u5728\u8f6c\u53d1\u7684\u6bcf\u4e00\u8df3\u4e2d\uff0c\u63a5\u53d7\u65b9\u90fd\u4f1a\u53d1\u9001\u4e00\u6b21 Ack DLLP\u3002</p> <p>Data Link Layer \u7684\u6d41\u91cf\u662f Credit-based \u7684\uff1a\u63a5\u53d7\u65b9\u4f1a\u544a\u8bc9\u53d1\u9001\u65b9\u81ea\u5df1\u7684 Buffer \u8fd8\u6709\u591a\u5c11\u7a7a\u95f4\uff08Credit\uff09\uff0c\u7136\u540e\u53d1\u9001\u65b9\u6839\u636e Credit \u6765\u63a7\u5236\u662f\u5426\u7ee7\u7eed\u53d1\u9001 TLP\u3002</p>"},{"location":"hardware/pcie/#_2","title":"\u914d\u7f6e","text":"<p>\u63a5\u89e6 PCIe \u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u7591\u60d1\uff0c\u5c31\u662f\u8fd9\u4e9b Bus Device Function \u90fd\u662f\u600e\u4e48\u5206\u914d\u7684\uff0c\u5206\u914d\u5b8c\u4e4b\u540e\uff0c\u8bbf\u95ee\u8bf7\u6c42\u53c8\u662f\u600e\u4e48\u8def\u7531\u7684\u3002</p>"},{"location":"hardware/pcie/#_3","title":"\u8def\u7531","text":"<p>\u9996\u5148\u56de\u987e\u4e00\u4e0b\uff0c\u4e0a\u9762\u63d0\u5230\u4e86 TLP \u7684 Memory \u548c IO \u662f\u6839\u636e\u5730\u5740\u8def\u7531\uff0cConfiguration \u662f\u6839\u636e Bus Device Function \u8def\u7531\uff0c\u800c PCIe \u5927\u6982\u662f\u4e00\u4e2a\u6811\u5f62\u7684\u7ed3\u6784\uff0c\u53f6\u5b50\u7ed3\u70b9\u5c31\u662f PCIe \u8bbe\u5907\uff0c\u975e\u53f6\u5b50\u7ed3\u70b9\u662f\u6865\u6216\u8005\u4ea4\u6362\u673a\u3002\u56de\u60f3\u4e00\u4e0b\uff0cIP \u7684\u8def\u7531\u662f\u6309\u7167\u6700\u957f\u524d\u7f00\u5339\u914d\uff0c\u5982\u679c\u5728 PCIe \u4e2d\u8fd8\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u53c8\u592a\u8fc7\u4e8e\u590d\u6742\u4e86\uff0c\u6bd5\u7adf PCIe \u53ef\u4ee5\u4eba\u4e3a\u5730\u8bbe\u5b9a\u6bcf\u4e2a\u8bbe\u5907\u7684\u5730\u5740\uff0c\u8ba9\u5730\u5740\u6ee1\u8db3\u4e00\u5b9a\u7684\u8fde\u7eed\u6027\u548c\u5c40\u90e8\u6027\uff0c\u8fd9\u6837\u8def\u7531\u9009\u62e9\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002</p> <p>\u89c2\u5bdf PCIe \u6807\u51c6\u4e2d 7.3.3 Configuration Request Routing Rules\uff0c\u7ed3\u5408 MindShare \u7684\u4e66\uff0c\u770b Root Ports\uff0cSwitches \u548c Bridges \u7684\u8981\u6c42\uff0c\u5c31\u77e5\u9053 Configuration \u8bf7\u6c42\u662f\u5982\u4f55\u8def\u7531\u7684\uff1a</p> <ul> <li>Configuration \u8bf7\u6c42\u53ea\u80fd\u7531 Host Bridge \u53d1\u8d77</li> <li>\u5982\u679c Configuration \u8bf7\u6c42\u662f Type0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bf7\u6c42\u7684\u76ee\u7684\u8bbe\u5907\u5c31\u662f\u5f53\u524d\u8bbe\u5907</li> <li>\u5982\u679c Configuration \u8bf7\u6c42\u662f Type1\uff0c<ul> <li>\u5982\u679c\u8bf7\u6c42\u7684 Bus Number \u7b49\u4e8e\u67d0\u4e00\u4e2a Downstream Port \u7684 Secondary Bus Number\uff0c\u5219\u628a Configuration \u8bf7\u6c42\u8f6c\u6362\u4e3a Type0\uff0c\u7136\u540e\u53d1\u7ed9\u8be5 Downstream Port</li> <li>\u5982\u679c\u4e0d\u7b49\u4e8e\uff0c\u4f46\u662f Bus Number \u5c5e\u4e8e\u67d0\u4e00\u4e2a Downstream Port \u7684 Secondary Bus Number \u548c Subordinate Bus Number \u4e4b\u95f4\uff0c\u5219\u4e0d\u4fee\u6539 Configuration \u8bf7\u6c42\uff0c\u53d1\u9001\u7ed9\u8be5 Downstream Port\u3002</li> </ul> </li> </ul> <p>\u5982\u679c\u7c7b\u6bd4\u4e00\u4e0b IP\uff0c\u90a3\u4e48\u5206\u7ec4\u5728\u4e2d\u9014\u8def\u7531\u5668\u8f6c\u53d1\u7684\u65f6\u5019\u5c31\u662f Type1\uff0cType0 \u5c31\u662f\u6700\u540e\u4e00\u8df3\u3002\u8def\u7531\u5c31\u662f\u76f4\u63a5\u6309\u7167\u51e0\u4e2a\u4e0d\u91cd\u5408\u7684 Bus Number \u533a\u95f4\u8fdb\u884c\u5224\u65ad\uff0c\u6ca1\u6709\u590d\u6742\u7684\u6700\u957f\u524d\u7f00\u5339\u914d\u3002\u4f46\u662f\u53c8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6309\u7167 Bus \u8def\u7531\uff0c\u90a3\u540c\u4e00\u4e2a Bus \u4e0b\u4e0d\u540c\u7684 Device \u548b\u529e\uff1f\u8fd9\u5c31\u50cf\u662f\u4ee5\u592a\u7f51\uff0c\u6700\u540e\u4e00\u8df3\u7684\u65f6\u5019\uff0c\u5982\u679c\u540c\u4e00\u4e2a\u94fe\u8def\u4e0a\u6709\u591a\u4e2a\u8bbe\u5907\uff0c\u90a3\u4e48\u591a\u4e2a\u8bbe\u5907\u90fd\u80fd\u6536\u5230\uff0c\u6bcf\u4e2a\u8bbe\u5907\u6839\u636e\u81ea\u5df1\u7684 Device \u53f7\u5224\u65ad\u662f\u5426\u662f\u53d1\u7ed9\u81ea\u5df1\u7684\u3002PCI\uff08\u6ce8\u610f\u4e0d\u662f PCIe\uff09\u603b\u7ebf\u4e5f\u7c7b\u4f3c\u3002\u968f\u7740\u901f\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u901a\u8fc7\u4ea4\u6362\u673a\uff0c\u4ee5\u592a\u7f51\u5df2\u7ecf\u53d8\u6210\u4e86\u70b9\u5bf9\u70b9\uff0c\u6240\u4ee5\u5f88\u5c11\u89c1\u5230\u4e00\u4e2a\u94fe\u8def\u4e0a\u540c\u65f6\u6709\u591a\u4e2a\u8bbe\u5907\u7684\u60c5\u51b5\u4e86\u3002PCIe \u4e5f\u4e00\u6837\uff0c\u6240\u4ee5\u6839\u636e Bus \u8def\u7531\u5c31\u8db3\u591f\u4e86\u3002\u81f3\u4e8e lspci \u770b\u5230\u7684\u90a3\u4e9b Device \u4e0d\u7b49\u4e8e 0 \u7684\u8bbe\u5907\uff0c\u8981\u4e48\u662f\u517c\u5bb9 PCI \u8bbe\u5907\u7684\uff0c\u8981\u4e48\u662f\u865a\u62df\u7684\uff0c\u5728\u8bbe\u5907\u5185\u90e8\u8fdb\u884c\u8def\u7531\u7684\uff0c\u5e76\u4e0d\u662f\u771f\u7684\u6709\u4e00\u4e2a PCIe link \u8fde\u4e86\u591a\u4e2a\u7269\u7406\u8bbe\u5907\u3002</p> <p>\u6240\u4ee5\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff0cPCI \u603b\u7ebf\u786e\u5b9e\u662f\u4e00\u6761\u603b\u7ebf\uff0c\u4e00\u6761\u603b\u7ebf\u4e0a\u5f88\u591a\u8bbe\u5907\u3002\u800c PCIe \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7f51\u7edc\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u5f88\u591a\u4e2a PCI \u603b\u7ebf\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u628a Root Complex \u6216\u8005 Switch \u5185\u90e8\u770b\u6210\u4e00\u4e2a\u865a\u62df\u7684\u6709\u5f88\u591a\u8bbe\u5907\u7684 PCI \u603b\u7ebf\uff0c\u800c PCIe Link \u53ef\u4ee5\u770b\u6210\u662f\u53ea\u6709\u4e00\u4e2a\u8bbe\u5907\u7684 PCI \u603b\u7ebf\u3002\u8fd9\u6837 PCIe \u4ea4\u6362\u673a\u53ef\u4ee5\u770b\u6210\u82e5\u5e72\u4e2a PCI-PCI Bridge\uff1a</p> <p> </p> PCIe \u4ea4\u6362\u673a\u548c Root Complex \u5185\u90e8\u56fe\u89e3\uff08\u56fe\u6e90 PCIe 3.0 \u6807\u51c6\uff09 <p>\u8fd8\u6709 MindShare \u4e66\u4e2d\u7684\u56fe 3-5:</p> <p> </p> PCIe \u5b8c\u6574\u62d3\u6251\uff08\u56fe\u6e90 MineShare PCIe 3.0 \u4e66\uff09 <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u7684\u6bcf\u4e00\u4e2a Bus \u5c31\u662f\u4e00\u4e2a PCI \u603b\u7ebf\uff0c\u65e2\u6709\u5185\u90e8\u7684\u865a\u62df PCI \u603b\u7ebf\uff08Bus 0/2/6\uff09\uff0c\u4e5f\u6709 PCIe Link \u5145\u5f53\u7684 PCI \u603b\u7ebf\uff08Bus 1/3/4/5/7/8/9\uff09\u3002\u5728\u865a\u62df\u7684 PCI \u603b\u7ebf\u91cc\uff0c\u6bd4\u5982 PCIe Switch\uff0c\u4e00\u4e2a Device \u5bf9\u5e94\u4e00\u4e2a Downstream Port\uff1b\u800c PCIe Link \u5bf9\u5e94\u7684 PCI \u603b\u7ebf\u4e0a\u5c31\u53ea\u6709\u4e00\u4e2a Device\u3002\u7136\u540e PCIe Switch \u7684\u6bcf\u4e2a Upstream Port \u548c Downstream Port \u91cc\u4f1a\u8bb0\u5f55\u4e09\u4e2a Bus Number\uff1aPrimary(Pri)\uff0cSecondary(Sec) \u548c Subordinate(Sub)\u3002Primary \u6307\u7684\u5c31\u662f\u5b83\u4e0a\u6e38\u76f4\u63a5\u8fde\u63a5\u7684 PCI \u603b\u7ebf\u7f16\u53f7\uff0cSec \u6307\u7684\u662f\u4e0b\u6e38\u76f4\u63a5\u8fde\u63a5\u7684 PCI \u603b\u7ebf\u7f16\u53f7\uff0cSub \u6307\u7684\u662f\u5b83\u4e0b\u6e38\u7684\u6700\u5927 PCI \u603b\u7ebf\u7f16\u53f7\u3002</p> <p>\u8fd9\u6837\uff0c\u6536\u5230 Type1 \u7684\u65f6\u5019\uff0cSwitch \u6309\u7167\u5404\u4e2a Downstream Port \u7684 Sec \u548c Sub \u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u76ee\u6807 Bus Number \u7b49\u4e8e Sec\uff0c\u5c31\u8f6c\u6362\u4e3a Type0 \u53d1\u51fa\u53bb\uff1b\u5982\u679c\u5927\u4e8e Sec\uff0c\u4f46\u662f\u5c0f\u4e8e\u6216\u7b49\u4e8e Sub\uff0c\u5c31\u539f\u6837\u53d1\u51fa\u53bb\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4ece Host Bridge \u5230\u6bcf\u4e2a\u8bbe\u5907\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u4e00\u8def\u8f6c\u53d1\u3002</p> <p>\u65e2\u7136 BDF \u662f\u628a Bus \u5212\u5206\u4e3a\u591a\u4e2a\u533a\u95f4\u6765\u8def\u7531\u7684\uff0c\u90a3\u4e48 Memory \u548c IO \u8bf7\u6c42\u4e5f\u7c7b\u4f3c\u5730\u53ef\u4ee5\u5bf9\u5730\u5740\u8fdb\u884c\u5212\u5206\uff0c\u53d8\u6210\u591a\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8fdb\u884c\u8def\u7531\u3002</p> <p>\u8fd9\u4e9b\u7528\u4e8e\u8def\u7531\u7684\u533a\u95f4\u4e0a\u4e0b\u754c\uff0c\u53ef\u4ee5\u5728\u5404\u4e2a\u7aef\u53e3\u7684 Type1 Configuration Space \u4e2d\u627e\u5230\uff1a</p> <p> </p> PCIe Type1 Configuration Space\uff08\u56fe\u6e90 PCIe 3.0 \u6807\u51c6\uff09 <ul> <li>\u8def\u7531 Type1 Configuration Request\uff1aPrimary Bus Number, Secondary Bus Number, Subordinate Bus Number<ul> <li><code>Request Bus Number == Secondary Bus Number</code>: Type1 -&gt; Type0</li> <li><code>Secondary Bus Number &lt; Request Bus Number &lt;= Subordinate Bus Number</code>: Type1 -&gt; Type1</li> </ul> </li> <li>\u8def\u7531 IO Request\uff1a<code>I/O Base &lt;= IO Address &lt;= I/O Limit</code></li> <li>\u8def\u7531 Prefetchable Memory Request\uff1a<code>Prefetchable Memory Base &lt;= Memory Address &lt;= Prefetchable Memory Limit</code></li> <li>\u8def\u7531 Non-Prefetchable Memory Request\uff1a<code>Memory Base &lt;= Memory Address &lt;= Memory Limit</code></li> </ul> <p>\u800c\u5177\u4f53\u5230\u6bcf\u4e00\u4e2a\u8bbe\u5907\u4e0a\uff0c\u8bbe\u5907\u4f1a\u63d0\u4f9b\u82e5\u5e72\u4e2a BAR\uff08Base Address Register\uff09\uff0c\u5728\u679a\u4e3e\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u4f1a\u7ed9 BAR \u5206\u914d\u5730\u5740\uff0c\u7136\u540e\u628a\u8bbe\u5907\u7684\u5730\u5740\u8fdb\u884c\u5408\u5e76\uff0c\u8bb0\u5f55\u5230 Switch \u4e0a\u7684 Base \u548c Limit\uff0c\u7136\u540e\u4e00\u76f4\u9012\u5f52\uff0c\u4e00\u8def\u66f4\u65b0\u5230 Root Complex\u3002\u8fd9\u6837\uff0c\u5c31\u5b8c\u6210\u4e86\u5730\u5740\u5206\u914d\uff0c\u4ee5\u53ca\u8bf7\u6c42\u7684\u8def\u7531\u3002</p>"},{"location":"hardware/pcie/#_4","title":"\u5206\u914d","text":"<p>\u65e2\u7136\u77e5\u9053\u4e86 BDF \u662f\u5982\u4f55\u8def\u7531\u7684\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\uff0c\u600e\u4e48\u679a\u4e3e\u8bbe\u5907\u548c\u4ea4\u6362\u673a\uff0c\u5206\u914d Bus Number\u3002\u8fd9\u4e2a\u4e8b\u60c5\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u505a\uff08\u4f8b\u5982 UEFI\uff09\uff0cLinux \u4e2d\u4e5f\u6709\u76f8\u5173\u7684\u4ee3\u7801\u3002\u4e0b\u9762\u5c31\u6765\u5bf9\u7740 edk2 \u7684\u6e90\u4ee3\u7801\u6765\u770b\u770b\u5b83\u662f\u600e\u4e48\u505a\u7684\u3002</p> <p>\u5728 edk2 \u4e2d\uff0c\u5206\u914d Bus Number \u7684\u6838\u5fc3\u4ee3\u7801\u662f <code>PciScanBus</code> \u51fd\u6570\uff1a</p> <pre><code>/**\n  Scan pci bus and assign bus number to the given PCI bus system.\n\n  @param  Bridge           Bridge device instance.\n  @param  StartBusNumber   start point.\n  @param  SubBusNumber     Point to sub bus number.\n  @param  PaddedBusRange   Customized bus number.\n\n  @retval EFI_SUCCESS      Successfully scanned and assigned bus number.\n  @retval other            Some error occurred when scanning pci bus.\n\n  @note   Feature flag PcdPciBusHotplugDeviceSupport determine whether need support hotplug.\n\n**/\nEFI_STATUS\nPciScanBus (\n  IN PCI_IO_DEVICE  *Bridge,\n  IN UINT8          StartBusNumber,\n  OUT UINT8         *SubBusNumber,\n  OUT UINT8         *PaddedBusRange\n  );\n</code></pre> <p>\u8f93\u5165\u4e00\u4e2a\u6865\u8bbe\u5907\u548c\u521d\u59cb\u7684 Bus Number\uff0c\u8f93\u51fa Subordinate Bus Number\uff0c\u4e5f\u5c31\u662f\u5206\u914d\u7684\u6700\u5927\u7684 Bus Number\uff0c\u4ee5\u53ca Padded Bus Range\uff0c\u4f8b\u5982\u5982\u679c\u8981\u8003\u8651\u70ed\u63d2\u62d4\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u9884\u7559\u4e00\u4e9b Bus Number\u3002\u5b83\u5728 <code>PciRootBridgeEnumerator</code> \u51fd\u6570\u4e2d\u88ab\u8c03\u7528\uff0c\u4f20\u5165\u7684\u662f RootBridgeDev\u3002\u4f60\u53ef\u80fd\u4e5f\u731c\u5230\u4e86\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u9012\u5f52\u8c03\u7528\uff0c\u4ece Root Bridge \u5f00\u59cb\u5f80\u4e0b\uff0c\u9047\u5230\u65b0\u7684\u6865\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u5c31\u7ee7\u7eed\u9012\u5f52\uff0c\u7136\u540e\u6839\u636e\u4e0b\u4e00\u5c42\u5206\u914d\u7684 Bus Number \u6765\u8ba1\u7b97\u4e0a\u4e00\u5c42\u7684 Subordinate Bus Number\u3002</p> <p><code>PciScanBus</code> \u9996\u5148\u679a\u4e3e\u5f53\u524d\u6865\u8bbe\u5907\u4e0b\u7684\u6240\u6709 Device \u548c Function\uff0c\u56e0\u4e3a\u5f53\u524d\u7684\u6865\u8bbe\u5907\u5df2\u7ecf\u88ab\u5206\u914d\u4e86 Bus Number\uff0c\u6240\u4ee5\u662f\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4e0b\u9762\u7684 Device \u548c Function \u7684\u3002</p> <pre><code>for (Device = 0; Device &lt;= PCI_MAX_DEVICE; Device++) {\n  TempReservedBusNum = 0;\n  for (Func = 0; Func &lt;= PCI_MAX_FUNC; Func++) {\n    //\n    // Check to see whether a pci device is present\n    //\n    Status =\n        PciDevicePresent(PciRootBridgeIo, &amp;Pci, StartBusNumber, Device, Func);\n\n    if (EFI_ERROR(Status) &amp;&amp; (Func == 0)) {\n      //\n      // go to next device if there is no Function 0\n      //\n      break;\n    }\n\n    if (EFI_ERROR(Status)) {\n      continue;\n    }\n\n    //\n    // Get the PCI device information\n    //\n    Status =\n        PciSearchDevice(Bridge, &amp;Pci, StartBusNumber, Device, Func, &amp;PciDevice);\n\n    if (EFI_ERROR(Status)) {\n      continue;\n    }\n\n    PciAddress = EFI_PCI_ADDRESS(StartBusNumber, Device, Func, 0);\n\n    if (IS_PCI_BRIDGE(&amp;Pci) || IS_CARDBUS_BRIDGE(&amp;Pci)) {\n      //\n      // For PPB\n      //\n\n      Status = PciAllocateBusNumber(Bridge, *SubBusNumber, 1, SubBusNumber);\n      if (EFI_ERROR(Status)) {\n        return Status;\n      }\n\n      SecondBus = *SubBusNumber;\n\n      Register = (UINT16)((SecondBus &lt;&lt; 8) | (UINT16)StartBusNumber);\n      Address = EFI_PCI_ADDRESS(StartBusNumber, Device, Func,\n                                PCI_BRIDGE_PRIMARY_BUS_REGISTER_OFFSET);\n\n      Status = PciRootBridgeIo-&gt;Pci.Write(PciRootBridgeIo, EfiPciWidthUint16,\n                                          Address, 1, &amp;Register);\n\n      //\n      // If it is PPB, recursively search down this bridge\n      //\n      if (IS_PCI_BRIDGE(&amp;Pci)) {\n        //\n        // Temporarily initialize SubBusNumber to maximum bus number to ensure\n        // the PCI configuration transaction to go through any PPB\n        //\n        Register = PciGetMaxBusNumber(Bridge);\n        Address = EFI_PCI_ADDRESS(StartBusNumber, Device, Func,\n                                  PCI_BRIDGE_SUBORDINATE_BUS_REGISTER_OFFSET);\n        Status = PciRootBridgeIo-&gt;Pci.Write(PciRootBridgeIo, EfiPciWidthUint8,\n                                            Address, 1, &amp;Register);\n\n        Status = PciScanBus(PciDevice, SecondBus, SubBusNumber, PaddedBusRange);\n        if (EFI_ERROR(Status)) {\n          return Status;\n        }\n      }\n\n      //\n      // Set the current maximum bus number under the PPB\n      //\n      Address = EFI_PCI_ADDRESS(StartBusNumber, Device, Func,\n                                PCI_BRIDGE_SUBORDINATE_BUS_REGISTER_OFFSET);\n\n      Status = PciRootBridgeIo-&gt;Pci.Write(PciRootBridgeIo, EfiPciWidthUint8,\n                                          Address, 1, SubBusNumber);\n    } else {\n      //\n      // It is device. Check PCI IOV for Bus reservation\n      // Go through each function, just reserve the MAX ReservedBusNum for one\n      // device\n      //\n\n      // OMITTED\n    }\n\n    if ((Func == 0) &amp;&amp; !IS_PCI_MULTI_FUNC(&amp;Pci)) {\n      //\n      // Skip sub functions, this is not a multi function device\n      //\n\n      Func = PCI_MAX_FUNC;\n    }\n  }\n}\n</code></pre> <p>\u4ece\u4ee3\u7801\u4e2d\u53bb\u6389\u4e86\u4e00\u4e9b\u70ed\u63d2\u62d4\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u7684\u601d\u8def\u5982\u4e0b\uff1a</p> <ol> <li>\u679a\u4e3e\u5f53\u524d\u8bbe\u5907\u4e0b\u7684 Device \u548c Function</li> <li>\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a\u6865\u8bbe\u5907\uff0c\u4e3a\u5b83\u5206\u914d\u4e00\u4e2a\u65b0\u7684 Bus Number<ol> <li>\u8bbe\u7f6e\u8fd9\u4e2a\u65b0\u7684\u6865\u8bbe\u5907\u7684 Primary Bus Number \u4e3a Start Bus Number\uff08\u4e5f\u5c31\u662f\u4e0a\u4e00\u7ea7\u7684 Secondary Bus Number\uff09\uff0cSecondary Bus \u662f\u65b0\u5206\u914d\u7684 Bus Number\uff0cSubordinate Bus Number \u662f\u6700\u5927\u503c</li> <li>\u8fd9\u6837\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u76f8\u5f53\u4e8e\u6240\u6709\u7684\u5728 <code>[Secondary Bus Number, Max Bus Number]</code> \u8303\u56f4\u4e2d\u7684 Bus \u8bf7\u6c42\u90fd\u4f1a\u8def\u7531\u5230\u65b0\u7684\u6865\u8bbe\u5907\u4e0a</li> <li>\u9012\u5f52\u8c03\u7528 PciScanBus\uff0c\u53c2\u6570\u662f\u65b0\u7684\u6865\u8bbe\u5907\uff0cStart Bus Number \u4e3a\u65b0\u7684 Secondary Bus Number</li> <li>\u9012\u5f52\u8c03\u7528\u8fd4\u56de\u4ee5\u540e\uff0c\u65b0\u7684\u6865\u8bbe\u5907\u4e0b\u9762\u6240\u6709\u7684\u8bbe\u5907\u90fd\u5206\u914d\u5230\u4e86\u81ea\u5df1\u7684 Bus Number\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u77e5\u9053\u51c6\u786e\u7684 Subordinate Bus Number \u4e86\uff0c\u4e0d\u518d\u662f\u521a\u624d\u4e34\u65f6\u8bbe\u7f6e\u7684 Max Bus Number\uff0c\u56e0\u6b64\u8fd9\u65f6\u5019\u518d\u628a\u51c6\u786e\u7684 Subordinate Bus Number \u5199\u5165\u6865\u8bbe\u5907\u7684 Subordinate Bus Number \u4e2d</li> </ol> </li> <li>\u679a\u4e3e\u5b8c\u6240\u6709\u8bbe\u5907\u4ee5\u540e\uff0c\u8fd4\u56de\u76ee\u524d\u9012\u5f52\u5206\u914d\u5f97\u5230\u7684\u6700\u5927\u7684 Bus Number</li> </ol> <p>\u8fd9\u6837\u6574\u7406\u51fa\u6765\u4e00\u770b\uff0c\u5176\u5b9e\u5f88\u6e05\u695a\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a DFS \u7b97\u6cd5\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5f53\u524d\u7684\u7ed3\u70b9\u53ef\u8fbe\uff0c\u4fdd\u8bc1\u4ece Root Bridge \u5230\u5f53\u524d\u7684\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684 Bus Number \u8303\u56f4\u90fd\u662f <code>[Secondary Bus Number, Max Bus Number]</code>\uff1b\u5f53\u7ed3\u70b9\u641c\u7d22\u5b8c\u4ee5\u540e\uff0c\u518d\u56de\u6eaf\uff0c\u56de\u6eaf\u7684\u65f6\u5019\u5c31\u77e5\u9053\u4e86\u5b9e\u9645\u5206\u914d\u5230\u591a\u5927\u7684 Bus Number\uff0c\u8fd9\u65f6\u5019\u518d\u586b\u56de Subordinate Bus Number\uff0c\u6700\u540e\u4fdd\u8bc1\u8fd9\u4e2a\u6811\u4e0a\u6bcf\u4e00\u5c42\u7684 <code>[Secondary Bus Number, Subordinate Bus Number]</code> \u533a\u95f4\u4e0d\u91cd\u5408\uff0c\u4e14\u6bcf\u4e2a\u5b50\u7ed3\u70b9\u7684\u533a\u95f4\u90fd\u5305\u542b\u4e8e\u7236\u7ed3\u70b9\u7684\u533a\u95f4\u3002</p> <p>\u6700\u540e\u7684\u7ed3\u679c\uff0c\u7c7b\u4f3c MindShare \u4e66\u4e2d\u7684\u8fd9\u4e2a\u56fe\uff1a</p> <p> </p> PCIe \u679a\u4e3e\u7ed3\u679c\uff08\u56fe\u6e90 MineShare PCIe 3.0 \u4e66\uff09 <p>\u4e3a\u4e86\u652f\u6301 PCIe \u70ed\u63d2\u62d4\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u52a8\u6001\u4ea7\u751f\u65b0\u8bbe\u5907\u7684 SR-IOV\uff0c\u4ee3\u7801\u4e2d\u505a\u4e86\u76f8\u5e94\u7684\u9884\u7559\uff1a</p> <pre><code>if (FeaturePcdGet(PcdPciBusHotplugDeviceSupport)) {\n  //\n  // If Hot Plug is supported,\n  // Get the bridge information\n  //\n  BusPadding = FALSE;\n  if (gPciHotPlugInit != NULL) {\n    if (IsPciHotPlugBus(PciDevice)) {\n      //\n      // If it is initialized, get the padded bus range\n      //\n      Status = gPciHotPlugInit-&gt;GetResourcePadding(\n          gPciHotPlugInit, PciDevice-&gt;DevicePath, PciAddress, &amp;State,\n          (VOID **)&amp;Descriptors, &amp;Attributes);\n\n      if (EFI_ERROR(Status)) {\n        return Status;\n      }\n\n      BusRange = 0;\n      NextDescriptors = Descriptors;\n      Status = PciGetBusRange(&amp;NextDescriptors, NULL, NULL, &amp;BusRange);\n\n      FreePool(Descriptors);\n\n      if (!EFI_ERROR(Status)) {\n        BusPadding = TRUE;\n      } else if (Status != EFI_NOT_FOUND) {\n        //\n        // EFI_NOT_FOUND is not a real error. It indicates no bus number padding\n        // requested.\n        //\n        return Status;\n      }\n    }\n  }\n}\n\nif (FeaturePcdGet(PcdPciBusHotplugDeviceSupport) &amp;&amp; BusPadding) {\n  //\n  // Ensure the device is enabled and initialized\n  //\n  if ((Attributes == EfiPaddingPciRootBridge) &amp;&amp;\n      ((State &amp; EFI_HPC_STATE_ENABLED) != 0) &amp;&amp;\n      ((State &amp; EFI_HPC_STATE_INITIALIZED) != 0)) {\n    *PaddedBusRange = (UINT8)((UINT8)(BusRange) + *PaddedBusRange);\n  } else {\n    //\n    // Reserve the larger one between the actual occupied bus number and padded\n    // bus number\n    //\n    Status = PciAllocateBusNumber(PciDevice, SecondBus, (UINT8)(BusRange),\n                                  &amp;PaddedSubBus);\n    if (EFI_ERROR(Status)) {\n      return Status;\n    }\n\n    *SubBusNumber = MAX(PaddedSubBus, *SubBusNumber);\n  }\n}\n</code></pre> <p>SR-IOV:</p> <pre><code>//\n// It is device. Check PCI IOV for Bus reservation\n// Go through each function, just reserve the MAX ReservedBusNum for one device\n//\nif (PcdGetBool(PcdSrIovSupport) &amp;&amp; (PciDevice-&gt;SrIovCapabilityOffset != 0)) {\n  if (TempReservedBusNum &lt; PciDevice-&gt;ReservedBusNum) {\n    Status = PciAllocateBusNumber(\n        PciDevice, *SubBusNumber,\n        (UINT8)(PciDevice-&gt;ReservedBusNum - TempReservedBusNum), SubBusNumber);\n    if (EFI_ERROR(Status)) {\n      return Status;\n    }\n\n    TempReservedBusNum = PciDevice-&gt;ReservedBusNum;\n\n    if (Func == 0) {\n      DEBUG((DEBUG_INFO, \"PCI-IOV ScanBus - SubBusNumber - 0x%x\\n\",\n             *SubBusNumber));\n    } else {\n      DEBUG((DEBUG_INFO, \"PCI-IOV ScanBus - SubBusNumber - 0x%x (Update)\\n\",\n             *SubBusNumber));\n    }\n  }\n}\n</code></pre> <p>\u5206\u914d\u597d Bus \u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5bf9\u6240\u6709\u8bbe\u5907\u8fdb\u884c Configuration Request \u4e86\uff0c\u540e\u7eed\u7684 Memory \u548c IO \u5730\u5740\u7684\u5206\u914d\u548c\u8def\u7531\uff0c\u4e5f\u662f\u7c7b\u4f3c\u5730\u9012\u5f52\u5730\u8fdb\u884c\u5206\u914d\uff0c\u7136\u540e\u56de\u6eaf\u7684\u65f6\u5019\u5408\u5e76\u5730\u5740\u533a\u95f4\u5373\u53ef\u3002</p>"},{"location":"hardware/pcie/#_5","title":"\u7269\u7406\u5c42","text":"<p>\u7269\u7406\u5c42\u7f16\u7801\u4e0a\uff0cPCIe 1.0 \u548c 2.0 \u91c7\u7528\u7684\u662f NRZ 8b/10b\uff0cPCIe 3.0 \u5230 5.0 \u7528\u7684\u662f NRZ 128b/130b\uff0c\u6700\u65b0\u7684 PCIe 6.0 \u548c 7.0 \u5219\u6362\u6210\u4e86 PAM4 FLIT\u3002\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4ee3 x16 Lane \u60c5\u51b5\u4e0b\u7684\u6700\u5927\u6570\u636e\u5e26\u5bbd\uff1a</p> <ul> <li>PCIe 1.0: <code>2.5 * 8 / 10 * 16 = 32 Gb/s</code></li> <li>PCIe 2.0: <code>5.0 * 8 / 10 * 16 = 64 Gb/s</code></li> <li>PCIe 3.0: <code>8.0 * 128 / 130 * 16 = 126 Gb/s</code></li> <li>PCIe 4.0: <code>16.0 * 128 / 130 * 16 = 252 Gb/s</code></li> <li>PCIe 5.0: <code>32.0 * 128 / 130 * 16 = 504 Gb/s</code></li> <li>PCIe 6.0: <code>64.0 * 16 = 1024 Gb/s</code>\uff0c\u5982\u679c\u8003\u8651 FLIT \u5f15\u5165\u7684\u5f00\u9500\uff0c\u5219\u662f <code>64.0 * 242 / 256 * 16 = 968 Gb/s</code></li> <li>PCIe 7.0: <code>128.0 * 16 = 2048 Gb/s</code>\uff0c\u5982\u679c\u8003\u8651 FLIT \u5f15\u5165\u7684\u5f00\u9500\uff0c\u5219\u662f <code>128.0 * 242 / 256 * 16 = 1936 Gb/s</code></li> </ul>"},{"location":"hardware/pcie/#pcie-60","title":"PCIe 6.0","text":"<p>PCIe 6.0 \u5f15\u5165\u4e86 PAM4 \u6765\u66ff\u4ee3\u539f\u6765\u7684 NRZ\uff0c\u5b9e\u73b0\u4e86\u6ce2\u7279\u7387\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u901f\u5ea6\u7ffb\u500d\uff0c\u5e76\u4e14\u4e0d\u518d\u4f7f\u7528 128b/130b\uff0c\u4e3a\u4e86\u89e3\u51b3 PAM4 \u5e26\u6765\u7684\u66f4\u9ad8\u7684\u9519\u8bef\u7387\uff0c\u5f15\u5165\u4e86 FEC\uff0cCRC \u8fd8\u6709\u683c\u96f7\u7801\uff0c\u4ee5\u53ca\u65b0\u7684 FLIT\u3002</p> <p>\u7f51\u4e0a\u53ef\u4ee5\u641c\u5230\u5173\u4e8e PCIe \u7684 PPT\uff1ahttps://pcisig.com/sites/default/files/files/PCIe%206.0%20Webinar_Final_.pdf \u548c https://www.openfabrics.org/wp-content/uploads/2022-workshop/2022-workshop-presentations/206_DDasSharma.pdf\uff0c\u4ee5\u53ca\u5173\u4e8e FLIT \u7684\u535a\u5ba2\uff1ahttps://pcisig.com/blog/pcie%C2%AE-60-specification-webinar-qa-deeper-dive-flit-mode-pam4-and-forward-error-correction-fec</p> <p>\u603b\u7ed3 FLIT \u7684\u8981\u70b9\uff1a</p> <ol> <li>\u6bcf\u4e2a FLIT \u56fa\u5b9a\u957f\u5ea6 256 \u5b57\u8282\uff0c\u5176\u4e2d 236 \u5b57\u8282\u4f20\u8f93 TLP\uff0c6 \u5b57\u8282\u4f20\u8f93 DLLP\uff0c8 \u5b57\u8282\u4f20\u8f93 CRC\uff0c6 \u5b57\u8282\u4f20\u8f93 FEC\u3002</li> <li>\u63a5\u53d7\u65b9\u63a5\u53d7\u5230 FLIT \u540e\uff0c\u4f1a\u5c1d\u8bd5\u8fdb\u884c FEC \u89e3\u7801\uff0c\u5e76\u4e14\u5c1d\u8bd5\u4fee\u590d\u9519\u8bef\uff0c\u518d\u8fdb\u884c CRC \u6821\u9a8c\u3002\u5982\u679c\u4e2d\u9014\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u5219\u4f1a\u53d1\u9001\u4e00\u4e2a NAK \u7ed9\u53d1\u9001\u65b9\u3002</li> <li>\u4e00\u4e2a TLP \u53ef\u80fd\u8de8\u8d8a\u591a\u4e2a FLIT\uff0c\u4e00\u4e2a FLIT \u53ef\u80fd\u5305\u62ec\u591a\u4e2a TLP\uff0c\u6839\u636e TLP \u5927\u5c0f\u800c\u5b9a\u3002TLP \u4e0d\u9700\u8981\u5bf9\u9f50\u5230 FLIT \u7684\u5f00\u5934\u6216\u8005\u7ed3\u5c3e\u3002</li> </ol> <p>\u53ef\u4ee5\u53d1\u73b0\uff0cFLIT \u7684 CRC \u7528\u4e86 8 \u4e2a\u5b57\u8282\uff0c\u4e0d\u518d\u9700\u8981\u539f\u6765 TLP \u548c DLLP \u4e2d\u7684 ECRC \u548c LCRC\u3002\u5728\u4e4b\u524d\u7684 PCIe \u7248\u672c\uff0cTLP \u7684\u53ef\u9009 Digest \u662f 4 \u4e2a\u5b57\u8282\u7684 ECRC\uff0cTLP+DLLP \u7684 LCRC \u662f 4 \u5b57\u8282\u3002\u5177\u4f53\u91c7\u7528\u591a\u5c11\u5b57\u8282\u7684 CRC\uff0c\u548c\u76ee\u6807\u7684\u9519\u8bef\u7387\uff0c\u4ee5\u53ca\u4f20\u8f93\u7684\u5b57\u8282\u6570\u76f8\u5173\u3002</p>"},{"location":"hardware/pcie/#ats","title":"ATS","text":"<p>ATS\uff08Address Translation Service\uff09\u662f\u5728 PCIe \u4e0a\u7ed9\u5916\u8bbe\u63d0\u4f9b\u67e5\u8be2\u9875\u8868\u7684\u65b9\u5f0f\uff0c\u4ece\u800c\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u5730\u5740\u3002\u6807\u51c6\u53ef\u4ee5\u5728 https://composter.com.ua/documents/ats_r1.1_26Jan09.pdf \u5904\u4e0b\u8f7d\uff0c\u4ee5\u53ca\u5173\u4e8e ATS \u7684 PPT\uff1ahttps://composter.com.ua/documents/Address_Translation_Services.pdf\u3002</p> <p>\u5b83\u7684\u6574\u4f53\u5de5\u4f5c\u65b9\u5f0f\u5982\u56fe\uff1a</p> <p> </p> PCIe ATS \u5de5\u4f5c\u65b9\u5f0f\uff08\u56fe\u6e90 PCIe ATS \u6807\u51c6\uff09 <p>\u5c31\u662f\u5728 Root Complex \u548c Memory \u4e4b\u95f4\u8bbe\u7f6e\u4e00\u4e2a Translation Agent\uff0c\u8d1f\u8d23\u67e5\u8868\uff0c\u4e5f\u5c31\u662f Page Table Walker\u3002\u5b83\u4f1a\u63a5\u6536\u6765\u81ea PCIe \u8bbe\u5907\u7684\u5730\u5740\u7ffb\u8bd1\u8bf7\u6c42\uff0c\u7136\u540e\u5b83\u83b7\u53d6\u5230\u9875\u8868\u5730\u5740\u540e\uff0c\u6839\u636e\u865a\u62df\u5730\u5740\u53bb\u67e5\u5185\u5b58\u4e2d\u7684\u9875\u8868\u3002TLB\uff08\u5728\u6807\u51c6\u4e2d\u53eb\u505a Address Translation Cache\uff0cATC\uff09\u662f\u5b9e\u73b0\u5728 PCIe \u8bbe\u5907\u4fa7\u7684\uff0c\u800c\u4e0d\u662f\u7edf\u4e00\u7684 TLB\uff0c\u4e5f\u4e0d\u662f CPU \u6838\u5fc3\u7684 TLB\u3002</p> <p>\u4e3a\u4e86\u652f\u6301 ATS\uff0c\u9700\u8981\u652f\u6301\u5982\u4e0b\u7684\u64cd\u4f5c\uff1a</p> <ol> <li>PCIe Device \u5411 Translation Agent \u53d1\u9001 Translation Request\uff1bTranslation Agent \u5411 PCIe Device \u56de\u590d Translation Completion\uff1b</li> <li>\u5f53\u9875\u8868\u51fa\u73b0\u53d8\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u901a\u77e5 PCIe \u8bbe\u5907\u7aef\u7684 TLB\uff0c\u56e0\u6b64\u9700\u8981\u5411 PCIe \u8bbe\u5907\u53d1\u9001 Invalidate Request Message\uff1bPCIe \u8bbe\u5907\u5b8c\u6210 TLB \u5237\u65b0\u540e\uff0c\u56de\u590d\u4e00\u4e2a Invalidate Complete Message\u3002</li> </ol> <p>ATS \u6807\u51c6\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u9009\u529f\u80fd\uff0c\u5c31\u662f Page Request Interface\uff08PRI\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u7f3a\u9875\u7684\u65f6\u5019\uff0c\u8bbe\u5907\u53ef\u4ee5\u53bb\u53d1\u9001 Page Request\uff0c\u8981\u6c42\u64cd\u4f5c\u7cfb\u7edf\u53bb\u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\u3002\u8fd9\u5c31\u50cf\u7528\u6237\u7a0b\u5e8f\u91cc mmap \u4e00\u4e2a\u533f\u540d\u7684\u9875\uff0c\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u5206\u914d\u7684\uff0c\u76f4\u5230\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u7f3a\u9875\u5f02\u5e38\uff0c\u7136\u540e OS \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\uff0c\u518d\u66f4\u65b0\u9875\u8868\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u7528\u4e8e DMA \u7684\u7269\u7406\u9875\u4e5f\u53ef\u4ee5 Swap \u6216\u8005\u5ef6\u8fdf\u5206\u914d\u3002</p>"},{"location":"hardware/pcie/#bifurcation","title":"Bifurcation","text":"<p>PCIe Bifurcation \u7684\u76ee\u7684\u662f\u8ba9 PCIe \u6709\u66f4\u597d\u7684\u7075\u6d3b\u6027\u3002\u4ece CPU \u51fa\u6765\u7684\u51e0\u8def PCIe\uff0c\u5b83\u7684\u5bbd\u5ea6\u4e00\u822c\u662f\u786e\u5b9a\u7684\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a x16\uff0c\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u60f3\u8981\u63a5\u591a\u4e2a\u8bbe\u5907\uff0c\u4f8b\u5982\u628a x16 \u5f53\u6210\u4e24\u4e2a x8 \u6765\u7528\uff0c\u8fd9\u5c31\u662f PCIe Bifurcation\u3002\u8fd9\u9700\u8981 PCIe \u4e24\u7aef\u7684\u652f\u6301\uff0cCPU \u7aef\u9700\u8981\u53ef\u914d\u7f6e PCIe Bifurcation\uff0c\u4e0d\u7136\u53ea\u80fd\u4ece\u4e00\u4e2a x16 \u964d\u7ea7\u5230\u4e00\u4e2a x8\uff0c\u5269\u4e0b\u7684 8x \u5c31\u6ca1\u6cd5\u5229\u7528\u4e86\uff1b\u8bbe\u5907\u7aef\u9700\u8981\u62c6\u5206\u5361\uff0c\u628a x16 \u7684\u4fe1\u53f7\u5206\u6210\u4e24\u8def\uff0c\u7136\u540e\u63d0\u4f9b\u4e24\u4e2a PCIe \u63d2\u69fd\u4ee5\u53ca\u4f7f\u7528 Clock Buffer \u6765\u63d0\u4f9b\u4e0b\u6e38\u8bbe\u5907\u7684\u65f6\u949f\uff0c\u6709\u65f6\u5219\u662f\u4e3b\u677f\u8bbe\u8ba1\u65f6\u5c31\u505a\u4e86\u62c6\u5206\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u62c6\u5206\u5361\u3002</p> <p>\u4e0b\u9762\u5206\u522b\u4ece\u684c\u9762\u5e73\u53f0\u548c\u670d\u52a1\u5668\u5e73\u53f0\uff0c\u7814\u7a76 PCIe Bifurcation \u662f\u5982\u4f55\u914d\u7f6e\u7684\u3002</p>"},{"location":"hardware/pcie/#_6","title":"\u684c\u9762\u5e73\u53f0","text":"<p>\u5728\u684c\u9762\u5e73\u53f0\u4e0a\uff0cIntel CPU \u4f1a\u6839\u636e\u542f\u52a8\u65f6 CFG \u5f15\u811a\u7684\u503c\u6765\u51b3\u5b9a PCIe Bifurcation \u8bbe\u7f6e\u3002CFG \u7684\u503c\u4e0e PCIe Bifurcation \u7684\u5bf9\u5e94\u5173\u7cfb\u53ef\u4ee5\u4ece Datasheet \u4e2d\u627e\u5230\u3002</p> <p>\u5b9e\u9645\u627e\u4e00\u4e2a\u4e3b\u677f\u6765\u7814\u7a76\u4e00\u4e0b\u3002\u578b\u53f7\u662f ASRock Fatal1ty Z97X Killer\uff0c\u4ece\u4e3b\u677f\u7684\u63cf\u8ff0\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff1a<code>3 x PCI Express 3.0 x16 Slots (PCIE2/PCIE4/PCIE6: single at x16 (PCIE2); dual at x8 (PCIE2) / x8 (PCIE4); triple at x8 (PCIE2) / x4 (PCIE4) / x4 (PCIE6)</code>\uff0c\u8bf4\u660e\u5b83\u662f\u652f\u6301 PCIe Bifurcation \u7684\uff0c\u6d89\u53ca\u5230\u4e09\u4e2a PCIe Slot\uff0c\u652f\u6301\u4e09\u79cd\u6a21\u5f0f\uff1a</p> <ul> <li>PCIE2 Slot x16</li> <li>PCIE2 Slot x8, PCIE4 Slot x8</li> <li>PCIE2 Slot x8, PCIE4 Slot x4, PCIE6 Slot x4</li> </ul> <p>\u5728 \u7f51\u4e0a \u627e\u5230\u8be5\u4e3b\u677f\u7684 \u539f\u7406\u56fe\uff0c\u53ef\u4ee5\u7528 OpenBoardView \u8f6f\u4ef6\u6253\u5f00\u3002\u8fd9\u4e2a\u4e3b\u677f\u4e0a\u7684 CPU \u63d2\u69fd\u662f LGA1150\uff0c\u627e\u5230\u4e00\u4e2a\u517c\u5bb9\u7684 CPU \u7248\u672c i7-4771\uff0c\u4e0b\u8f7d Datasheet\uff0c\u53ef\u4ee5\u770b\u5230\u51b3\u5b9a PCIe Bifurcation \u7684\u5f15\u811a\u662f <code>CFG[6:5]</code>\uff1a</p> <ul> <li><code>CFG[6:5]=00</code>: 1x8, 2x4</li> <li><code>CFG[6:5]=10</code>: 2x8</li> <li><code>CFG[6:5]=11</code>: 1x16</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e09\u79cd\u914d\u7f6e\u548c\u4e3b\u677f\u7f51\u7ad9\u4e0a\u63cf\u8ff0\u7684\u662f\u4e00\u81f4\u7684\u3002\u65e2\u7136\u4e3b\u677f\u652f\u6301 Bifurcation\uff0c\u8bf4\u660e\u4e00\u5b9a\u6709\u529e\u6cd5\u8bbe\u7f6e <code>CFG[6:5]</code> \u4e3a\u4ee5\u4e0a\u4e09\u79cd\u53d6\u503c\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u8981\u627e\u5230\u4e3b\u677f\u4e0a\u600e\u4e48\u8fde\u63a5 <code>CFG[6:5]</code>\u3002\u5728\u539f\u7406\u56fe\u4e2d\uff0c\u53ef\u4ee5\u627e\u5230 LGA1150 \u7684 <code>U39 CPU_CFG5</code> \u548c <code>U40 V_CFG6</code>\uff0c\u7ee7\u7eed\u5f80\u4e0b\u627e\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u901a\u8fc7\u7535\u963b\u8fde\u5230\u4e86\u540c\u4e00\u4e2a BAT54C \u82af\u7247\u4e0a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u770b BAT54C \u7b2c\u4e09\u4e2a\u5f15\u811a N105955695 \u7684\u7535\u5e73\u3002N105955695 \u63a5\u5230\u4e86\u4e00\u4e2a 2N7002BKS \u82af\u7247\u4e0a\uff0c\u6839\u636e\u7535\u8def\u56fe\uff0c\u6700\u540e\u662f\u8981\u770b <code>X4_PRSNT1#</code> \u4fe1\u53f7\u3002</p> <p><code>X4_PRSTN1#</code> \u4fe1\u53f7\u8fde\u63a5\u5230\u4e86 PCIE6 \u4e0a\uff0c\u5982\u679c PCIE6 Slot \u63d2\u5165\u4e86\u8bbe\u5907\uff0c\u90a3\u4e48 <code>X4_PRSTN1#</code> \u4fe1\u53f7\u751f\u6548\uff0c\u6839\u636e\u5206\u6790\u51fa\u6765\u7684\u7535\u8def\uff0c\u5b83\u4f1a\u4f7f\u5f97 <code>CFG[6:0]</code> \u53d8\u4e3a 00\uff0c\u5bf9\u5e94 1x8+2x4 \u7684 Bifurcation \u6a21\u5f0f\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u5728\u4e3b\u677f\u652f\u6301\u7684\u4e09\u79cd PCIe Bifurcation \u6a21\u5f0f\u4e0b\uff0c\u53ea\u6709\u8fd9\u4e00\u79cd\u6d89\u53ca\u5230\u4e86 PCIE6 Slot\u3002\u6240\u4ee5\u5982\u679c\u7528\u6237\u5728 PCIE6 Slot \u63d2\u5165\u4e86\u8bbe\u5907\uff0c\u90a3\u8bf4\u660e\u7528\u6237\u9700\u8981\u7684\u662f 1x8+2x4 \u7684\u6a21\u5f0f\uff0c\u81ea\u52a8\u914d\u7f6e CPU \u7684 <code>CFG[6:5]</code> \u4fe1\u53f7\u4e3a\u9884\u671f\u503c\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u8bbe\u7f6e <code>CFG[6:5]</code> \u8fd8\u4e0d\u591f\uff0c\u4e0a\u9762\u63d0\u5230\u8fc7\uff0c\u4e3b\u677f\u9700\u8981\u8d1f\u8d23\u628a PCIE2/4/6 \u7684\u4fe1\u53f7\u8fde\u63a5\u5230\u539f\u6765\u7684\u5b8c\u6574\u7684 x16 \u4e0a\uff0c\u5e76\u4e14\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fde\u63a5\u4e0d\u540c\u7684\u7ebf\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u5728\u539f\u7406\u56fe\u4e2d\u627e\u5230\uff1a\u4fe1\u53f7 <code>X4_PRSTN1#</code> \u8fde\u63a5\u5230\u4e86 CBTL04083BBS\uff0c\u8fd9\u662f\u4e00\u4e2a PCIe Mux/Demux \u82af\u7247\uff0c\u4e5f\u5c31\u662f\u628a\u540c\u6837\u4e00\u7ec4\u5dee\u5206\u7ebf\u8fde\u5230\u4e0d\u540c PCIe Slot \u4e0a\u6240\u9700\u8981\u7684\u82af\u7247\u3002</p> <p>\u4e8e\u662f\u76ee\u524d\u63a8\u65ad\u51fa\u4e86\u4e00\u90e8\u5206\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u7528\u6237\u5728 PCIE6 Slot \u63d2\u5165\u8bbe\u5907\uff0c\u7535\u8def\u8ba1\u7b97\u51fa <code>CFG[6:5]=00</code>\uff0c\u540c\u65f6\u914d\u7f6e\u597d\u4e86 PCIe Mux/Demux \u82af\u7247\uff0c\u628a 1x16 \u5207\u5206\u4e3a 1x8+2x4\u3002</p> <p>\u7ee7\u7eed\u5f80\u4e0b\u770b\uff0c\u4e3b\u677f\u5982\u4f55\u5b9e\u73b0\u5269\u4e0b\u4e24\u79cd\u914d\u7f6e\uff1a<code>CFG[6:5]=10</code> \u5bf9\u5e94 2x8\uff0c<code>CFG[6:5]=11</code> \u5bf9\u5e94 1x16\u3002\u8fd9\u4e24\u79cd\u7f16\u7801\u91cc\uff0cCFG6 \u90fd\u4e3a 1\uff0c\u53ea\u9700\u8981\u8003\u8651\u5982\u4f55\u5904\u7406 CFG5\u3002CFG5 \u9664\u4e86\u8fde\u63a5\u4e0a\u9762\u63d0\u5230\u7684 BAT54C \u4ee5\u5916\uff0c\u8fd8\u901a\u8fc7\u53e6\u4e00\u4e2a 2N7002BKS \u82af\u7247\u8fde\u63a5\u5230\u4e86 <code>NB_X8_PRSENT#</code> \u4fe1\u53f7\u4e0a\u3002\u5982\u679c\u4f60\u60f3\u660e\u767d\u4e86\u524d\u9762\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u53ef\u4ee5\u63a8\u65ad\u51fa\u6765\uff0c\u8fd9\u91cc\u7684 <code>NB_X8_PRSENT#</code> \u8fde\u63a5\u5230\u4e86 PCIE4 Slot \u4e0a\u3002\u5f53 PCIE4 Slot \u63d2\u5165\u4e86\u8bbe\u5907\uff0c\u540c\u65f6 PCIE6 Slot \u6ca1\u6709\u63d2\u5165\u8bbe\u5907\uff0c\u90a3\u4e48\u6839\u636e\u76f8\u5e94\u7684 PRESENT \u4fe1\u53f7\uff0c\u53ef\u4ee5\u5f97\u5230 <code>CFG[6:5]=10</code>\u3002\u5982\u679c PCIE4 Slot \u548c PCIE6 Slot \u90fd\u6ca1\u6709\u63d2\u5165\u8bbe\u5907\uff0c\u90a3\u5c31 <code>CFG[6:5]=11</code>\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u52a8\u6001\u68c0\u6d4b\u5e76\u8ba1\u7b97\u51fa <code>CFG[6:5]</code> \u7684\u903b\u8f91\uff1a</p> <ol> <li>\u5982\u679c PCIE6 Slot \u63d2\u5165\u4e86\u8bbe\u5907\uff0c\u8bf4\u660e\u8981\u914d\u7f6e\u4e3a 1x8+2x4\uff0c\u8bbe\u7f6e <code>CFG[6:5]=00</code></li> <li>\u5426\u5219\uff0c\u5982\u679c PCIE4 Slot \u63d2\u5165\u4e86\u8bbe\u5907\uff0c\u8bf4\u660e\u8981\u914d\u7f6e\u4e3a 2x8\uff0c\u8bbe\u7f6e <code>CFG[6:5]=10</code></li> <li>\u5426\u5219\uff0c\u8bf4\u660e\u8981\u914d\u7f6e\u4e3a 1x16\uff0c\u8bbe\u7f6e <code>CFG[6:5]=11</code></li> </ol> <p>\u800c\u4e3b\u677f\u8bbe\u8ba1\u8005\u5c31\u662f\u8981\u628a\u8fd9\u4e2a\u903b\u8f91\u8f6c\u5316\u4e3a\u7535\u8def\uff0c\u7528 BAT54C \u548c CBTL04083BBS \u82af\u7247\u6765\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97\u3002</p> <p>\u987a\u4fbf\u4e00\u63d0\uff0c\u8fd9\u91cc\u7684 PCIE2/4/6 \u7269\u7406\u5c3a\u5bf8\u90fd\u662f x16\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u9645\u5206\u914d\u5230\u7684\u5bbd\u5ea6\u4e0d\u4e00\u5b9a\u4e0e\u7269\u7406\u5c3a\u5bf8\u4e00\u81f4\u3002</p>"},{"location":"hardware/pcie/#_7","title":"\u670d\u52a1\u5668\u5e73\u53f0","text":"<p>\u5728\u670d\u52a1\u5668\u5e73\u53f0\u4e0a\uff0cIntel CPU \u7684 Bifurcation \u53d8\u6210\u8fd0\u884c\u65f6\u53ef\u914d\u7f6e\u7684\uff0c\u4f8b\u5982\u5728 Xeon E5 v4 Datasheet Volume 2 \u4e2d\uff0c\u53ef\u4ee5\u627e\u5230\u5bc4\u5b58\u5668 <code>pcie_iou_bif_ctrl</code> \u5bc4\u5b58\u5668\u7684\u5b9a\u4e49\uff1a</p> <p> </p> PCIe Bifurcation \u914d\u7f6e\u65b9\u5f0f\uff08\u56fe\u6e90 Xeon E5 v4 Datasheet Volume 2\uff09 <p>\u8fd9\u4e2a\u5bc4\u5b58\u5668\u5728 PCIe \u914d\u7f6e\u7a7a\u95f4\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>setpci</code> \u547d\u4ee4\u6765\u8bfb\u53d6\u6216\u5199\u5165\uff1a</p> <pre><code>$ setpci -s 00:00.0 190.B\n00\n$ setpci -s 00:01.0 190.B\n01 # x8\n$ setpci -s 00:02.0 190.B\n04 # x16\n$ setpci -s 00:03.0 190.B\n03 # x8x8\n$ setpci -s 80:02.0 190.B\n04 # x16\n</code></pre> <p>\u901a\u8fc7 <code>lspci -bPP</code> \u547d\u4ee4\u4ee5\u53ca <code>lspci -vvv</code>\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u8fd9\u51e0\u4e2a PCIe Root Port \u4e0b\u7684\u8bbe\u5907\u4ee5\u53ca\u901f\u5ea6\uff1a</p> <ul> <li>00:01.0(x8)/02:00.0 RAID \u63a7\u5236\u5668 PCIe 3.0 x8</li> <li>00:02.0(x16)/03:00.0 NVIDIA \u663e\u5361 PCIe 3.0 x16</li> <li>00:03.0(x8x8)/01:00.0 BCM 2x10G+2x1G \u7f51\u5361 PCIe 2.0 x8</li> <li>80:02.0(x16)/82:00.0 NVIDIA \u663e\u5361 PCIe 3.0 x16</li> </ul> <p>\u5176\u4e2d\u524d\u4e09\u4e2a\u8bbe\u5907\u8fde\u63a5\u5230 CPU1\uff0c\u540e\u4e09\u4e2a\u8bbe\u5907\u8fde\u63a5\u5230 CPU2</p> <p>\u5728 BIOS \u8bbe\u7f6e\u4e2d\uff0c\u8fdb\u5165 Integrated Devices -&gt; Slot Bifurcation \u53ef\u4ee5\u770b\u5230\u8bbe\u7f6e\uff0c\u53ef\u9009\u9879\u6709\uff1a</p> <ul> <li>Slot 1/2/3/5: Default Bifurcation, x4+x4 Bifurcation</li> <li>Slot 4/6: Default Bifurcation, x4+x4+x4+x4 Bifurcation, x8+x8 Bifurcation</li> </ul> <p>\u9605\u8bfb R730 \u6587\u6863\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u6700\u591a\u53ef\u4ee5\u6709 7 \u4e2a Slot\uff0c\u5176\u4e2d Slot 1/2/3/5/7 \u662f PCIe 3.0x8\uff0cSlot 4 \u662f PCIe 3.0 x16\uff0cSlot 6 \u6839\u636e\u4e0d\u540c\u7684 Riser \u53ef\u4ee5\u63d0\u4f9b PCIe 3.0 x8 \u6216 x16\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a</p> <ul> <li>PCIe Slot 1: x8, CPU2</li> <li>PCIe Slot 2: x8, CPU2</li> <li>PCIe Slot 3: x8, CPU2</li> <li>PCIe Slot 4: x16, CPU2</li> <li>PCIe Slot 5: x8, CPU1</li> <li>PCIe Slot 6: x8/x16, CPU1</li> <li>PCIe Slot 7: x8, CPU1</li> </ul> <p>\u9605\u8bfb E5 v4 CPU \u6587\u6863\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u6709\u4e09\u4e2a PCIe Port\uff0c\u4e00\u5171\u6709 40 PCIe lanes\uff08x8+x16+x16\uff09\u3002\u7531\u6b64\u53ef\u77e5\uff0c\u5176\u4e2d\u4e00\u4e2a x16 \u8fde\u63a5\u5230 Slot4/6 \u4e0a\uff0c\u53e6\u4e00\u4e2a x16 \u62c6\u5206\u6210 x8+x8\uff0c\u8fde\u63a5\u5230\u5176\u4f59\u7684 Slot\u3002\u6709\u4e9b\u5947\u602a\u7684\u662f CPU1 \u5c11\u4e86\u4e00\u4e2a x8 \u4e0d\u77e5\u53bb\u5411\uff0c\u6000\u7591\u662f\u8fde\u63a5\u5230\u4e86 RAID \u5361\u6216\u8005\u7f51\u5361\u4e0a\u3002\u7531\u4e8e\u7f3a\u5c11\u4e3b\u677f\u7684\u539f\u7406\u56fe\uff0c\u65e0\u6cd5\u7ee7\u7eed\u6df1\u5165\u7814\u7a76\u3002</p> <p>\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684 <code>iou_start_bifurcation</code> \u5b57\u6bb5\u53ea\u80fd\u5199\u5165\u4e00\u6b21 1 \u6765\u521d\u59cb\u5316 Bifurcation\uff0c\u800c\u8fd9\u4e00\u822c\u662f\u7531 BIOS \u5b8c\u6210\u7684\u3002\u5982\u679c BIOS \u6ca1\u6709\u505a\uff0c\u6216\u8bb8\u53ef\u4ee5\u540e\u9762\u518d\u5199\u5165\u4e00\u6b21\uff1b\u5982\u679c BIOS \u5df2\u7ecf\u5199\u5165\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u63d0\u4f9b\u53ef\u9009\u9879\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u9006\u5411 BIOS\uff0c\u4f7f\u7528 UEFITool \u67e5\u770b\u662f\u5426\u6709\u9690\u85cf\u7684\u914d\u7f6e\uff0c\u5982\u679c\u6709\uff0c\u5219\u53ef\u4ee5\u5c1d\u8bd5\u7ed5\u8fc7 BIOS \u8bbe\u7f6e\u53bb\u4fee\u6539\u9690\u85cf\u7684\u914d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u8003\u8651\u4fee\u6539 BIOS \u7684\u6307\u4ee4\u3002</p>"},{"location":"hardware/pcie/#_8","title":"\u5c0f\u7ed3","text":"<p>\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\uff0cPCIe Bifurcation \u7684\u76ee\u7684\u662f\u4fdd\u8bc1\u603b lane \u6570\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u8fde\u63a5\u66f4\u591a\u8bbe\u5907\u7684\u8f83\u4f4e\u6210\u672c\u7684\u65b9\u6cd5\u3002\u5b83\u9700\u8981 CPU \u4e00\u4fa7\u548c\u8bbe\u5907\u4e00\u4fa7\u7684\u652f\u6301\u3002\u684c\u9762\u7ea7\u522b\u7684 CPU \u901a\u8fc7 CFG \u4fe1\u53f7\u6765\u914d\u7f6e\uff0c\u670d\u52a1\u5668\u7aef\u7684 CPU \u901a\u8fc7 PCIe \u914d\u7f6e\u7a7a\u95f4\u6765\u914d\u7f6e\u3002\u8bbe\u5907\u4e00\u4fa7\uff0c\u53ef\u4ee5\u7531\u4e3b\u677f\u8fdb\u884c\u62c6\u5206\uff0c\u6b64\u65f6\u4e3b\u677f\u4e0a\u4f1a\u6709\u591a\u4f59\u7684 PCIe \u63a5\u53e3\uff0c\u6839\u636e\u63d2\u5728\u4e3b\u677f\u4e0a\u7684\u8bbe\u5907\u7684\u60c5\u51b5\uff0c\u4e3b\u677f\u81ea\u9002\u5e94\u51fa\u4e00\u4e2a PCIe Bifurcation \u914d\u7f6e\uff1b\u4e3b\u677f\u4e5f\u53ef\u4ee5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u76f4\u63a5\u628a CPU \u7684 PCIe \u63a5\u5230 Slot \u4e0a\uff0c\u6b64\u65f6\u9700\u8981\u7528\u6237\u81ea\u5df1\u8d2d\u4e70 PCIe \u62c6\u5206\u5361\u3002\u6dd8\u5b9d\u4e0a\u53ef\u4ee5\u641c\u5230\u4e0d\u5c11 PCIe \u62c6\u5206\u5361\uff0c\u5176\u4e2d\u7528\u4e8e NVMe \u7684\u8f83\u591a\uff0c\u6bd5\u7adf M.2 \u63a5\u53e3\u9762\u79ef\u5c0f\uff0c\u800c\u4e14\u53ea\u9700\u8981 PCIe x4\u3002</p> <p>\u53e6\u4e00\u79cd\u65b9\u6848\u662f PCIe \u4ea4\u6362\u673a\uff08\u5982 PEX 8747\uff09\uff0c\u7f3a\u70b9\u662f\u6210\u672c\u8f83\u9ad8\uff0c\u589e\u52a0\u4e86\u5ef6\u8fdf\uff0c\u597d\u5904\u662f\u7075\u6d3b\u6027\u5f88\u5f3a\uff0c\u4e0d\u9700\u8981 CPU \u989d\u5916\u914d\u7f6e\uff0c\u53ef\u4ee5\u5916\u63a5\u66f4\u591a\u8bbe\u5907\uff0c\u5e76\u4e14\u8bbe\u5907\u7a7a\u95f2\u65f6\u53ef\u4ee5\u8ba9\u51fa\u5e26\u5bbd\u3002\u4f8b\u5982\u4e00\u4e2a x16 \u4f7f\u7528 Bifurcation \u65b9\u6cd5\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a x8\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 PCIe \u4ea4\u6362\u673a\u8fde\u63a5\u4e24\u4e2a x16\uff0c\u7c7b\u4f3c\u7f51\u7edc\uff0c\u8fd9\u4e24\u4e2a x16 \u5171\u4eab\u5e26\u5bbd\uff0c\u4e0b\u6e38\u7684\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u4fe1\uff0c\u8fd9\u4e2a\u5728 HPC \u573a\u666f\u4e0b\u4f1a\u6bd4\u8f83\u5e38\u89c1\uff0c\u4f8b\u5982\u4f7f\u7528 PCIe \u4ea4\u6362\u673a\u8fde\u63a5\u663e\u5361\u548c IB \u7f51\u5361\u3002</p>"},{"location":"hardware/pcie/#cxl","title":"CXL","text":"<p>CXL \u7684\u6807\u51c6\u662f\u516c\u5f00\u4e0b\u8f7d\u7684\uff1ahttps://www.computeexpresslink.org/download-the-specification\uff0c\u4e0b\u6587\u53c2\u8003\u7684\u662f 2022 \u5e74 8 \u6708 1 \u65e5\u7684 CXL 3.0 \u7248\u672c\u3002</p>"},{"location":"hardware/pcie/#cxl_1","title":"CXL \u8bbe\u5907\u7c7b\u578b","text":"<p>CXL \u5bf9 PCIe \u7684\u91cd\u8981\u7684\u6269\u5c55\uff0c\u4e00\u662f\u5728\u4e8e\u8ba9\u8bbe\u5907\u53ef\u4ee5\u548c CPU \u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\uff08CXL.cache\uff09\uff0c\u4e8c\u662f\u53ef\u4ee5\u505a\u8fdc\u7a0b\u7684\u5185\u5b58\uff08CXL.mem\uff09\u3002</p> <p>\u5177\u4f53\u4e0b\u6765\uff0cCXL \u6807\u51c6\u4e3b\u8981\u5b9a\u4e49\u4e86\u4e09\u7c7b\u8bbe\u5907\uff1a</p> <ul> <li>CXL Type 1: \u8bbe\u5907\u5e26\u6709\u4e0e CPU \u4e00\u81f4\u7684\u7f13\u5b58\uff0c\u5b9e\u73b0 CXL.io \u548c CXL.cache</li> <li>CXL Type 2: \u8bbe\u5907\u5e26\u6709\u81ea\u5df1\u7684\u5185\u5b58\u548c\u4e0e CPU \u4e00\u81f4\u7684\u7f13\u5b58\uff0c\u5b9e\u73b0 CXL.io\uff0cCXL.cache \u548c CXL.mem</li> <li>CXL Type 3: \u8bbe\u5907\u5e26\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u5b9e\u73b0 CXL.io \u548c CXL.mem</li> </ul>"},{"location":"hardware/pcie/#cxl_2","title":"CXL \u4f20\u8f93\u5c42","text":""},{"location":"hardware/pcie/#cxlio","title":"CXL.io","text":"<p>CXL.io \u57fa\u672c\u4e0a\u5c31\u662f PCIe \u534f\u8bae\uff1a</p> <pre><code>CXL.io provides a non-coherent load/store interface for I/O devices. Figure\n3-1 shows where the CXL.io transaction layer exists in the Flex Bus layered\nhierarchy. Transaction types, transaction packet formatting, credit-based\nflow control, virtual channel management, and transaction ordering rules\nfollow the PCIe* definition; please refer to the \u201cTransaction Layer\nSpecification\u201d chapter of PCIe Base Specification for details. This chapter\nhighlights notable PCIe operational modes or features that are used for\nCXL.io.\n</code></pre> <p>CXL 3.0 \u901f\u5ea6\u662f 64.0 GT/s\uff0c\u4f7f\u7528 PAM4 \u7f16\u7801\uff0c\u5bf9\u5e94\u7684\u662f PCIe 6.0\u3002</p>"},{"location":"hardware/pcie/#cxlcache","title":"CXL.cache","text":"<p>CXL.cache \u6bcf\u4e2a\u65b9\u5411\u4e0a\u6709\u4e09\u4e2a channel\uff1a\u8bf7\u6c42\uff0c\u54cd\u5e94\u548c\u6570\u636e\u3002\u8003\u8651\u5230 Host \u548c Device \u7684\u4f20\u8f93\u65b9\u5411\uff0c\u5c31\u662f\u516d\u4e2a channel\uff1aD2H Req\uff0cD2H Resp\uff0cD2H Data\uff0cH2D Req\uff0cH2D Resp\uff0cH2D Data\u3002\u5728 Data channel \u4e0a\u4f20\u8f93\u7684\u7f13\u5b58\u884c\u5927\u5c0f\u662f 64 \u5b57\u8282\u3002</p> <p>CXL.cache \u7684\u7f13\u5b58\u884c\u72b6\u6001\u91c7\u7528\u7684\u662f MESI\u3002</p> <p>CXL.cache \u4f20\u8f93\u6709\u4e09\u79cd\u6a21\u5f0f\uff1a68B Flit\uff0c256B Flit \u548c PBR Flit\u3002</p> <p>H2D Request \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>Opcode</li> <li><code>Address[51:6]</code>: \u7269\u7406\u5730\u5740</li> <li>UQID: Unique Queue ID</li> <li>CacheID: Only in 256B Flit</li> <li>SPID/DPID: Only in PBR Flit</li> </ul> <p>D2H Response \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>Opcode</li> <li>UQID: Unique Queue ID</li> <li>DPID: Only in PBR Flit</li> </ul> <p>D2H Data \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>UQID: Unique Queue ID</li> <li>ChunkValid: Only in 68B Flit</li> <li>Bogus</li> <li>Poison: data is corrupted</li> <li>BEP: Only in 256B Flit &amp; PBR Flit</li> <li>DPID: Only in PBR Flit</li> </ul> <p>D2H Request \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>Opcode</li> <li>CQID: Command Queue ID</li> <li>NT: Non Temporal</li> <li>CacheID: Only in 256B Flit</li> <li>Address: 46 \u4f4d\u7269\u7406\u5730\u5740</li> <li>SPID/DPID: Only in PBR Flit</li> </ul> <p>H2D Response \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>Opcode</li> <li>RspData</li> <li>RSP_PRE</li> <li>CQID: Command Queue ID</li> <li>CacheID: Only in 256B Flit</li> <li>DPID: Only in PBR Flit</li> </ul> <p>H2D Data \u7684\u5b57\u6bb5\uff1a</p> <ul> <li>Valid</li> <li>CQID: Command Queue ID</li> <li>ChunkValid: Only in 68B Flit</li> <li>Bogus</li> <li>GO-Err</li> <li>CacheID: Only in 256B Flit</li> <li>DPID: Only in PBR Flit</li> </ul>"},{"location":"hardware/pcie/#_9","title":"\u8bf7\u6c42\u7c7b\u578b","text":"<p>\u9996\u5148\u8003\u8651 Host \u4f1a\u53d1\u9001\u7684\u8bf7\u6c42\u3002</p> <p>\u7b2c\u4e00\u79cd\u662f SnpData\uff0c\u4f8b\u5982\u5728 Host \u5728\u8bfb\u53d6\u7684\u65f6\u5019\u51fa\u73b0\u7f3a\u5931\uff0c\u6b64\u65f6\u9700\u8981\u5411 Device \u53d1\u9001 Snoop\uff0c\u83b7\u53d6\u6700\u65b0\u7684 Dirty \u7684 Data\uff0c\u6216\u8005\u8ba9 Device \u7684\u7f13\u5b58\u884c\u964d\u7ea7\u4e3a Shared \u72b6\u6001\u3002</p> <p>Device \u6536\u5230 SnpData \u540e\uff0c\u5982\u679c\u53d1\u73b0\u7f13\u5b58\u884c\u4e0d\u5728\u7f13\u5b58\u4e2d\uff08\u72b6\u6001\u662f I\uff09\uff0c\u4f1a\u56de\u590d\u4e00\u4e2a RspIHitI\uff1b\u5982\u679c\u7f13\u5b58\u884c\u5728\u7f13\u5b58\u4e2d\u4e14\u6570\u636e\u6ca1\u6709\u4fee\u6539\uff08\u72b6\u6001\u662f S \u6216\u8005 E\uff09\uff0c\u964d\u7ea7\u5230 S\uff0c\u4f1a\u56de\u590d\u4e00\u4e2a RspSHitSE\uff1b\u5982\u679c\u7f13\u5b58\u884c\u662f dirty\uff08\u72b6\u6001\u662f M\uff09\uff0c\u53ef\u4ee5\u9009\u62e9\u964d\u7ea7\u5230 S\uff0c\u7136\u540e\u56de\u590d RspSFwdM \u4ee5\u53ca\u7f13\u5b58\u884c\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u53d8\u6210 Invalid\uff0c\u56de\u590d RspIFwdM \u4ee5\u53ca\u7f13\u5b58\u884c\u7684\u6570\u636e\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e9b D2H Response \u7684 Opcode \u7684\u540d\u5b57\u683c\u5f0f\u5f88\u6709\u89c4\u5f8b\uff0c<code>Rsp+A+Hit/Fwd+B</code>\uff0cA \u8868\u793a\u65b0\u7684\u7f13\u5b58\u884c\u72b6\u6001\uff0cB \u662f\u539f\u6765\u7684\u7f13\u5b58\u884c\u72b6\u6001\uff0cHit \u4e0d\u9644\u5e26\u6570\u636e\uff0cFwd \u9644\u5e26\u6570\u636e\u3002</p> <p>\u7b2c\u4e8c\u79cd\u662f SnpInv\uff0c\u4f8b\u5982 Host \u8981\u5199\u5165\u7f13\u5b58\uff0c\u5c31\u8981 invalidate \u5176\u4ed6\u7f13\u5b58\u3002Device \u6536\u5230\u4ee5\u540e\uff0c\u53ef\u80fd\u8fd4\u56de RspIHitI\u3001RspIHitSE \u548c RspIFwdM\uff0c\u5206\u522b\u5bf9\u5e94\u4e0d\u540c\u7684\u521d\u59cb\u72b6\u6001\uff0c\u6700\u7ec8\u90fd\u662f Invalid \u6001\u3002</p> <p>\u7b2c\u4e09\u79cd\u662f SnpCur\uff0c\u83b7\u53d6\u5f53\u524d\u7684\u7f13\u5b58\u884c\u72b6\u6001\u3002Device \u53ef\u4ee5\u4fee\u6539\u7f13\u5b58\u884c\u72b6\u6001\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u3002\u53ef\u80fd\u7684\u8fd4\u56de\u6709 RspIHitI\uff0cRspVHitV\uff0cRspSHitSE\uff0cRspSFwdM\uff0cRspIFwdM \u548c RspVFwdV\u3002\u8fd9\u91cc\u7684 V \u8868\u793a Valid\uff0c\u5bf9\u5e94 MESI \u4e2d\u7684 MES \u4e09\u79cd\u72b6\u6001\u3002\u6240\u4ee5\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u4e0d\u53d8\u7684\u8bdd\uff0c\u5c31\u662f RspIHitI\uff0cRspVHitV \u548c RspVFwdV \u4e09\u79cd\u54cd\u5e94\u3002</p> <p>\u518d\u8003\u8651 Device \u4f1a\u53d1\u9001\u7684\u8bf7\u6c42\u3002\u9996\u5148\uff0c\u8bf7\u6c42\u53ef\u4ee5\u5206\u4e3a\u56db\u7c7b\uff1a</p> <ol> <li>Read\uff1a\u53d1\u9001 D2H Request\uff0c\u63a5\u6536 H2D Response \u548c H2D Data</li> <li>Read0\uff1a\u53d1\u9001 D2H Request\uff0c\u63a5\u6536 H2D Response</li> <li>Write\uff1a\u53d1\u9001 D2H Request\uff0c\u63a5\u6536 H2D Response\uff0c\u53d1\u9001 D2H Data\uff0c\u53ef\u9009\u63a5\u6536 H2D Response</li> <li> <p>Read0-Write\uff1a\u53d1\u9001 D2H Request\uff0c\u63a5\u6536 H2D Response\uff0c\u53d1\u9001 D2H Data</p> </li> <li> <p>RdCurr(Read)\uff0cDevice \u8bfb\u53d6 Host \u7684\u7f13\u5b58\u884c\uff0c\u4e0d\u9020\u6210\u4efb\u4f55\u7684\u7f13\u5b58\u72b6\u6001\u7684\u4fee\u6539\u3002Device \u7f13\u5b58\u8fd8\u662f\u5904\u4e8e Invalid \u72b6\u6001\u3002</p> </li> <li>RdOwn(Read)\uff0cDevice \u8bfb\u53d6 Host \u7684\u7f13\u5b58\u884c\uff0c\u53ef\u4ee5\u8fdb\u5165 E \u6001\u6216\u8005 M \u6001\u3002Host \u54cd\u5e94 GO-Err/GO-I/GO-E/GO-M\u3002</li> <li>RdShared(Read)\uff0cDevice \u8bfb\u53d6 Host \u7684\u7f13\u5b58\u884c\uff0c\u8fdb\u5165 S \u6001\u3002Host \u54cd\u5e94 GO-Err/GO-I/GO-S\u3002</li> <li>RdAny(Read)\uff0cDevice \u8bfb\u53d6 Host \u7684\u7f13\u5b58\u884c\uff0c\u8fdb\u5165 M \u6001\uff0cE \u6001\u6216 S \u6001\u3002Host \u54cd\u5e94 GO-Err/GO-I/GO-S/GO-E/GO-M\u3002</li> <li>RdOwnNoData(Read0)\uff0cDevice \u4e0d\u8bfb\u53d6\u73b0\u5728\u7f13\u5b58\u884c\u7684\u6570\u636e\uff0c\u8fdb\u5165 E \u6001\u3002\u4e00\u822c\u7528\u4e8e\u6574\u4e2a\u7f13\u5b58\u884c\u7684\u6570\u636e\u90fd\u8981\u66f4\u65b0\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6216\u8bb8\u5f53\u524d\u7f13\u5b58\u884c\u7684\u6570\u636e\u3002</li> <li>ItoMWr(Read0-Write)\uff0cDevice \u5199\u5165\u65b0\u7684\u5b8c\u6574\u7f13\u5b58\u884c\u5230 Host \u4e2d\uff0c\u5e76\u4e14\u8fdb\u5165 M \u6001\u3002Host \u54cd\u5e94 GO_WritePull/GO_ERR_WritePull\u3002</li> <li>WrCur(Read0-Write)\uff0c\u548c ItoMWr \u57fa\u672c\u4e00\u6837\uff0c\u533a\u522b\u5728\u4e8e\uff0c\u5982\u679c\u7f13\u5b58\u884c\u547d\u4e2d\u4e86\uff0c\u5c31\u5199\u5165\u5230\u7f13\u5b58\u4e2d\uff1b\u5982\u679c\u7f3a\u5931\u4e86\uff0c\u5c31\u5199\u5165\u5230\u5185\u5b58\u4e2d\u3002Host \u54cd\u5e94 GO_WritePull/GO_ERR_WritePull\u3002</li> <li>CLFlush(Read0)\uff0c\u8981\u6c42 Host Invalidate \u4e00\u4e2a\u7f13\u5b58\u884c\u3002Host \u54cd\u5e94 GO-Err/GO-I\u3002</li> <li>CleanEvict(Write)\uff0cDevice \u8981 Evict \u4e00\u4e2a Exclusive \u7684\u7f13\u5b58\u884c\u3002Host \u54cd\u5e94 GO_WritePull/GO_WritePull_Drop\u3002</li> <li>DirtyEvict(Write)\uff0cDevice \u8981 Evict \u4e00\u4e2a Modified \u7684\u7f13\u5b58\u884c\u3002Host \u54cd\u5e94 GO_WritePull/GO_ERR_WritePull\u3002</li> <li>CleanEvictNoData(Write)\uff0cDevice \u8981 Evict \u4e00\u4e2a Exclusive \u7684\u7f13\u5b58\u884c\uff0c\u4f46\u662f\u4e0d\u4f20\u8f93\u6570\u636e\uff0c\u53ea\u7528\u4e8e\u66f4\u65b0 Snoop Filter\u3002Host \u54cd\u5e94 GO-I\u3002</li> <li>WrInv(Write)\uff0cWrite Invalidate Line\uff0c\u5411 Host \u5199\u5165 0-64 \u5b57\u8282\u7684\u6570\u636e\uff0c\u5e76\u4e14 Invalidate \u7f13\u5b58\u3002Host \u54cd\u5e94 WritePull/GO-Err/GO-I\u3002</li> <li>WOWrInv(Write)\uff0cWeakly Ordered \u7248\u672c\u7684 WrInV\uff0c\u5199\u5165 0-63 \u5b57\u8282\u7684\u6570\u636e\u3002Host \u54cd\u5e94 ExtCmp/FastGO_WritePull/GO_ERR_WritePull\u3002</li> <li>WOWrInvF(Write)\uff0cWeakly Ordered \u7248\u672c\u7684 WrInv\uff0c\u5199\u5165 64 \u5b57\u8282\u7684\u6570\u636e\u3002Host \u54cd\u5e94 ExtCmp/FastGO_WritePull/GO_ERR_WritePull\u3002</li> <li>CacheFlushed(Read0)\uff0c\u544a\u8bc9 Host \u81ea\u5df1\u7684\u7f13\u5b58\u90fd\u88ab\u6e05\u7a7a\u4e86\uff0c\u6240\u6709\u7f13\u5b58\u884c\u90fd\u5728 I \u72b6\u6001\u3002Host \u54cd\u5e94 GO-I\u3002</li> </ol>"},{"location":"hardware/pcie/#_10","title":"\u548c\u5176\u4ed6\u534f\u8bae\u7684\u5bf9\u6bd4","text":"<p>\u5728 \u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae \u4e2d\u5206\u6790\u8fc7 TileLink \u7684\u7f13\u5b58\u4e00\u81f4\u6027\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u7f13\u5b58\uff08Master A\uff09\u51fa\u73b0\u4e86\u7f3a\u5931\uff0c\u9700\u8981\u7ecf\u8fc7\u5982\u4e0b\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>Master A -&gt; Slave: Acquire</li> <li>Slave -&gt; Master B: Probe</li> <li>Master B -&gt; Slave: ProbeAck</li> <li>Slave -&gt; Master A: Grant</li> <li>Master A -&gt; Slave: GrantAck</li> </ul> <p>\u5728 TileLink Cached \u91cc\u9762\uff0c\u6240\u6709\u7684 Master \u90fd\u662f\u5e73\u7b49\u7684\u3002\u800c\u5728 CXL \u4e2d\uff0c\u9700\u8981\u7ef4\u62a4\u7f13\u5b58\u4e00\u81f4\u6027\u7684\uff0c\u6709 CPU \u5185\u90e8\u7684\u5404\u4e2a\u7f13\u5b58\u4e4b\u95f4\uff0c\u8fd8\u6709 CPU \u548c\u8bbe\u5907\u4e4b\u95f4\u3002\u800c CXL.cache \u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u4e0e\u8bbe\u5907\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u90e8\u5206\uff0c\u7ef4\u62a4\u7f13\u5b58\u4e00\u81f4\u6027\u7684\u6838\u5fc3\u662f\u5728 CPU \u4e00\u4fa7\uff0cHost \u76f8\u5f53\u4e8e TileLink \u7684 Slave\uff0cDevice \u76f8\u5f53\u4e8e TileLink \u7684 Master A\u3002\u53ef\u4ee5\u8bf4 CXL.cache \u662f\u4e0d\u5bf9\u79f0\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> <p>\u4f8b\u5982 CXL \u4e2d\u8bbe\u5907\u8bfb\u53d6\u7f13\u5b58\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u7f3a\u5931\uff0c\u90a3\u4e48\u9700\u8981\u7ecf\u8fc7\u5982\u4e0b\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>Device -&gt; Host: RdShared/RdOwn</li> <li>Host -&gt; CPU Caches: Custom Snoop Messages</li> <li>Host -&gt; Other CXL Device: SnpData</li> <li>Other CXL Device -&gt; Host: RspSHitSE/RspSFwdM</li> <li>Host -&gt; Device: GO-S</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6574\u4f53\u7684\u6d41\u7a0b\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\u3002</p>"},{"location":"hardware/pcie/#cxlmem","title":"CXL.mem","text":"<p>CXL.mem \u7528\u4e8e\u6269\u5c55\u5185\u5b58\uff0c\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5b83\u53ef\u80fd\u5355\u72ec\u4f7f\u7528\uff0c\u4e5f\u53ef\u80fd\u548c CXL.cache \u914d\u5408\u4f7f\u7528\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6709\u4e09\u79cd\u4e00\u81f4\u6027\u6a21\u578b\uff1a</p> <ol> <li>HDM-H(Host-only Coherent)\uff1a\u4ec5 Type 3 \u8bbe\u5907\uff0c\u4e5f\u5c31\u662f\u65e0 CXL.cache</li> <li>HDM-D(Device Coherent)\uff1a\u4ec5 Legacy Type 2 \u8bbe\u5907\uff0c\u4e5f\u5c31\u662f\u6709 CXL.cache</li> <li>HDM-DB(Device Coherent using Back-Invalidation)\uff1aType 2 \u6216 Type 3 \u8bbe\u5907</li> </ol> <p>\u5728 CXL.cache \u4e2d\uff0c\u4e24\u7aef\u662f Host \u548c Device\uff1b\u800c CXL.mem\uff0c\u4e24\u7aef\u662f Master \u548c Subordinate\u3002</p> <p>\u4ece Master \u5230 Subordinate \u7684\u6d88\u606f\uff08M2S\uff09\u6709\u4e09\u7c7b\uff1a</p> <ol> <li>Request(Req)</li> <li>Request with Data(RwD)</li> <li>Back-Invalidation Response(BIRsp)</li> </ol> <p>\u4ece Subordinate \u5230 Master \u7684\u6d88\u606f\uff08S2M\uff09\u6709\u4e09\u7c7b\uff1a</p> <ol> <li>Response without data(NDR, No Data Response)</li> <li>Response with Data(DRS, Data Response)</li> <li>Back-Invalidation Snoop(BiSnp)</li> </ol> <p>\u5176\u4e2d\u6bd4\u8f83\u7279\u522b\u7684\u662f Back-Invalidation\uff0c\u8fd9\u4e2a\u7684\u76ee\u7684\u662f\u8ba9 Device \u53ef\u4ee5\u901a\u8fc7 Snoop \u4fee\u6539 Host \u4e2d\u7f13\u5b58\u4e86 Device \u5185\u5b58\u4e2d\u7684\u6570\u636e\u7684\u7f13\u5b58\u884c\u3002</p> <p>\u5bf9\u4e8e Type 3 \u7684\u8bbe\u5907\uff08\u65e0 CXL.cache\uff09\u6765\u8bf4\uff0cDevice \u5c31\u662f\u4e00\u4e2a\u6269\u5c55\u7684\u5185\u5b58\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u652f\u6301\u8bfb\u5199\u5185\u5b58\u5c31\u53ef\u4ee5\u4e86\u3002Host \u53d1\u9001 <code>MemRd*</code>\uff0cDevice \u54cd\u5e94 MemData\uff1bHost \u53d1\u9001 <code>MemWr*</code>\uff0cDevice \u54cd\u5e94 Cmp\u3002</p> <p>\u5bf9\u4e8e Type 2 \u7684\u8bbe\u5907\uff08\u6709 CXL.cache\uff09\u6765\u8bf4\uff0cDevice \u65e2\u6709\u81ea\u5df1\u7684\u7f13\u5b58\uff0c\u53c8\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u5c31\u6bd4\u8f83\u590d\u6742\u4e86\u3002\u4f8b\u5982 Host \u5728\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u5019\uff08MemRd\uff0cSnpData/SnpInv/SnpCur\uff09\uff0c\u8fd8\u9700\u8981\u5bf9 Device Cache \u8fdb\u884c Snoop\uff08SnpData/SnpInv/SnpCur\uff09\uff0c\u4fdd\u8bc1\u7f13\u5b58\u7684\u4e00\u81f4\u6027\u3002Host \u60f3\u8981\u5199\u5165\u6570\u636e\u5230 Device Memory \u7684\u65f6\u5019\uff0c\u5982\u679c\u6b64\u65f6 Device Cache \u4e2d\u6709 Dirty \u6570\u636e\uff0c\u9700\u8981\u8fdb\u884c\u5199\u5408\u5e76\uff0c\u518d\u628a\u5408\u5e76\u540e\u7684\u6570\u636e\u5199\u5165\u5230 Device Memory\u3002\u5f53 Device \u60f3\u8981\u4ece\u81ea\u5df1\u7684\u7f13\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u53c8\u7f3a\u5931\u7684\u65f6\u5019\uff0c\u9996\u5148\u9700\u8981\u5224\u65ad\u6570\u636e\u5728 Host \u7aef\u7684\u7f13\u5b58\u4e2d\uff0c\u8fd8\u662f\u5728 Device Memory \u4e2d\uff0c\u4e0d\u540c\u7684\u504f\u7f6e\uff08Bias\uff09\u6a21\u5f0f\u51b3\u5b9a\u4e86\u6570\u636e\u5e94\u8be5\u653e\u5728 Host \u8fd8\u662f Device \u7684\u7f13\u5b58\u4e0a\u3002Device \u8981\u5199\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u679c Host \u4e2d\u7f13\u5b58\u4e86\u8be5\u7f13\u5b58\u884c\uff0c\u5219\u9700\u8981 Back-Invalidation\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e9b\u573a\u666f\uff0cCXL.cache \u548c CXL.mem \u4f1a\u6bd4\u8f83\u590d\u6742\u3002</p>"},{"location":"hardware/pcie/#_11","title":"\u63a8\u8350\u9605\u8bfb","text":"<ul> <li>LogicJitterGibbs \u8d44\u6599\u6574\u7406\uff1a\u53ef\u4ee5\u5b66\u4e60 1W \u5c0f\u65f6\u7684 PCIe</li> <li>intel \u90e8\u5206\u684c\u9762\u7ea7 CPU \u7684 pcie \u901a\u9053\u62c6\u5206\u53e6\u7c7b\u4f4e\u6210\u672c\u5b9e\u73b0</li> <li>Intel Alder Lake 12 \u4ee3\u9177\u777f CPU PCIe \u62c6\u5206\u5b9e\u73b0\u65b9\u6cd5</li> <li>CXL\u5b66\u4e60\uff08\u4e00\uff09</li> <li>CXL\u5b66\u4e60\uff08\u4e8c\uff09</li> <li>CXL\u5b66\u4e60\uff08\u4e09\uff09</li> <li>CXL\u5b66\u4e60\uff08\u56db\uff09</li> <li>CXL\u5b66\u4e60\uff08\u4e94\uff09</li> <li>CXL\u5b66\u4e60\uff08\u516d\uff09</li> <li>CXL\u5b66\u4e60\uff08\u4e03\uff09</li> <li>CXL\u5b66\u4e60\uff08\u516b\uff09</li> <li>CXL\u5b66\u4e60\uff08\u4e5d\uff09</li> <li>CXL\u5b66\u4e60\uff08\u5341\uff09</li> <li>CXL\u5b66\u4e60\uff08\u5341\u4e00\uff09</li> </ul>"},{"location":"hardware/sdram.en/","title":"SDRAM","text":""},{"location":"hardware/sdram.en/#features","title":"Features","text":"<p>SDRAM features:</p> <ol> <li>low cost, each 1 bit cell requires only one CMOS transistor</li> <li>complex interface, you need to activate a row before accessing data, and then read the data in the row</li> <li>the controller is also complex and requires periodic memory refreshing</li> <li>large capacity, because the row and column multiplexed address lines, a single memory module can achieve GB level capacity</li> </ol>"},{"location":"hardware/sdram.en/#standards","title":"Standards","text":"<p>SDRAM-related standards are developed by JEDEC:</p> <ul> <li>JESD79F: DDR SDRAM</li> <li>JESD79-2F: DDR2 SDRAM</li> <li>JESD79-3F: DDR3 SDRAM</li> <li>JESD79-4D: DDR4 SDRAM</li> <li>JESD79-5B: DDR5 SDRAM</li> </ul> <p>In addition to the DDR series, there is also a low-power LPDDR series:</p> <ul> <li>JESD209B: LPDDR SDRAM</li> <li>JESD209-2F: LPDDR2 SDRAM</li> <li>JESD209-3C: LPDDR3 SDRAM</li> <li>JESD209-4D: LPDDR4 SDRAM</li> <li>JESD209-5B: LPDDR5 SDRAM</li> </ul> <p>High-performance HBM is also based on SDRAM technology:</p> <ul> <li>JESD235D: HBM</li> <li>JESD238A: HBM3</li> </ul> <p>GDDR SGRAM series:</p> <ul> <li>SDRAM3.11.5.8 R16.01: GDDR4 SGRAM</li> <li>JESD212C.01: GDDR5 SGRAM</li> <li>JESD232A.01: GDDR5X SGRAM</li> <li>JESD250D: GDDR6 SGRAM</li> </ul> <p>The following is an introduction to DDR series SDRAM.</p>"},{"location":"hardware/sdram.en/#concepts","title":"Concepts","text":"<p>DDR SDRAM is often given a number to represent its performance, such as 2133 for DDR4-2133, and sometimes you will see the term 2400 MT/s. Both refer to the maximum number of data transfers per second that SDRAM can perform in millions of transfers per second. Since SDRAM uses DDR to transfer two copies of data per clock cycle, the actual clock frequency is divided by two, so 2133 MT/s corresponds to a clock frequency of 1066 MHz.</p> <p>Sometimes you will also see PC4-21333 written to describe memory sticks, where $21333 = 8*2666$, which is 2666 MT/s, multiplied by 8 because the data bit width of a DDR memory module is 64 bits, so the theoretical memory bandwidth of a 2666 MT/s memory stick is $2666 \\mathrm{(MT/s)} * 64 \\mathrm{(bits)} / 8 \\mathrm{(bits/byte)} = 21333 \\mathrm{(MB/s)}$. But there are times when PC4 is followed by MT/s.</p> <p>Different generations of memory modules have different locations for the notches on the bottom pins, so it is impossible to insert them in the wrong place.</p>"},{"location":"hardware/sdram.en/#structure","title":"Structure","text":"<p>Taking DDR4 SDRAM as an example, the following is the structure of the MT40A1G8 chip:</p> <p> </p> Block diagram of MT40A1G8 (Source Micron Datasheet) <p>Each memory array is 65536 x 128 x 64, called a Bank; four Banks form a Bank Group, and there are 4 Bank Groups, so the total capacity is $65536 * 128 * 64 * 4 * 4 = 8 \\mathrm{Gb}$.</p> <p>Specifically, in the 65536 x 128 x 64 specification of each memory array, 65536 represents the number of rows, each row holds $128 * 64 = 8192$ bits of data, and is also the bit width of the transfer between <code>Sense amplifier</code> and <code>I/O gating, DM mask logic</code> in Figure 1. Each row has 1024 columns, and each column holds 8 bits of data (corresponding to the 8 in <code>1 Gig x 8</code>). Since the DDR4 prefetch width is 8n, an access takes out 8 columns of data, or 64 bits. So each row has 128 of 64 bits, which is the source of the 128 x 64 in the 65536 x 128 x 64 above.</p>"},{"location":"hardware/sdram.en/#prefetch","title":"Prefetch","text":"<p>SDRAM has the concept of prefetch, which is how many times the bit width of the data is fetched out in one read. For example, the <code>1 Gig x 8</code> SDRAM above has an I/O data bit width of 8 bits (see the <code>DQ</code> signal on the right). This is because the IO frequency of DDR4 SDRAM is very high, e.g. 3200 MT/s corresponds to an I/O clock frequency of 1600 MHz, while the actual memory array frequency is not as high. The actual memory array frequency is that high, but operates at 400 MHz, so to make up for the difference in frequency, the data is read 8 times the bit width at a time. This is reflected in the I/O, which is a single read operation to get 8 copies of data, i.e. burst length of 8, which is transferred in four clock cycles via DDR.</p> <p>Interestingly, DDR4 memory modules are 64 bits wide, so a single read operation yields $64 * 8 / 8 = 64B$ of data, which is exactly the size of the CPU cache lines.</p> <p>DDR5 increases the prefetch to 16n, which is why you see much larger data rate numbers for DDR5: DDR4 prefetch is 8n, DDR5 prefetch is 16n at the same memory array frequency, so the I/O frequency is doubled and the data rate is doubled. At the same time, in order to maintain the burst size of 64 bytes, the bit width of each channel in DDR5 module is 32 bits, each memory module provides two channels.</p>"},{"location":"hardware/sdram.en/#access-patterns","title":"Access Patterns","text":"<p>SDRAM has a special access pattern in that its memory array can only be accessed in complete rows at a time. In the previous example, a row has 8192 bits of data, but a read or write operation involves only 64 bits of data, so a read operation requires:</p> <ol> <li>the first step is to retrieve the entire row where the data is located</li> <li>in the second step, read the desired data in the row</li> </ol> <p>But each bank can only take out one row at a time, so if the two reads involve different rows, then you need to:</p> <ol> <li>the first step is to take out the whole row where the data of the first read is located</li> <li>in the second step, read the desired data in the row</li> <li>step 3, put the first read row back</li> <li>step 4, take out the whole row where the data of the second read is located</li> <li>step 5, read the desired data in the row</li> </ol> <p>In SDRAM terms, the first and fourth steps are called Activate, the second and fifth steps are called Read, and the third step is called Precharge.</p> <p>SDRAM defines the following timing parameters that describe the timing requirements between these three operations:</p> <ol> <li>CL (CAS Latency): the time between sending a read request and outputting the first data</li> <li>RCD (ACT to internal read or write delay time): the time from Activate to the next read or write request</li> <li>RP (RRE command period): the time between sending a Precharge command and the next command</li> <li>RAS (ACT to PRE command period): the time between Activate and Precharge</li> <li>RC (ACT to ACT or REF command period): the time between Activate and the next Activate or Refresh</li> <li>RTP (Internal READ Command to PRECHARGE command delay): the time between Read and Precharge</li> </ol> <p>So the above process requires the following time requirements:</p> <ol> <li>the first step, Activate, take out the first row</li> <li>the second step, Read, the time between the first and second steps should be separated by RCD, and the time to wait for CL from Read to send address to get data</li> <li>step 3, Precharge, the time between step 1 and step 3 should be separated by RAS, and the time between step 2 and step 3 should be separated by RTP</li> <li>step 4, Activate, take out the second row, the time between step 1 and step 4 should be separated by RC, and the time between step 3 and step 4 should be separated by RP</li> <li>step 5, Read, the time between step 4 and step 5 should be separated by RCD, the time to wait for CL from Read to send address to get data</li> </ol> <p>Based on this process, the following conclusions can be drawn:</p> <ol> <li>accessing data with locality will have better performance, requiring only continuous Read, reducing the number of activates and precharges</li> <li>constantly accessing data from different rows will lead to a back and forth Activate, Read, Precharge cycle</li> <li>accessing the row and accessing the data in the row are divided into two phases, and both phases can use the same address signals, making the total memory capacity large</li> <li>if the access always hits the same row, the transfer rate can be close to the theoretical one, as shown in Figure 2</li> </ol> <p> </p> DDR3 Sequential Reads within the Same Row (Source JESD9-3F DDR3) <p>To alleviate the performance loss caused by the second point, the concept of Bank is introduced: each Bank can take out a row, so if you want to access the data in different Banks, while the first Bank is doing Activate/Precharge, the other Banks can do other operations, thus covering the performance loss caused by row misses.</p>"},{"location":"hardware/sdram.en/#bank-group","title":"Bank Group","text":"<p>DDR4 introduces the concept of Bank Group compared to DDR3. Quoting Is the time of page hit in the same bank group tccd_S or tccd_L?, memory array frequency is increased compared to DDR3, so a perfect sequential read cannot be achieved within the same row, i.e. two adjacent read operations need to be separated by 5 cycles, while each read transfers 4 cycles of data with a maximum utilization of 80%, see the following figure:</p> <p> </p> DDR4 Nonconsecutive Reads (Source JESD9-4D DDR4) <p>In order to solve this bottleneck, the difference of DDR4 in the core part is that there is an additional <code>Global I/O gating</code>, and each Bank Group has its own <code>I/O gating, DM mask logic</code>, the following draws the storage part of DDR3 and DDR4 respectively, for comparison:</p> <p> </p> DDR3 SDRAM Storage Part (Source Micron Datasheet) <p> </p> DDR4 SDRAM Storage Part (Source Micron Datasheet) <p>This means that DDR4 can have multiple Bank Groups reading at the same time and pipelining the output. For example, if the first Bank Group reads the data and finishes transferring it in four cycles on the I/O, immediately the second Bank Group read picks up and transfers another four cycles of data, with the following waveform:</p> <p> </p> DDR4 Consecutive Reads from Different Banks (Source JESD9-4D DDR4) <p>In the above figure, the first read request is initiated at time T0, the second request is initiated at time T4, T11-T15 get the data of the first request, followed by T15-T19 get the data of the second request. This solves the problem caused by the increased frequency.</p>"},{"location":"hardware/sdram.en/#storage-hierarchy","title":"Storage Hierarchy","text":"<p>As mentioned above, the hierarchy within DDR SDRAM, from largest to smallest, is as follows</p> <ol> <li>Bank Group: introduced in DDR4</li> <li>Bank: Each Bank has only one Row activated at the same time</li> <li>Row: Activate/Precharge unit</li> <li>Column: each Column holds n cells, n is the bit width of SDRAM</li> <li>Cell: each cell holds 1 bit of data</li> </ol> <p>In fact, there are several layers outside the SDRAM:</p> <ol> <li>Channel: the number of channels of the processor's memory controller</li> <li>Module: there can be multiple memory sticks connected to the same Channel</li> <li>Rank: multiple DDR SDRAM chips are stitched together in width, one to four Ranks can be put down on a Module. these Ranks share the bus, each Rank has its own chip select signal CS_n, which is actually stitching SDRAM chips in depth</li> <li>Chip: A DDR SDRAM chip; such as a 64-bit wide Rank, is made by using 8 x8 chips stitched together across the width</li> </ol> <p>As you can see, adjacent memory levels differ by a power of two, so the mapping from the memory address to these levels is an interception of different intervals in the address, each corresponding to a subscript of the level. This is why the MB and GB units of memory size are 1024-based.</p> <p>If you study SDRAM memory controllers, such as MIG on Xilinx FPGA, one can find that it can be configured with different address mapping methods, e.g:</p> <ul> <li>ROW_COLUMN_BANK</li> <li>ROW_BANK_COLUMN</li> <li>BANK_ROW_COLUMN</li> <li>ROW_COLUMN_LRANK_BANK</li> <li>ROW_LRANK_COLUMN_BANK</li> <li>ROW_COLUMN_BANK_INTLV</li> </ul> <p>As you can imagine, different address mapping methods will have different performance for different access modes. For sequential memory accesses, the ROW_COLUMN_BANK method is more suitable, because sequential accesses are distributed to different banks, so the performance will be better.</p>"},{"location":"hardware/sdram.en/#interface","title":"Interface","text":"<p>The following pins are drawn for DDR3 and DDR4:</p> <p> </p> DDR3 and DDR4 Schematics <p>The differences between DDR3 and DDR4:</p> <ol> <li>address signal: DDR3 has A0-A14, DDR4 has A0-A17, where A14-A16 are multiplexed pins</li> <li>DDR4 introduces Bank Group, so there are extra pins BA0-BA1.</li> <li>RAS_n, CAS_n and WE_n in DDR3 are reused as A14-A16 in DDR4</li> <li>DDR4 adds an additional ACT_n control signal</li> </ol>"},{"location":"hardware/sdram.en/#topology","title":"Topology","text":"<p>In order to obtain a larger bit width, many SDRAM chips can be seen on the memory modules, which are stitched together by width to form a 64-bit data width. At this point, from the PCB alignment point of view, the data lines are directly connected to each SDRAM chip and can be connected relatively easily; however, other signals, such as address and control signals, need to be connected to all SDRAM chips, and it is difficult to ensure equal distances to each SDRAM chip while ensuring signal integrity in the confined space.</p>"},{"location":"hardware/sdram.en/#fly-by-topology","title":"Fly-by topology","text":"<p>Therefore, the address and control signals are actually connected in series (Fly-by-topology), which is the connection on the right in the following figure:</p> <p> </p> Two types of signal connections for SDRAM (Source Versal ACAP PCB Design User Guide (UG863)) <p>But the data signals (DQ, DQS and DM) are still connected point-to-point to the SDRAM in parallel (left side of the figure above). This presents a problem: with different SDRAM chips, the data and clock deviations are different, and the data may arrive at about the same time, but the clock has an increasing delay:</p> <pre><code>{\n  signal:\n    [\n      { name: \"clock\", wave: \"1010101010\"},\n      { name: \"data\", wave: \"01.0..101.\"},\n      { name: \"clock_dram0\", wave: \"1010101010\", phase: -0.2},\n      { name: \"data_dram0\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram1\", wave: \"1010101010\", phase: -0.4},\n      { name: \"data_dram1\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram2\", wave: \"1010101010\", phase: -0.6},\n      { name: \"data_dram2\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram3\", wave: \"1010101010\", phase: -0.8},\n      { name: \"data_dram3\", wave: \"01.0..101.\", phase: -0.1},\n    ]\n}\n</code></pre> SDRAM Clock Skewing Problem <p>In order for SDRAMs at different locations to see the same waveform, a variable delay needs to be added to the data signal on the memory controller side, and this delay needs to be calibrated to know what it is.</p>"},{"location":"hardware/sdram.en/#clam-shell-topology","title":"Clam-shell topology","text":"<p>In addition to Fly-by topology, Clam-shell topology may be used in some scenarios to save PCB area. Clam-shell is actually a visual representation of having SDRAM chips on both the front and back sides of the PCB:</p> <p> </p> Clam-shell Topology (Source Versal ACAP Programmable Network on Chip and Integrated Memory Controller LogiCORE IP Product Guide (PG313) ) <p>This design makes use of the space on the back of the PCB, but it also brings new problems: intuitively, if both chips are placed on the front of the PCB, it is easier to connect them if the pin order is close to the same, and there will not be many crossings. However, if one is on the front and the other on the back, the pin order is reversed and it is more difficult to connect.</p> <p>The solution is to modify the order of the pins and swap the functions of some pins to make the alignment simpler:</p> <p> </p> SDRAM Pin Mirroring (SourceVersal ACAP PCB Design User Guide (UG863)) <p>The table deliberately selects pins to swap that do not affect special functions, making most functions, even with swapped pins, work properly. For example, if the Row address is swapped by a few bits, it does not affect reading or writing data, although the physical storage place is changed. However, for Mode Register Set operations, the memory controller must swap the order of the bits itself and swap them back when connecting on the PCB to ensure the correct result on the SDRAM side.</p> <p>In addition, Clam-shell Topology has one cs_n chip select signal on the front and one on the back, but this is different from Dual Rank: Dual Rank has the same number of DRAM chips on both front and back, sharing the address, data and control signals, and only one side of the DRAM chips on the bus is in use at the same time, which has the advantage of doubling the memory capacity. The advantage is that the memory capacity is doubled and the two ranks can mask each other's latency; while the two cs_n of Clam Shell Topology are designed to assign either front or back side to Mode Register Set operations, while most of the rest of the operations can work on both front and back sides at the same time because their data signals are not shared.</p>"},{"location":"hardware/sdram.en/#calibration","title":"Calibration","text":"<p>SDRAM calibration, or SDRAM training, mainly consists of the following steps:</p> <ol> <li>Write Leveling</li> <li>Read Leveling</li> </ol>"},{"location":"hardware/sdram.en/#write-leveling","title":"Write Leveling","text":"<p>Write Leveling addresses the problem of inconsistent latency caused by Fly-by-Topology, which causes SDRAM to see the wrong signal. Specifically, the purpose of Write Leveling is to synchronize the DQS signal received by the SDRAM chip with the CK signal:</p> <pre><code>{\n  signal:\n    [\n      { name: \"ck\", wave: \"1010101010\"},\n      { name: \"dqs\", wave: \"0.101010..\"},\n      { name: \"ck_dram0\", wave: \"1010101010\", phase: -0.2},\n      { name: \"dqs_dram0\", wave: \"0.101010..\", phase: -0.2},\n      { name: \"ck_dram1\", wave: \"1010101010\", phase: -0.4},\n      { name: \"dqs_dram1\", wave: \"0.101010..\", phase: -0.4},\n      { name: \"ck_dram2\", wave: \"1010101010\", phase: -0.6},\n      { name: \"dqs_dram2\", wave: \"0.101010..\", phase: -0.6},\n      { name: \"ck_dram3\", wave: \"1010101010\", phase: -0.8},\n      { name: \"dqs_dram3\", wave: \"0.101010..\", phase: -0.8},\n    ]\n}\n</code></pre> DQS and CK synchronization to be achieved by Write Leveling <p>To achieve this, the idea is to continuously adjust the delay of the DQS output, observe the behavior at different delays, and find a delay value that synchronizes the DQS with the CK. In order to do Write Leveling with the memory controller, the SDRAM can enter a Write Leveling Mode, where the SDRAM samples the CK on the rising edge of the DQS and then outputs the result to the DQ. In this case, different DQS delays will result in different results:</p> <pre><code>{\n  signal:\n    [\n      { name: \"ck\", wave: \"1010101010\"},\n      { name: \"dqs\", wave: \"10........\"},\n      { name: \"ck_dram\", wave: \"1010101010\", phase: -0.2},\n      { name: \"dqs_delay0\", wave: \"010.......\", phase: -0.4},\n      { name: \"dq_delay0\", wave: \"0.........\", phase: -0.4},\n      { name: \"dqs_delay1\", wave: \"010.......\", phase: -0.9},\n      { name: \"dq_delay1\", wave: \"0.........\", phase: -0.9},\n      { name: \"dqs_delay2\", wave: \"010.......\", phase: -1.4},\n      { name: \"dq_delay2\", wave: \"01........\", phase: -1.4},\n      { name: \"dqs_delay3\", wave: \"010.......\", phase: -2.0},\n      { name: \"dq_delay3\", wave: \"01........\", phase: -2.0},\n    ]\n}\n</code></pre> Results of DQS sampling of CK with different DQS delays <p>In the above figure, for both delay0 and delay1, DQS samples the negative half-cycle of CK, while for delay2 and delay3, DQS samples the positive half-cycle of CK, so if you want to synchronize DQS with CK, you should set the DQS delay between delay1 and delay2.</p> <p>To summarize the Write Leveling algorithm:</p> <ol> <li>Set the SDRAM to Write Leveling mode, where the SDRAM will use DQS for CK and output the result to DQ</li> <li>The controller enumerates the latency of DQS, reads out the DQ results for each DQS latency, and gets a 0-1 string, for example: <code>00111111111111111111110000</code>, that is, as the latency increases, it samples to 0, then to 1, and finally to 0 again</li> <li>find a DQS delay that causes the DQ to change from 0 to 1, then the DQS will be synchronized with the CK according to this delayed output</li> <li>Set the SDRAM to end Write Leveling mode</li> </ol> <p>This process is performed separately for each DQS signal. The following is an example of litex's SDRAM calibration code to implement a simplified process in C code:</p> <p>```c title=\"int sdram_write_leveling_scan(int delays, int loops, int show)\" linenums=\"1\" / Turn on the Write Leveling mode of SDRAM */ sdram_write_leveling_on();</p> <p>/ Loop each SDRAM module / for(i=0;i&lt;SDRAM_PHY_MODULES;i++) {   / Loop each DQS signal /   for (dq_line = 0; dq_line &lt; DQ_COUNT; dq_line++) {     / Set initial DQS delay to 0 /     sdram_leveling_action(i, dq_line, write_rst_delay);</p> <pre><code>/* Loop each DQS delay */\nfor(j=0;j&lt;err_ddrphy_wdly;j++) {\n  int zero_count = 0;\n  int one_count = 0;\n\n  /* Sample in loop */\n  for (k=0; k&lt;loops; k++) {\n    /* Send DQS pulse\uff1a00000001 */\n    /* SDRAM sample CK */\n    ddrphy_wlevel_strobe_write(1);\n\n    cdelay(100);\n    /* Read DQ from memory controller */\n    csr_rd_buf_uint8(sdram_dfii_pix_rddata_addr(0), buf, DFII_PIX_DATA_BYTES);\n\n    /* Count the number of 1's and 0's */\n    if (buf[SDRAM_PHY_MODULES-1-i] != 0)\n      one_count++;\n    else\n      zero_count++;\n  }\n  if (one_count &gt; zero_count)\n    /* Consider that DQS samples the positive half-cycle of CK */\n    taps_scan[j] = 1;\n  else\n    /* Consider that DQS samples the negative half-cycle of CK */\n    taps_scan[j] = 0;\n\n  /* Increases the DQS delay  */\n  sdram_leveling_action(i, dq_line, write_inc_delay);\n}\n\n/* Find the longest sequence of consecutive 1's */\none_window_active = 0;\none_window_start = 0;\none_window_count = 0;\none_window_best_start = 0;\none_window_best_count = -1;\nfor(j=0;j&lt;err_ddrphy_wdly+1;j++) {\n  if (one_window_active) {\n    if ((j == err_ddrphy_wdly) || (taps_scan[j] == 0)) {\n      /* Ended a continuous sequence of 1's */\n      one_window_active = 0;\n      one_window_count = j - one_window_start;\n      /* Record the length and position of the longest consecutive 1's */\n      if (one_window_count &gt; one_window_best_count) {\n        one_window_best_start = one_window_start;\n        one_window_best_count = one_window_count;\n      }\n    }\n  } else {\n    /* Find the beginning of consecutive 1's */\n    if (j != err_ddrphy_wdly &amp;&amp; taps_scan[j]) {\n      one_window_active = 1;\n      one_window_start = j;\n    }\n  }\n}\n\n/* The delay to be found is the start of a consecutive sequence of 1's */\ndelays[i] = one_window_best_start;\n</code></pre> <p>} }</p> <p>/ Turn off the Write Leveling mode of SDRAM / sdram_write_leveling_off(); ```</p>"},{"location":"hardware/sdram.en/#read-leveling","title":"Read Leveling","text":"<p>In the Write Leveling stage, the synchronization of signals at SDRAM is solved. However, for read operations, data is sent from SDRAM to the controller, and the time of arrival of different data to the controller may be different, so it is also necessary to calibrate the read operation.</p> <p>To determine if the read data is correct, the practice is to first write known data and then read it out. If the read data is exactly the same as the written data, then the read operation can be performed correctly.</p> <p>The implementation is similar to Write Leveling in that it enumerates the delays, performs some operations, and observes the output at each delay:</p> <ol> <li>write data (or use SDRAM's function of generating a fixed pattern output)</li> <li>set the latency to loop from 0</li> <li>at each latency setting, read out the data and compare the read results with the previously written data</li> <li>count which delay conditions, the read data is accurate. accurate is recorded as 1, inaccurate is recorded as 0</li> <li>find the accurate range of 1, and take the midpoint as the final calibration result</li> </ol> <p>Note that here is no longer to find the place of 0-1 change. Write Leveling to find 0-1 change is to synchronize, synchronization is exactly the place of 0-1 change; while the purpose of Read Leveling is to read out the correct data. It is known that there is a continuous delay interval, where it can read out the correct data. Even if the interval is shifted due to changes in temperature and other conditions, it will still work because enough margin is retained by taking the midpoint of the interval. The step of taking the midpoint is also called Read Centering.</p>"},{"location":"hardware/sdram.en/#hbm","title":"HBM","text":"<p>HBM is short for High Bandwidth Memory, and its technology is also based on SDRAM, so it is placed here for comparison with DDR SDRAM.</p> <p>HBM stacks multiple SDRAMs, provides multiple channels and increases the bit width compared to the pDDR SDRAM. For example Micron HBM with ECC, stacks 4/8 layers of DRAM, provides 8 channels, each with a 128-bit data width. At 3200 MT/s, the maximum data transfer rate of an HBM chip is:</p> <p>$$ 3200 \\mathrm{(MT/s)} * 128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(Channels)} = 3276.8 \\mathrm{(Gb/s)} = 409.6 \\mathrm{(GB/s)} $$</p> <p>So a single HBM has the transfer rate of 16 traditional DDR SDRAMs, thanks to 8 channels and double the bit width. Each channel has a bit width of 128 bits, so it can be thought of as two 64-bit SDRAMs in parallel, either as one 128-bit SDRAM or, in Pseudo Channel mode, as two SDRAMs that share address and command signals.</p> <p>Of course, the high bandwidth of HBM comes at the cost of a large number of pins. According to the HBM3 JESD238A standard, each channel requires 120 pins, for a total of 16 channels (HBM2 has 8 channels, 128 bits per channel; HBM3 has 16 channels, 64 bits per channel), plus the remaining 52 pins, which adds up to 1972 pins. So the connection to the processor is generally made on the Silicon Interposer, rather than the traditional PCB routing:</p> <p> </p> HBM Packaging (Source A 1.2V 20nm 307GB/s HBM DRAM with At-Speed Wafer-Level I/O Test Scheme and Adaptive Refresh Considering Temperature Distribution) <p>So in the HBM3 standard, the pin is described as a microbump. HBM can be understood figuratively as taking the memory modules that were originally inserted into the motherboard and disassembling them, keeping only the chips, stacking them vertically and turning them into an HBM Die, which is then tightly connected to the CPU. But on the other hand, the density goes up, and the price gets more expensive. The scalability also went down, as you couldn't place as many HBM dies on the motherboard as you could with DDR SDRAM.</p> <p>The following is an analysis of the memory bandwidth of some typical systems with HBM:</p> <p>Xilinx's Virtex Ultrascale Plus HBM FPGA provides a bandwidth of $1800 \\mathrm{(MT/s)} * 128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(Channels)} = 230.4 \\mathrm{(GB/s)}$. If two HBMs are used, that's 460.8 GB/s. Exposed to the FPGA logic are 16 256-bit AXI3 ports with an AXI frequency of 450 MHz and a memory frequency of 900 MHz. As you can see, each AXI3 corresponds to a pseudo channel of HBM. Each pseudo channel is 64 bits, but the AXI port is 256 bits. This is because going from 450MHz to 900MHz at the same rate, plus DDR, equates to a quadrupling of the frequency, so the bit width has to be quadrupled from 64 bits to 256 bits accordingly.</p> <p>The 40GB PCIe version of the A100 graphics card uses five 8 GBs of HBM memory running at 1215 MHz, so the memory bandwidth is $1215 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\mathrm{(bits/ transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 1555 \\mathrm{(GB/s)}$, which matches the Datasheet. The Memory bus width in the A100 Datasheet is actually calculated by adding up all the channel bit widths: $128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(channels)} * 5 \\mathrm{(stacks)} = 5120 \\mathrm{(bits)}$.</p> <p>The 80GB PCIe version of the A100 graphics card upgrades HBM2 to HBM2e, and the memory clock frequency is upgraded to 1512 MHz, so the memory bandwidth is $1512 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\mathrm{( bits/transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 1935 \\mathrm{(GB/s)}$, which coincides with Datasheet.</p> <p>The 80GB SXM5 version of the H100 graphics card upgrades HBM to HBM3, and the memory capacity remains the same at 80GB, but the clock frequency is increased to 2619 MHz, at which point the memory bandwidth is $2619 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\ mathrm{(bits/transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 3352 \\mathrm{(GB/s)}$.</p>"},{"location":"hardware/sdram.en/#dram-cell","title":"DRAM Cell","text":"<p>Data in DRAM is stored in capacitors. The internal structure of a typical 1T DRAM Cell is as follows:</p> <p> </p> 1T DRAM Cell Internal Structure (Source Berkeley EECS 151/251A Spring 2019)"},{"location":"hardware/sdram.en/#comparison-of-ddr-variants","title":"Comparison of DDR variants","text":"<p>A comparison of DDR, LPDDR, GDDR and HBM is given below:</p> DDR4 DDR5 LPDDR4 LPDDR5 GDDR5 GDDR6 HBM2 Channels 1 2 2 2 2 2 8 Bits per Channel 64 32 16 16/32 16 16 128 Data rate (MT/s) 3200 5600 4266 6400 9000 24000 2400 Bandwidth (GB/s) 25.6 GB/s 44.8 GB/s 17.1 GB/s 25.6 GB/s 36 GB/s 96 GB/s 307 GB/s <p>Data rates are based on the highest performance available:</p> <ul> <li>DDR4: Micron 3200 MT/s</li> <li>DDR5: Micron 5600 MT/s</li> <li>LPDDR4: Samsung 4266 MT/s</li> <li>LPDDR5: Samsung 6400 MT/s</li> <li>GDDR5: Samsung 9000 MT/s</li> <li>GDDR6: Samsung 24000 MT/s</li> <li>HBM2: Samsung 2400 MT/s</li> <li>HBM2E: Micron 3200 MT/s</li> </ul>"},{"location":"hardware/sdram.en/#related-reading","title":"Related Reading","text":"<ul> <li>DDR4 Bank Groups in Embedded Applications</li> <li>DDR4 Tutorial - Understanding the Basics</li> <li>DDR5/4/3/2: How Memory Density and Speed Increased with each Generation of DDR</li> <li>DDR5 vs DDR4 DRAM \u2013 All the Advantages &amp; Design Challenges</li> <li>Understanding DDR3 Write Leveling and Read Leveling</li> <li>Will HBM replace DDR and become Computer Memory?</li> </ul>"},{"location":"hardware/sdram.en/#acknowledgement","title":"Acknowledgement","text":"<p>The English version is kindly translated with the help of DeepL Translator.</p>"},{"location":"hardware/sdram.zh/","title":"SDRAM","text":""},{"location":"hardware/sdram.zh/#_1","title":"\u7279\u70b9","text":"<p>SDRAM \u7684\u7279\u70b9\uff1a</p> <ol> <li>\u6210\u672c\u8f83\u4f4e\uff0c\u6bcf\u4e2a 1 bit cell \u53ea\u9700\u8981\u4e00\u4e2a CMOS \u6676\u4f53\u7ba1</li> <li>\u63a5\u53e3\u590d\u6742\uff0c\u8bbf\u95ee\u6570\u636e\u524d\u9700\u8981\u9996\u5148\u6fc0\u6d3b\u4e00\u4e2a row\uff0c\u518d\u8bfb\u53d6 row \u5185\u7684\u6570\u636e</li> <li>\u63a7\u5236\u5668\u4e5f\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u5b9a\u671f\u5237\u65b0\u5185\u5b58</li> <li>\u5bb9\u91cf\u8f83\u5927\uff0c\u7531\u4e8e row \u548c column \u590d\u7528\u4e86\u5730\u5740\u7ebf\uff0c\u5355\u5185\u5b58\u6761\u53ef\u4ee5\u505a\u5230 GB \u7ea7\u522b\u7684\u5bb9\u91cf</li> </ol>"},{"location":"hardware/sdram.zh/#_2","title":"\u6807\u51c6","text":"<p>SDRAM \u76f8\u5173\u6807\u51c6\u7531 JEDEC \u5236\u5b9a\uff1a</p> <ul> <li>JESD79F: DDR SDRAM</li> <li>JESD79-2F: DDR2 SDRAM</li> <li>JESD79-3F: DDR3 SDRAM</li> <li>JESD79-4D: DDR4 SDRAM</li> <li>JESD79-5B: DDR5 SDRAM</li> </ul> <p>\u9664\u4e86 DDR \u7cfb\u5217\uff0c\u8fd8\u6709\u4f4e\u529f\u8017\u7684 LPDDR \u7cfb\u5217\uff1a</p> <ul> <li>JESD209B: LPDDR SDRAM</li> <li>JESD209-2F: LPDDR2 SDRAM</li> <li>JESD209-3C: LPDDR3 SDRAM</li> <li>JESD209-4D: LPDDR4 SDRAM</li> <li>JESD209-5B: LPDDR5 SDRAM</li> </ul> <p>\u9ad8\u6027\u80fd\u5e38\u7528\u7684 HBM \u4e5f\u57fa\u4e8e SDRAM \u6280\u672f\uff1a</p> <ul> <li>JESD235D: HBM</li> <li>JESD238A: HBM3</li> </ul> <p>\u8fd8\u6709 GDDR SGRAM \u7cfb\u5217\uff1a</p> <ul> <li>SDRAM3.11.5.8 R16.01: GDDR4 SGRAM</li> <li>JESD212C.01: GDDR5 SGRAM</li> <li>JESD232A.01: GDDR5X SGRAM</li> <li>JESD250D: GDDR6 SGRAM</li> </ul> <p>\u4e0b\u9762\u4e3b\u8981\u4ecb\u7ecd DDR \u7cfb\u5217\u7684 SDRAM\u3002</p>"},{"location":"hardware/sdram.zh/#_3","title":"\u6982\u5ff5","text":"<p>DDR SDRAM \u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u6570\u5b57\u6765\u4ee3\u8868\u5b83\u7684\u6027\u80fd\uff0c\u4f8b\u5982 DDR4-2133 \u4e2d\u7684 2133\uff0c\u6709\u65f6\u5019\u4f1a\u89c1\u5230 2400 MT/s \u7684\u8bf4\u6cd5\u3002\u8fd9\u4e24\u8005\u8bf4\u7684\u90fd\u662f SDRAM \u6bcf\u79d2\u6700\u591a\u8fdb\u884c\u7684\u6570\u636e\u4f20\u8f93\u6b21\u6570\uff0c\u5355\u4f4d\u662f Million Transfers per Second\u3002\u7531\u4e8e SDRAM \u91c7\u7528 DDR \u8fdb\u884c\u4f20\u8f93\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u4f20\u8f93\u4e24\u4efd\u6570\u636e\uff0c\u6240\u4ee5\u5b9e\u9645\u7684\u65f6\u949f\u9891\u7387\u8981\u9664\u4ee5\u4e8c\uff0c\u4f8b\u5982 2133 MT/s \u5bf9\u5e94\u65f6\u949f\u9891\u7387\u5c31\u662f 1066 MHz\u3002</p> <p>\u6709\u65f6\u8fd8\u4f1a\u89c1\u5230 PC4-21333 \u7684\u5199\u6cd5\u7528\u4e8e\u63cf\u8ff0\u5185\u5b58\u6761\uff0c\u8fd9\u91cc\u7684 $21333=8*2666$\uff0c\u5bf9\u5e94\u4e86 2666 MT/s\uff0c\u4e58\u4ee5 8 \u662f\u56e0\u4e3a DDR \u5185\u5b58\u6761\u7684\u6570\u636e\u4f4d\u5bbd\u662f 64 \u4f4d\uff0c\u90a3\u4e48\u4e00\u4e2a 2666 MT/s \u7684\u5185\u5b58\u6761\u5176\u7406\u8bba\u5185\u5b58\u5e26\u5bbd\u5c31\u662f $2666 \\mathrm{(MT/s)} * 64 \\mathrm{(bits)} / 8 \\mathrm{(bits/byte)} = 21333 \\mathrm{(MB/s)}$\u3002\u4f46\u4e5f\u6709\u4e9b\u65f6\u5019 PC4 \u540e\u9762\u8ddf\u7740\u7684\u5c31\u662f MT/s\u3002</p> <p>\u4e0d\u540c\u4ee3\u6b21\u7684\u5185\u5b58\u6761\uff0c\u4e0b\u9762\u5f15\u811a\u7684\u7f3a\u53e3\u4f4d\u7f6e\u4e0d\u540c\uff0c\u6240\u4ee5\u662f\u65e0\u6cd5\u63d2\u9519\u5730\u65b9\u7684\u3002</p>"},{"location":"hardware/sdram.zh/#_4","title":"\u7ed3\u6784","text":"<p>\u4ee5 DDR4 SDRAM \u4e3a\u4f8b\uff0c\u4e0b\u9762\u662f MT40A1G8 \u82af\u7247\u7684\u7ed3\u6784\u56fe\uff1a</p> <p> </p> MT40A1G8 \u7684\u7ed3\u6784\u6846\u56fe\uff08\u56fe\u6e90 Micron Datasheet\uff09 <p>\u4fdd\u5b58\u6570\u636e\u7684\u662f\u4e2d\u95f4\u7684 Memory array\uff0c\u6bcf\u4e2a Memory array \u7684\u89c4\u683c\u662f 65536 x 128 x 64\uff0c\u79f0\u4e3a\u4e00\u4e2a Bank\uff1b\u56db\u4e2a Bank \u7ec4\u6210\u4e00\u4e2a Bank Group\uff0c\u4e00\u5171\u6709 4 \u4e2a Bank Group\uff0c\u6240\u4ee5\u603b\u5bb9\u91cf\u662f $65536 * 128 * 64 * 4 * 4 = 8 \\mathrm{Gb}$\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u6bcf\u4e2a Memory array \u7684 65536 x 128 x 64 \u7684\u89c4\u683c\u91cc\uff0c65536 \u8868\u793a row \u7684\u6570\u91cf\uff0c\u6bcf\u4e2a row \u4fdd\u5b58\u4e86 $128 * 64 = 8192$ \u4f4d\u7684\u6570\u636e\uff0c\u540c\u65f6\u4e5f\u662f\u56fe 1 \u4e2d <code>Sense amplifier</code> \u5230 <code>I/O gating, DM mask logic</code> \u4e4b\u95f4\u4f20\u8f93\u7684\u4f4d\u5bbd\u3002\u6bcf\u4e2a row \u6709 1024 \u4e2a column\uff0c\u6bcf\u4e2a column \u4fdd\u5b58\u4e86 8 \u4f4d\u7684\u6570\u636e\uff08\u5bf9\u5e94 <code>1 Gig x 8</code> \u4e2d\u7684 8\uff09\u3002\u7531\u4e8e DDR4 \u7684 prefetch \u5bbd\u5ea6\u662f 8n\uff0c\u6240\u4ee5\u4e00\u6b21\u8bbf\u95ee\u4f1a\u53d6\u51fa 8 \u4e2a column \u7684\u6570\u636e\uff0c\u4e5f\u5c31\u662f 64 \u4f4d\u3002\u90a3\u4e48\u6bcf\u4e2a row \u5c31\u662f 128 \u4e2a 64 \u4f4d\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684 65536 x 128 x 64 \u7684 128 x 64 \u7684\u6765\u6e90\u3002</p>"},{"location":"hardware/sdram.zh/#prefetch","title":"Prefetch","text":"<p>SDRAM \u6709 Prefetch \u7684\u6982\u5ff5\uff0c\u542b\u4e49\u5c31\u662f\u4e00\u6b21\u8bfb\u53d6\u4f1a\u53d6\u51fa\u4f4d\u5bbd\u7684\u591a\u5c11\u500d\u7684\u6570\u636e\u51fa\u6765\u3002\u4f8b\u5982\u4e0a\u9762\u7684 <code>1 Gig x 8</code> \u7684 SDRAM\uff0c\u5176 I/O \u6570\u636e\u4f4d\u5bbd\u662f 8 \u4f4d\uff08\u89c1\u53f3\u4fa7\u7684 <code>DQ</code> \u4fe1\u53f7\uff09\u3002\u4f46\u5b9e\u9645\u4e0a\u4ece <code>Global I/O Gating</code> \u51fa\u6765\u7684\u6570\u636e\u662f 64 \u4f4d\uff0c\u5dee\u4e86\u4e00\u4e2a 8 \u7684\u56e0\u5b50\uff0c\u8fd9\u5c31\u662f DDR4 \u7684 8n Prefetch\u3002\u8fd9\u662f\u56e0\u4e3a\uff0cDDR4 SDRAM \u7684 IO \u9891\u7387\u662f\u5f88\u9ad8\u7684\uff0c\u4f8b\u5982 3200 MT/s \u5bf9\u5e94\u7684 I/O \u65f6\u949f\u9891\u7387\u662f 1600 MHz\uff0c\u800c\u5b9e\u9645\u7684 Memory array \u9891\u7387\u505a\u4e0d\u5230\u8fd9\u4e48\u9ad8\uff0c\u800c\u662f\u5de5\u4f5c\u5728 400 MHz\uff0c\u4e3a\u4e86\u5f25\u8865\u9891\u7387\u7684\u5dee\u8ddd\uff0c\u4e00\u6b21\u8bfb\u53d6 8 \u500d\u4f4d\u5bbd\u7684\u6570\u636e\u3002\u4f53\u73b0\u5728 I/O \u4e0a\u5c31\u662f\u4e00\u6b21\u8bfb\u64cd\u4f5c\u5f97\u5230 8 \u4efd\u6570\u636e\uff0c\u4e5f\u5c31\u662f Burst Length \u4e3a 8\uff0c\u901a\u8fc7 DDR \u65b9\u5f0f\u5728\u56db\u4e2a\u65f6\u949f\u5468\u671f\u5185\u4f20\u8f93\u3002</p> <p>\u6709\u8da3\u7684\u662f\uff0cDDR4 \u5185\u5b58\u6761\u4f4d\u5bbd\u662f 64\uff0c\u90a3\u4e48\u4e00\u6b21\u8bfb\u64cd\u4f5c\u5c31\u5f97\u5230 $64 * 8 / 8 = 64B$ \u7684\u6570\u636e\uff0c\u6b63\u597d\u662f\u5f88\u591a CPU \u7f13\u5b58\u884c\u7684\u5927\u5c0f\u3002</p> <p>DDR5 \u628a Prefetch \u63d0\u9ad8\u5230\u4e86 16n\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u770b\u5230\u7684 DDR5 \u7684\u6570\u636e\u901f\u7387\u6570\u5b57\u5927\u4e86\u5f88\u591a\uff1a\u540c\u6837\u7684 Memory array \u9891\u7387\u4e0b\uff0cDDR4 \u7684 Prefetch \u662f 8n\uff0cDDR5 \u7684 Prefetch \u662f 16n\uff0c\u4e8e\u662f I/O \u9891\u7387\u7ffb\u500d\uff0c\u6570\u636e\u901f\u7387\u4e5f\u7ffb\u500d\u3002\u540c\u65f6\u4e3a\u4e86\u7ee7\u7eed\u4fdd\u6301\u4e00\u4e2a Burst \u662f 64 \u5b57\u8282\uff0cDDR5 \u5185\u5b58\u6761\u6bcf\u4e2a channel \u4f4d\u5bbd\u662f 32 \u4f4d\uff0c\u6bcf\u4e2a\u5185\u5b58\u6761\u63d0\u4f9b\u4e24\u4e2a channel\u3002</p>"},{"location":"hardware/sdram.zh/#_5","title":"\u8bbf\u95ee\u6a21\u5f0f","text":"<p>SDRAM \u7684\u8bbf\u95ee\u6a21\u5f0f\u6bd4\u8f83\u7279\u522b\uff0c\u5b83\u7684 Memory array \u6bcf\u6b21\u53ea\u80fd\u4ee5\u6574\u4e2a row \u4e3a\u5355\u4f4d\u8fdb\u884c\u5b58\u53d6\u3002\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u4e2a row \u6709 8192 \u4f4d\u7684\u6570\u636e\uff0c\u4f46\u662f\u4e00\u6b21\u8bfb\u6216\u5199\u64cd\u4f5c\u53ea\u6d89\u53ca 64 \u4f4d\u7684\u6570\u636e\uff0c\u56e0\u6b64\u4e00\u6b21\u8bfb\u64cd\u4f5c\u9700\u8981\uff1a</p> <ol> <li>\u7b2c\u4e00\u6b65\uff0c\u5148\u628a\u6570\u636e\u6240\u5728\u7684\u6574\u4e2a row \u53d6\u51fa\u6765</li> <li>\u7b2c\u4e8c\u6b65\uff0c\u5728 row \u91cc\u8bfb\u51fa\u60f3\u8981\u7684\u6570\u636e</li> </ol> <p>\u4f46\u662f\u6bcf\u4e2a Bank \u540c\u65f6\u53ea\u80fd\u53d6\u51fa\u6765\u4e00\u4e2a row\uff0c\u6240\u4ee5\u5982\u679c\u4e24\u6b21\u8bfb\u6d89\u53ca\u5230\u4e86\u4e0d\u540c\u7684 row\uff0c\u90a3\u4e48\u9700\u8981\uff1a</p> <ol> <li>\u7b2c\u4e00\u6b65\uff0c\u5148\u628a\u7b2c\u4e00\u6b21\u8bfb\u7684\u6570\u636e\u6240\u5728\u7684\u6574\u4e2a row \u53d6\u51fa\u6765</li> <li>\u7b2c\u4e8c\u6b65\uff0c\u5728 row \u91cc\u8bfb\u51fa\u60f3\u8981\u7684\u6570\u636e</li> <li>\u7b2c\u4e09\u6b65\uff0c\u628a\u7b2c\u4e00\u6b21\u8bfb\u7684 row \u653e\u56de\u53bb</li> <li>\u7b2c\u56db\u6b65\uff0c\u628a\u7b2c\u4e8c\u6b21\u8bfb\u7684\u6570\u636e\u6240\u5728\u7684\u6574\u4e2a row \u53d6\u51fa\u6765</li> <li>\u7b2c\u4e94\u6b65\uff0c\u5728 row \u91cc\u8bfb\u51fa\u60f3\u8981\u7684\u6570\u636e</li> </ol> <p>\u7528 SDRAM \u7684\u672f\u8bed\u6765\u8bb2\uff0c\u7b2c\u4e00\u6b65\u548c\u7b2c\u56db\u6b65\u53eb\u505a Activate\uff0c\u7b2c\u4e8c\u90e8\u548c\u7b2c\u4e94\u6b65\u53eb\u505a Read\uff0c\u7b2c\u4e09\u6b65\u53eb\u505a Precharge\u3002</p> <p>SDRAM \u5b9a\u4e49\u4e86\u4e0b\u5217\u7684\u65f6\u5e8f\u53c2\u6570\uff0c\u63cf\u8ff0\u4e86\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u7684\u65f6\u5e8f\u8981\u6c42\uff1a</p> <ol> <li>CL\uff08CAS Latency\uff09\uff1a\u53d1\u9001\u8bfb\u8bf7\u6c42\uff0c\u5230\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u65f6\u95f4</li> <li>RCD\uff08ACT to internal read or write delay time\uff09\uff1a\u4ece Activate \u5230\u4e0b\u4e00\u4e2a\u8bfb\u6216\u5199\u8bf7\u6c42\u7684\u65f6\u95f4</li> <li>RP\uff08RRE command period\uff09\uff1a\u53d1\u9001 Precharge \u547d\u4ee4\u5230\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684\u65f6\u95f4</li> <li>RAS\uff08ACT to PRE command period\uff09\uff1a\u4ece Activate \u5230 Precharge \u4e4b\u95f4\u7684\u65f6\u95f4</li> <li>RC\uff08ACT to ACT or REF command period\uff09\uff1a\u4ece Activate \u5230\u4e0b\u4e00\u4e2a Activate \u6216\u8005 Refresh \u4e4b\u95f4\u7684\u65f6\u95f4</li> <li>RTP\uff08Internal READ Command to PRECHARGE command delay\uff09\uff1a\u4ece Read \u5230 Precharge \u4e4b\u95f4\u7684\u65f6\u95f4</li> </ol> <p>\u4e8e\u662f\u4e0a\u9762\u7684\u6d41\u7a0b\u9700\u8981\u7684\u65f6\u95f4\u8981\u6c42\u5c31\u662f\uff1a</p> <ol> <li>\u7b2c\u4e00\u6b65\uff0cActivate\uff0c\u53d6\u51fa\u7b2c\u4e00\u4e2a row</li> <li>\u7b2c\u4e8c\u6b65\uff0cRead\uff0c\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e8c\u6b65\u4e4b\u95f4\u8981\u9694 RCD \u7684\u65f6\u95f4\uff0c\u4ece Read \u53d1\u9001\u5730\u5740\u5230\u5f97\u5230\u6570\u636e\u8981\u7b49\u5f85 CL \u7684\u65f6\u95f4</li> <li>\u7b2c\u4e09\u6b65\uff0cPrecharge\uff0c\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e09\u6b65\u4e4b\u95f4\u8981\u9694 RAS \u7684\u65f6\u95f4\uff0c\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u4e4b\u95f4\u8981\u9694 RTP \u7684\u65f6\u95f4</li> <li>\u7b2c\u56db\u6b65\uff0cActivate\uff0c\u53d6\u51fa\u7b2c\u4e8c\u4e2a row\uff0c\u7b2c\u4e00\u6b65\u548c\u7b2c\u56db\u6b65\u4e4b\u95f4\u8981\u9694 RC \u7684\u65f6\u95f4\uff0c\u7b2c\u4e09\u6b65\u548c\u7b2c\u56db\u6b65\u4e4b\u95f4\u8981\u9694 RP \u7684\u65f6\u95f4</li> <li>\u7b2c\u4e94\u6b65\uff0cRead\uff0c\u7b2c\u56db\u6b65\u548c\u7b2c\u4e94\u6b65\u4e4b\u95f4\u8981\u9694 RCD \u7684\u65f6\u95f4\uff0c\u4ece Read \u53d1\u9001\u5730\u5740\u5230\u5f97\u5230\u6570\u636e\u8981\u7b49\u5f85 CL \u7684\u65f6\u95f4</li> </ol> <p>\u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u7ed3\u8bba\uff1a</p> <ol> <li>\u8bbf\u95ee\u5e26\u6709\u5c40\u90e8\u6027\u7684\u6570\u636e\u6027\u80fd\u4f1a\u66f4\u597d\uff0c\u53ea\u9700\u8981\u8fde\u7eed\u5730\u8fdb\u884c Read\uff0c\u51cf\u5c11 Activate \u548c Precharge \u6b21\u6570</li> <li>\u4e0d\u65ad\u8bbf\u95ee\u4e0d\u540c\u7684 row \u7684\u6570\u636e\uff0c\u4f1a\u5bfc\u81f4\u9700\u8981\u6765\u56de\u5730 Activate\uff0cRead\uff0cPrecharge \u5faa\u73af</li> <li>\u8bbf\u95ee row \u548c\u8bbf\u95ee row \u4e2d\u7684\u6570\u636e\u5206\u6210\u4e24\u4e2a\u9636\u6bb5\uff0c\u4e24\u4e2a\u9636\u6bb5\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u5730\u5740\u4fe1\u53f7\uff0c\u4f7f\u5f97\u5185\u5b58\u603b\u5bb9\u91cf\u5f88\u5927</li> <li>\u800c\u5982\u679c\u8bbf\u95ee\u603b\u662f\u547d\u4e2d\u540c\u4e00\u4e2a row\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u63a5\u8fd1\u7406\u8bba\u7684\u4f20\u8f93\u901f\u7387\uff0c\u5982\u56fe 2</li> </ol> <p> </p> DDR3 \u540c\u4e00\u4e2a Row \u5185\u7684\u7684\u8fde\u7eed\u8bfb\uff08\u56fe\u6e90 JESD9-3F DDR3\uff09 <p>\u4e3a\u4e86\u7f13\u89e3\u7b2c\u4e8c\u70b9\u5e26\u6765\u7684\u6027\u80fd\u635f\u5931\uff0c\u5f15\u5165\u4e86 Bank \u7684\u6982\u5ff5\uff1a\u6bcf\u4e2a Bank \u90fd\u53ef\u4ee5\u53d6\u51fa\u6765\u4e00\u4e2a row\uff0c\u90a3\u4e48\u5982\u679c\u8981\u8bbf\u95ee\u4e0d\u540c Bank \u91cc\u7684\u6570\u636e\uff0c\u5728\u7b2c\u4e00\u4e2a Bank \u8fdb\u884c Activate/Precharge \u7684\u65f6\u5019\uff0c\u5176\u4ed6 Bank \u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u4ece\u800c\u63a9\u76d6 row \u672a\u547d\u4e2d\u5e26\u6765\u7684\u6027\u80fd\u635f\u5931\u3002</p>"},{"location":"hardware/sdram.zh/#bank-group","title":"Bank Group","text":"<p>DDR4 \u76f8\u6bd4 DDR3 \u5f15\u5165\u4e86 Bank Group \u7684\u6982\u5ff5\u3002\u5f15\u7528 \u540c\u4e00 bank group page hit \u7684\u65f6\u95f4\u662f tccd_S \u8fd8\u662f tccd_L? - Ricky Li \u7684\u56de\u7b54 - \u77e5\u4e4e \u7684\u89c2\u70b9\uff1aDDR4 \u7684 Memory array \u9891\u7387\u76f8\u6bd4 DDR3 \u63d0\u9ad8\uff0c\u56e0\u6b64\u540c\u4e00\u4e2a Row \u5185\u65e0\u6cd5\u5b9e\u73b0\u5b8c\u7f8e\u7684\u8fde\u7eed\u8bfb\u53d6\uff0c\u5373\u4e24\u4e2a\u76f8\u90bb\u7684\u8bfb\u64cd\u4f5c\u9700\u8981\u9694 5 \u4e2a\u5468\u671f\uff0c\u800c\u6bcf\u6b21\u8bfb\u4f20\u8f93 4 \u4e2a\u5468\u671f\u7684\u6570\u636e\uff0c\u5229\u7528\u7387\u6700\u9ad8 80%\uff0c\u89c1\u4e0b\u56fe\uff1a</p> <p> </p> DDR4 \u7684\u975e\u8fde\u7eed\u8bfb\uff08\u56fe\u6e90 JESD9-4D DDR4\uff09 <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u74f6\u9888\uff0cDDR4 \u5728\u6838\u5fc3\u90e8\u5206\u7684\u533a\u522b\u5c31\u662f\u591a\u4e86\u4e00\u4e2a <code>Global I/O gating</code>\uff0c\u5e76\u4e14\u6bcf\u4e2a Bank Group \u90fd\u6709\u81ea\u5df1\u7684 <code>I/O gating, DM mask logic</code>\uff0c\u4e0b\u9762\u5206\u522b\u753b\u51fa DDR3 \u548c DDR4 \u7684\u5b58\u50a8\u90e8\u5206\uff0c\u8fdb\u884c\u5bf9\u6bd4\uff1a</p> <p> </p> DDR3 SDRAM \u5b58\u50a8\u90e8\u5206\uff08\u56fe\u6e90 Micron Datasheet\uff09 <p> </p> DDR4 SDRAM \u5b58\u50a8\u90e8\u5206\uff08\u56fe\u6e90 Micron Datasheet\uff09 <p>\u8fd9\u610f\u5473\u7740 DDR4 \u53ef\u4ee5\u591a\u4e2a Bank Group \u540c\u65f6\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u5e76\u4e14\u6d41\u6c34\u7ebf\u5f0f\u8f93\u51fa\uff0c\u4f8b\u5982\u7b2c\u4e00\u4e2a Bank Group \u8bfb\u53d6\u4e86\u6570\u636e\uff0c\u5728 I/O \u4e0a\u7528\u56db\u4e2a\u5468\u671f\u4f20\u8f93\u5b8c\u6570\u636e\uff0c\u7acb\u9a6c\u7b2c\u4e8c\u4e2a Bank Group \u8bfb\u53d6\u7684\u6570\u636e\u5c31\u63a5\u4e0a\u4e86\uff0c\u53c8\u4f20\u8f93\u4e86\u56db\u4e2a\u5468\u671f\u7684\u6570\u636e\uff0c\u6ce2\u5f62\u5982\u4e0b\u56fe\uff1a</p> <p> </p> DDR4 \u4e0d\u540c Bank Group \u7684\u8fde\u7eed\u8bfb\uff08\u56fe\u6e90 JESD9-4D DDR4\uff09 <p>\u4e0a\u56fe\u4e2d T0 \u65f6\u523b\u53d1\u8d77\u7b2c\u4e00\u4e2a\u8bfb\u8bf7\u6c42\uff0cT4 \u65f6\u523b\u53d1\u8d77\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff0cT11-T15 \u5f97\u5230\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u7d27\u63a5\u7740 T15-T19 \u5f97\u5230\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u7684\u6570\u636e\u3002\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u9891\u7387\u63d0\u9ad8\u5e26\u6765\u7684\u95ee\u9898\u3002</p>"},{"location":"hardware/sdram.zh/#_6","title":"\u5b58\u50a8\u5c42\u6b21","text":"<p>\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\uff0c\u5728 DDR SDRAM \u5185\u90e8\u7684\u5c42\u6b21\u4ece\u5927\u5230\u5c0f\u6709\uff1a</p> <ol> <li>Bank Group\uff1aDDR4 \u5f15\u5165</li> <li>Bank\uff1a\u6bcf\u4e2a Bank \u540c\u65f6\u53ea\u6709\u4e00\u4e2a Row \u88ab\u6fc0\u6d3b</li> <li>Row\uff1aActivate/Precharge \u7684\u5355\u4f4d</li> <li>Column\uff1a\u6bcf\u4e2a Column \u4fdd\u5b58 n \u4e2a Cell\uff0cn \u662f SDRAM \u7684\u4f4d\u5bbd</li> <li>Cell\uff1a\u6bcf\u4e2a Cell \u4fdd\u5b58 1 bit \u7684\u6570\u636e</li> </ol> <p>\u5b9e\u9645\u4e0a\uff0cSDRAM \u5916\u90e8\u8fd8\u6709\u4e00\u4e9b\u5c42\u6b21\uff1a</p> <ol> <li>Channel\uff1a\u5904\u7406\u5668\u7684\u5185\u5b58\u63a7\u5236\u5668\u7684\u901a\u9053\u6570\u91cf</li> <li>Module\uff1a\u5185\u5b58\u6761\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u5185\u5b58\u6761\u8fde\u63a5\u5230\u540c\u4e00\u4e2a Channel \u4e0a</li> <li>Rank\uff1a\u591a\u4e2a DDR SDRAM \u82af\u7247\u5728\u5bbd\u5ea6\u4e0a\u62fc\u63a5\u8d77\u6765\uff0c\u4e00\u4e2a Module \u4e0a\u53ef\u4ee5\u653e\u4e0b\u4e00\u5230\u56db\u4e2a Rank\uff0c\u8fd9\u4e9b Rank \u5171\u4eab\u603b\u7ebf\uff0c\u6bcf\u4e2a Rank \u90fd\u6709\u81ea\u5df1\u7684\u7247\u9009\u4fe1\u53f7 CS_n\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u6df1\u5ea6\u4e0a\u62fc\u63a5 SDRAM \u82af\u7247</li> <li>Chip\uff1a\u4e5f\u5c31\u662f\u4e00\u4e2a DDR SDRAM \u82af\u7247\uff0c\u4f8b\u5982\u4e00\u4e2a\u6570\u636e\u4f4d\u5bbd\u662f 64 \u4f4d\u7684 Rank\uff0c\u662f\u4f7f\u7528 8 \u4e2a x8 \u7684 Chip \u5728\u5bbd\u5ea6\u4e0a\u62fc\u63a5\u800c\u6210</li> </ol> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u76f8\u90bb\u5b58\u50a8\u5c42\u6b21\u4e4b\u95f4\u90fd\u5dee\u4e00\u4e2a\u4e8c\u7684\u5e42\u6b21\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4ece\u5185\u5b58\u5730\u5740\u5230\u8fd9\u4e9b\u5b58\u50a8\u5c42\u6b21\u7684\u6620\u5c04\uff0c\u5c31\u662f\u622a\u53d6\u5730\u5740\u4e2d\u7684\u4e0d\u540c\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u5bf9\u5e94\u4e86\u4e00\u4e2a\u5c42\u6b21\u7684\u4e0b\u6807\u3002\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u5185\u5b58\u5927\u5c0f\u7684 MB\u3001GB \u7528\u7684\u662f 1024 \u8fdb\u5236\u3002</p> <p>\u5982\u679c\u7814\u7a76 SDRAM \u5185\u5b58\u63a7\u5236\u5668\uff0c\u6bd4\u5982 Xilinx FPGA \u4e0a\u7684 MIG\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u53ef\u4ee5\u914d\u7f6e\u4e0d\u540c\u7684\u5730\u5740\u6620\u5c04\u65b9\u5f0f\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>ROW_COLUMN_BANK</li> <li>ROW_BANK_COLUMN</li> <li>BANK_ROW_COLUMN</li> <li>ROW_COLUMN_LRANK_BANK</li> <li>ROW_LRANK_COLUMN_BANK</li> <li>ROW_COLUMN_BANK_INTLV</li> </ul> <p>\u5c31\u662f\u5c06\u5730\u5740\u7684\u4e0d\u540c\u90e8\u5206\u6620\u5c04\u5230 DRAM \u7684\u51e0\u4e2a\u5730\u5740\uff1aRow\uff0cColumn\uff0cBank\u3002\u53ef\u4ee5\u60f3\u8c61\uff0c\u4e0d\u540c\u7684\u5730\u5740\u6620\u5c04\u65b9\u5f0f\u9488\u5bf9\u4e0d\u540c\u7684\u8bbf\u5b58\u6a21\u5f0f\u4f1a\u6709\u4e0d\u540c\u7684\u6027\u80fd\u3002\u5bf9\u4e8e\u8fde\u7eed\u7684\u5185\u5b58\u8bbf\u95ee\uff0cROW_COLUMN_BANK \u65b9\u5f0f\u662f\u6bd4\u8f83\u9002\u5408\u7684\uff0c\u56e0\u4e3a\u8fde\u7eed\u7684\u8bbf\u95ee\u4f1a\u5206\u5e03\u5230\u4e0d\u540c\u7684 Bank \u4e0a\uff0c\u8fd9\u6837\u6027\u80fd\u5c31\u4f1a\u66f4\u597d\u3002</p>"},{"location":"hardware/sdram.zh/#_7","title":"\u63a5\u53e3","text":"<p>\u4e0b\u9762\u753b\u51fa\u4e86 DDR3 \u548c DDR4 \u7684\u5f15\u811a\uff1a</p> <p> </p> DDR3 \u548c DDR4 \u539f\u7406\u56fe <p>DDR3 \u548c DDR4 \u7684\u4e0d\u540c\u70b9\uff1a</p> <ol> <li>\u5730\u5740\u4fe1\u53f7\uff1aDDR3 \u662f A0-A14\uff0cDDR4 \u662f A0-A17\uff0c\u5176\u4e2d A14-A16 \u590d\u7528\u4e86\u5f15\u811a</li> <li>DDR4 \u5f15\u5165\u4e86 Bank Group\uff0c\u6240\u4ee5\u591a\u51fa\u4e86 BA0-BA1 \u5f15\u811a</li> <li>DDR3 \u4e2d\u7684 RAS_n\u3001CAS_n \u548c WE_n \u5728 DDR4 \u4e2d\u88ab\u590d\u7528\u4e3a\u4e86 A14-A16</li> <li>DDR4 \u989d\u5916\u6dfb\u52a0\u4e86 ACT_n \u63a7\u5236\u4fe1\u53f7</li> </ol>"},{"location":"hardware/sdram.zh/#_8","title":"\u62d3\u6251","text":"<p>\u4e3a\u4e86\u83b7\u5f97\u66f4\u5927\u7684\u4f4d\u5bbd\uff0c\u5728\u5185\u5b58\u6761\u4e0a\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u4e2a SDRAM \u82af\u7247\uff0c\u901a\u8fc7\u5bbd\u5ea6\u62fc\u63a5\u7684\u65b9\u5f0f\u5f62\u6210\u4e00\u4e2a 64 \u4f4d\u7684\u6570\u636e\u5bbd\u5ea6\u3002\u6b64\u65f6\u4ece PCB \u8d70\u7ebf\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u6570\u636e\u7ebf\u76f4\u63a5\u8fde\u63a5\u5230\u5404\u4e2a SDRAM \u82af\u7247\u4e0a\uff0c\u53ef\u4ee5\u76f8\u5bf9\u5bb9\u6613\u5730\u8fde\u63a5\uff1b\u4f46\u662f\u5176\u4ed6\u4fe1\u53f7\uff0c\u6bd4\u5982\u5730\u5740\u4fe1\u53f7\u548c\u63a7\u5236\u4fe1\u53f7\uff0c\u9700\u8981\u8fde\u63a5\u5230\u6240\u6709 SDRAM \u82af\u7247\u4e0a\uff0c\u5728\u5c40\u9650\u7684\u7a7a\u95f4\u91cc\uff0c\u5982\u679c\u8981\u4fdd\u8bc1\u5230\u5404\u4e2a SDRAM \u82af\u7247\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u540c\u65f6\u4fdd\u8bc1\u4fe1\u53f7\u5b8c\u6574\u6027\u662f\u5f88\u56f0\u96be\u7684\u3002</p>"},{"location":"hardware/sdram.zh/#fly-by-topology","title":"Fly-by topology","text":"<p>\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\u5730\u5740\u548c\u63a7\u5236\u4fe1\u53f7\u662f\u91c7\u7528\u4e86\u4e32\u8054\u7684\u65b9\u5f0f\u8fde\u63a5\uff08Fly-by topology\uff09\uff0c\u4e5f\u5c31\u662f\u4e0b\u56fe\u7684\u53f3\u8fb9\u7684\u8fde\u63a5\u65b9\u5f0f\uff1a</p> <p> </p> SDRAM \u7684\u4e24\u79cd\u4fe1\u53f7\u8fde\u63a5\u65b9\u5f0f\uff08\u56fe\u6e90 Versal ACAP PCB Design User Guide (UG863)\uff09 <p>\u4f46\u662f\u6570\u636e\u4fe1\u53f7\uff08DQ\u3001DQS \u548c DM\uff09\u4f9d\u7136\u662f\u5e76\u884c\u70b9\u5bf9\u70b9\u8fde\u63a5\u5230 SDRAM \u4e0a\u7684\uff08\u4e0a\u56fe\u5de6\u4fa7\uff09\u3002\u8fd9\u5c31\u51fa\u73b0\u4e86\u95ee\u9898\uff1a\u4e0d\u540c\u7684 SDRAM \u82af\u7247\uff0c\u6570\u636e\u548c\u65f6\u949f\u7684\u504f\u5dee\u4e0d\u540c\uff0c\u6570\u636e\u53ef\u80fd\u5dee\u4e0d\u591a\u65f6\u95f4\u5230\uff0c\u4f46\u662f\u65f6\u949f\u7684\u5ef6\u8fdf\u8d8a\u6765\u8d8a\u5927\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"clock\", wave: \"1010101010\"},\n      { name: \"data\", wave: \"01.0..101.\"},\n      { name: \"clock_dram0\", wave: \"1010101010\", phase: -0.2},\n      { name: \"data_dram0\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram1\", wave: \"1010101010\", phase: -0.4},\n      { name: \"data_dram1\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram2\", wave: \"1010101010\", phase: -0.6},\n      { name: \"data_dram2\", wave: \"01.0..101.\", phase: -0.1},\n      { name: \"clock_dram3\", wave: \"1010101010\", phase: -0.8},\n      { name: \"data_dram3\", wave: \"01.0..101.\", phase: -0.1},\n    ]\n}\n</code></pre> SDRAM \u7684\u65f6\u949f\u504f\u79fb\u95ee\u9898 <p>\u4e3a\u4e86\u8ba9\u5904\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u7684 SDRAM \u770b\u5230\u540c\u6837\u7684\u6ce2\u5f62\uff0c\u9700\u8981\u5728\u5185\u5b58\u63a7\u5236\u5668\u4e00\u4fa7\u7ed9\u6570\u636e\u4fe1\u53f7\u52a0\u4e0a\u53ef\u53d8\u7684\u5ef6\u8fdf\uff0c\u8fd9\u4e2a\u5ef6\u8fdf\u9700\u8981\u7ecf\u8fc7\u6821\u51c6\uff0c\u624d\u80fd\u77e5\u9053\u662f\u591a\u5c11\u3002</p>"},{"location":"hardware/sdram.zh/#clam-shell-topology","title":"Clam-shell topology","text":"<p>\u9664\u4e86 Fly-by topology\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u4e3a\u4e86\u8282\u7701 PCB \u9762\u79ef\uff0c\u8fd8\u53ef\u80fd\u4f1a\u4f7f\u7528 Clam-shell topology\u3002Clam-shell \u662f\u8d1d\u58f3\u7684\u610f\u601d\uff0c\u8d1d\u58f3\u6709\u4e0a\u4e0b\u4e24\u4e2a\u90e8\u5206\u5408\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u5176\u5b9e Clam-shell topology \u5c31\u662f\u5f62\u8c61\u5730\u8868\u793a\u5728 PCB \u7684\u6b63\u9762\u548c\u80cc\u9762\u90fd\u6709 SDRAM \u82af\u7247\u7684\u60c5\u5f62\uff1a</p> <p> </p> Clam-shell Topology\uff08\u56fe\u6e90Versal ACAP Programmable Network on Chip and Integrated Memory Controller LogiCORE IP Product Guide (PG313) \uff09 <p>\u8fd9\u79cd\u8bbe\u8ba1\u5229\u7528\u4e86 PCB \u80cc\u9762\u7684\u7a7a\u95f4\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u65b0\u7684\u95ee\u9898\uff1a\u76f4\u89c2\u5730\u8bb2\uff0c\u5982\u679c\u4e24\u4e2a\u82af\u7247\u90fd\u653e\u5728 PCB \u7684\u6b63\u9762\uff0c\u8981\u8fde\u7ebf\u7684\u8bdd\uff0c\u4fdd\u8bc1\u5f15\u811a\u987a\u5e8f\u63a5\u8fd1\u4e00\u81f4\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u8fde\u63a5\uff0c\u4e0d\u4f1a\u6709\u5f88\u591a\u4ea4\u53c9\u7684\u5730\u65b9\u3002\u4f46\u5982\u679c\u4e00\u4e2a\u5728\u6b63\u9762\uff0c\u53e6\u4e00\u4e2a\u5728\u80cc\u9762\uff0c\u5f15\u811a\u7684\u987a\u5e8f\u5c31\u5012\u8f6c\u8fc7\u6765\u4e86\uff0c\u8fde\u7ebf\u7684\u65f6\u5019\u5c31\u6bd4\u8f83\u56f0\u96be\u3002</p> <p>\u89e3\u51b3\u7684\u529e\u6cd5\u662f\uff0c\u4fee\u6539\u5f15\u811a\u7684\u987a\u5e8f\uff0c\u628a\u4e00\u4e9b\u5f15\u811a\u7684\u529f\u80fd\u8fdb\u884c\u5bf9\u8c03\uff0c\u4f7f\u5f97\u8d70\u7ebf\u66f4\u52a0\u7b80\u5355\uff1a</p> <p> </p> SDRAM \u5f15\u811a\u955c\u50cf\uff08\u56fe\u6e90Versal ACAP PCB Design User Guide (UG863)\uff09 <p>\u8868\u683c\u4e2d\u7279\u610f\u6311\u9009\u4e86\u4e00\u4e9b\u4e0d\u5f71\u54cd\u7279\u6b8a\u529f\u80fd\u7684\u5f15\u811a\u6765\u4ea4\u6362\uff0c\u4f7f\u5f97\u5927\u90e8\u5206\u529f\u80fd\uff0c\u5373\u4f7f\u4ea4\u6362\u4e86\u5f15\u811a\uff0c\u4e5f\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u4f8b\u5982 Row \u5730\u5740\u4ea4\u6362\u4e86\u51e0\u4e2a\u4f4d\uff0c\u867d\u7136\u7269\u7406\u4e0a\u4fdd\u5b58\u7684\u5730\u65b9\u53d8\u4e86\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u8bfb\u5199\u6570\u636e\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e Mode Register Set \u64cd\u4f5c\uff0c\u5fc5\u987b\u8981\u5185\u5b58\u63a7\u5236\u5668\u81ea\u884c\u4ea4\u6362\u4f4d\u7684\u987a\u5e8f\uff0c\u5728 PCB \u4e0a\u8fde\u63a5\u65f6\u518d\u4ea4\u6362\u56de\u6765\uff0c\u624d\u80fd\u4fdd\u8bc1\u5728 SDRAM \u4e00\u4fa7\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002</p> <p>\u6b64\u5916\uff0cClam-shell Topology \u7684\u6b63\u9762\u548c\u80cc\u9762\u5404\u6709\u4e00\u4e2a cs_n \u7247\u9009\u4fe1\u53f7\uff0c\u4f46\u662f\u8fd9\u548c Dual Rank \u4e0d\u540c\uff1aDual Rank \u662f\u6b63\u9762\u548c\u80cc\u9762\u90fd\u6709\u540c\u6837\u6570\u91cf\u7684 DRAM \u82af\u7247\uff0c\u5171\u4eab\u5730\u5740\u4fe1\u53f7\u3001\u6570\u636e\u4fe1\u53f7\u548c\u63a7\u5236\u4fe1\u53f7\uff0c\u603b\u7ebf\u4e0a\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4fa7\u7684 DRAM \u82af\u7247\u5728\u4f7f\u7528\uff0c\u597d\u5904\u662f\u5185\u5b58\u5bb9\u91cf\u7ffb\u500d\uff0c\u5e76\u4e14\u4e24\u4e2a rank \u53ef\u4ee5\u4e92\u76f8\u63a9\u76d6\u5ef6\u8fdf\uff1b\u800c Clam Shell Topology \u7684\u4e24\u4e2a cs_n \u662f\u4e3a\u4e86\u7ed9 Mode Register Set \u64cd\u4f5c\u6307\u5b9a\u6b63\u9762\u6216\u80cc\u9762\uff0c\u800c\u5176\u4f59\u7684\u5927\u90e8\u5206\u64cd\u4f5c\uff0c\u53ef\u4ee5\u6b63\u9762\u548c\u80cc\u9762\u540c\u65f6\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6570\u636e\u4fe1\u53f7\u5e76\u6ca1\u6709\u5171\u4eab\u3002</p>"},{"location":"hardware/sdram.zh/#_9","title":"\u6821\u51c6","text":"<p>SDRAM \u6821\u51c6\uff0c\u6216\u8005\u8bf4 SDRAM \u8bad\u7ec3\uff0c\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>Write Leveling</li> <li>Read Leveling</li> </ol>"},{"location":"hardware/sdram.zh/#write-leveling","title":"Write Leveling","text":"<p>Write Leveling \u8981\u89e3\u51b3\u7684\u662f Fly-by Topology \u5e26\u6765\u7684\u5ef6\u8fdf\u4e0d\u4e00\u81f4\uff0c\u5bfc\u81f4 SDRAM \u770b\u5230\u9519\u8bef\u7684\u4fe1\u53f7\u7684\u95ee\u9898\u3002\u5177\u4f53\u5730\u8bb2\uff0cWrite Leveling \u7684\u76ee\u7684\u662f\u8ba9 SDRAM \u82af\u7247\u63a5\u53d7\u5230\u7684 DQS \u4fe1\u53f7\u4e0e CK \u4fe1\u53f7\u540c\u6b65\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"ck\", wave: \"1010101010\"},\n      { name: \"dqs\", wave: \"0.101010..\"},\n      { name: \"ck_dram0\", wave: \"1010101010\", phase: -0.2},\n      { name: \"dqs_dram0\", wave: \"0.101010..\", phase: -0.2},\n      { name: \"ck_dram1\", wave: \"1010101010\", phase: -0.4},\n      { name: \"dqs_dram1\", wave: \"0.101010..\", phase: -0.4},\n      { name: \"ck_dram2\", wave: \"1010101010\", phase: -0.6},\n      { name: \"dqs_dram2\", wave: \"0.101010..\", phase: -0.6},\n      { name: \"ck_dram3\", wave: \"1010101010\", phase: -0.8},\n      { name: \"dqs_dram3\", wave: \"0.101010..\", phase: -0.8},\n    ]\n}\n</code></pre> Write Leveling \u6240\u8981\u8fbe\u5230\u7684 DQS \u4e0e CK \u540c\u6b65\u7684\u6548\u679c <p>\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u601d\u8def\u5c31\u662f\u4e0d\u65ad\u8c03\u6574 DQS \u8f93\u51fa\u7684\u5ef6\u8fdf\uff0c\u89c2\u6d4b\u4e0d\u540c\u5ef6\u8fdf\u4e0b\u7684\u884c\u4e3a\uff0c\u627e\u5230\u4e00\u4e2a DQS \u4e0e CK \u540c\u6b65\u7684\u5ef6\u8fdf\u503c\u3002\u4e3a\u4e86\u914d\u5408\u5185\u5b58\u63a7\u5236\u5668\u505a Write Leveling\uff0cSDRAM \u53ef\u4ee5\u8fdb\u5165\u4e00\u4e2a Write Leveling Mode\uff0c\u5728\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0cSDRAM \u4f1a\u5728 DQS \u7684\u4e0a\u5347\u6cbf\u5bf9 CK \u8fdb\u884c\u91c7\u6837\uff0c\u7136\u540e\u628a\u7ed3\u679c\u8f93\u51fa\u5230 DQ \u4e0a\u3002\u6b64\u65f6\uff0c\u4e0d\u540c\u7684 DQS \u5ef6\u8fdf\u5c31\u4f1a\u5e26\u6765\u4e0d\u540c\u7684\u7ed3\u679c\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"ck\", wave: \"1010101010\"},\n      { name: \"dqs\", wave: \"10........\"},\n      { name: \"ck_dram\", wave: \"1010101010\", phase: -0.2},\n      { name: \"dqs_delay0\", wave: \"010.......\", phase: -0.4},\n      { name: \"dq_delay0\", wave: \"0.........\", phase: -0.4},\n      { name: \"dqs_delay1\", wave: \"010.......\", phase: -0.9},\n      { name: \"dq_delay1\", wave: \"0.........\", phase: -0.9},\n      { name: \"dqs_delay2\", wave: \"010.......\", phase: -1.4},\n      { name: \"dq_delay2\", wave: \"01........\", phase: -1.4},\n      { name: \"dqs_delay3\", wave: \"010.......\", phase: -2.0},\n      { name: \"dq_delay3\", wave: \"01........\", phase: -2.0},\n    ]\n}\n</code></pre> \u4e0d\u540c\u7684 DQS \u5ef6\u8fdf\u4e0b\uff0cDQS \u5bf9 CK \u91c7\u6837\u7684\u7ed3\u679c <p>\u4e0a\u56fe\u4e2d delay0 \u548c delay1 \u4e24\u79cd\u60c5\u51b5\u4e0b\uff0cDQS \u91c7\u6837\u5230\u4e86 CK \u7684\u8d1f\u534a\u5468\u671f\uff0c\u800c delay2 \u548c delay3 \u65f6 DQS \u91c7\u6837\u5230\u4e86 CK \u7684\u6b63\u534a\u5468\u671f\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8981\u8ba9 DQS \u548c CK \u540c\u6b65\uff0c\u5e94\u8be5\u628a DQS \u5ef6\u8fdf\u8bbe\u7f6e\u5728 delay1 \u548c delay2 \u4e4b\u95f4\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b Write Leveling \u7684\u7b97\u6cd5\uff1a</p> <ol> <li>\u8bbe\u7f6e SDRAM \u8fdb\u5165 Write Leveling \u6a21\u5f0f\uff0c\u6b64\u65f6 SDRAM \u4f1a\u4f7f\u7528 DQS \u5bf9 CK \u91c7\u7528\uff0c\u628a\u7ed3\u679c\u8f93\u51fa\u5230 DQ</li> <li>\u63a7\u5236\u5668\u679a\u4e3e DQS \u7684\u5ef6\u8fdf\uff0c\u8bfb\u53d6\u51fa\u6bcf\u4e2a DQS \u5ef6\u8fdf\u4e0b\u7684 DQ \u7ed3\u679c\uff0c\u5f97\u5230\u4e00\u4e2a 0-1 \u4e32\uff0c\u4f8b\u5982\uff1a<code>001111111111111111110000</code>\uff0c\u5373\u968f\u7740\u5ef6\u8fdf\u589e\u5927\uff0c\u5148\u91c7\u6837\u5230 0\uff0c\u518d\u91c7\u6837\u5230 1\uff0c\u6700\u540e\u53c8\u91c7\u6837\u5230 0</li> <li>\u627e\u5230\u4e00\u4e2a DQS \u5ef6\u8fdf\uff0c\u4f7f\u5f97 DQ \u51fa\u73b0\u4e00\u4e2a\u4ece 0 \u5230 1 \u7684\u53d8\u5316\uff0c\u90a3\u4e48\u6309\u7167\u8fd9\u4e2a\u5ef6\u8fdf\u8f93\u51fa\uff0cDQS \u5c31\u4f1a\u4e0e CK \u540c\u6b65</li> <li>\u8bbe\u7f6e SDRAM \u7ed3\u675f Write Leveling \u6a21\u5f0f</li> </ol> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u8981\u5bf9\u6bcf\u4e2a DQS \u4fe1\u53f7\u5206\u522b\u8fdb\u884c\u3002\u4e0b\u9762\u4ee5 litex \u7684 SDRAM \u6821\u51c6\u4ee3\u7801\u4e3a\u4f8b\uff0c\u7528 C \u4ee3\u7801\u5b9e\u73b0\u7b80\u5316\u7684\u6d41\u7a0b\uff1a</p> <p>```c title=\"int sdram_write_leveling_scan(int delays, int loops, int show)\" linenums=\"1\" / \u6253\u5f00 SDRAM \u7684 Write Leveling \u6a21\u5f0f */ sdram_write_leveling_on();</p> <p>/ \u5faa\u73af\u6bcf\u4e2a SDRAM \u5185\u5b58\u6761 / for(i=0;i&lt;SDRAM_PHY_MODULES;i++) {   / \u5faa\u73af\u6bcf\u4e2a DQS \u4fe1\u53f7 /   for (dq_line = 0; dq_line &lt; DQ_COUNT; dq_line++) {     / \u8bbe\u7f6e DQS \u521d\u59cb\u5ef6\u8fdf\u4e3a 0 /     sdram_leveling_action(i, dq_line, write_rst_delay);</p> <pre><code>/* \u5faa\u73af DQS \u5ef6\u8fdf */\nfor(j=0;j&lt;err_ddrphy_wdly;j++) {\n  int zero_count = 0;\n  int one_count = 0;\n\n  /* \u591a\u6b21\u91c7\u6837 */\n  for (k=0; k&lt;loops; k++) {\n    /* \u53d1\u9001 DQS \u5e8f\u5217\uff1a00000001 */\n    /* SDRAM \u5bf9 CK \u8fdb\u884c\u91c7\u6837 */\n    ddrphy_wlevel_strobe_write(1);\n\n    cdelay(100);\n    /* \u4ece\u5185\u5b58\u63a7\u5236\u5668\u4e2d\u8bfb\u51fa DQ \u4e0a\u7684\u6570\u636e */\n    csr_rd_buf_uint8(sdram_dfii_pix_rddata_addr(0), buf, DFII_PIX_DATA_BYTES);\n\n    /* \u7edf\u8ba1 1 \u548c 0 \u7684\u4e2a\u6570 */\n    if (buf[SDRAM_PHY_MODULES-1-i] != 0)\n      one_count++;\n    else\n      zero_count++;\n  }\n  if (one_count &gt; zero_count)\n    /* \u8ba4\u4e3a DQS \u91c7\u6837\u5230\u4e86 CK \u7684\u6b63\u534a\u5468\u671f */\n    taps_scan[j] = 1;\n  else\n    /* \u8ba4\u4e3a DQS \u91c7\u6837\u5230\u4e86 CK \u7684\u8d1f\u534a\u5468\u671f */\n    taps_scan[j] = 0;\n\n  /* \u6bcf\u6b21\u5faa\u73af\u589e\u52a0\u4e00\u6b21 DQS \u5ef6\u8fdf */\n  sdram_leveling_action(i, dq_line, write_inc_delay);\n}\n\n/* \u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u8fde\u7eed 1 \u7684\u5e8f\u5217 */\none_window_active = 0;\none_window_start = 0;\none_window_count = 0;\none_window_best_start = 0;\none_window_best_count = -1;\nfor(j=0;j&lt;err_ddrphy_wdly+1;j++) {\n  if (one_window_active) {\n    if ((j == err_ddrphy_wdly) || (taps_scan[j] == 0)) {\n      /* \u7ed3\u675f\u4e86\u4e00\u6bb5\u8fde\u7eed\u7684 1 */\n      one_window_active = 0;\n      one_window_count = j - one_window_start;\n      /* \u8bb0\u5f55\u6700\u957f\u7684\u8fde\u7eed 1 \u7684\u957f\u5ea6\u548c\u4f4d\u7f6e */\n      if (one_window_count &gt; one_window_best_count) {\n        one_window_best_start = one_window_start;\n        one_window_best_count = one_window_count;\n      }\n    }\n  } else {\n    /* \u627e\u5230\u8fde\u7eed\u7684 1 \u7684\u5f00\u5934 */\n    if (j != err_ddrphy_wdly &amp;&amp; taps_scan[j]) {\n      one_window_active = 1;\n      one_window_start = j;\n    }\n  }\n}\n\n/* \u8981\u627e\u7684\u5ef6\u8fdf\u5c31\u662f\u8fde\u7eed\u7684 1 \u5e8f\u5217\u7684\u5f00\u59cb\u4f4d\u7f6e */\ndelays[i] = one_window_best_start;\n</code></pre> <p>} }</p> <p>/ \u5173\u95ed SDRAM \u7684 Write Leveling \u6a21\u5f0f / sdram_write_leveling_off(); ```</p>"},{"location":"hardware/sdram.zh/#read-leveling","title":"Read Leveling","text":"<p>\u5728 Write Leveling \u9636\u6bb5\uff0c\u89e3\u51b3\u4e86 SDRAM \u5904\u4fe1\u53f7\u7684\u540c\u6b65\u95ee\u9898\u3002\u4f46\u662f\u5bf9\u4e8e\u8bfb\u64cd\u4f5c\uff0c\u6570\u636e\u662f\u4ece SDRAM \u53d1\u9001\u7ed9\u63a7\u5236\u5668\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5230\u8fbe\u63a7\u5236\u5668\u7684\u65f6\u95f4\u53ef\u80fd\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u5bf9\u8bfb\u64cd\u4f5c\u8fdb\u884c\u6821\u51c6\u3002</p> <p>\u4e3a\u4e86\u5224\u65ad\u8bfb\u53d6\u7684\u6570\u636e\u662f\u5426\u6b63\u786e\uff0c\u505a\u6cd5\u662f\u9996\u5148\u5199\u5165\u5df2\u77e5\u7684\u6570\u636e\uff0c\u7136\u540e\u518d\u8bfb\u51fa\u6765\uff0c\u5982\u679c\u8bfb\u53d6\u7684\u6570\u636e\u548c\u5199\u5165\u7684\u6570\u636e\u5b8c\u5168\u4e00\u81f4\uff0c\u5c31\u8bf4\u660e\u53ef\u4ee5\u6b63\u786e\u5730\u8fdb\u884c\u8bfb\u64cd\u4f5c\u3002</p> <p>\u5b9e\u73b0\u601d\u8def\u548c Write Leveling \u7c7b\u4f3c\uff0c\u4e5f\u662f\u679a\u4e3e\u5ef6\u8fdf\uff0c\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u89c2\u5bdf\u6bcf\u4e2a\u5ef6\u8fdf\u4e0b\u7684\u8f93\u51fa\uff1a</p> <ol> <li>\u5199\u5165\u6570\u636e\uff08\u6216\u8005\u7528 SDRAM \u7684\u751f\u6210\u56fa\u5b9a Pattern \u8f93\u51fa\u7684\u529f\u80fd\uff09</li> <li>\u8bbe\u7f6e\u5ef6\u8fdf\u4ece 0 \u5f00\u59cb\u5faa\u73af\uff0c\u4e0d\u65ad\u589e\u5927</li> <li>\u5728\u6bcf\u4e2a\u5ef6\u8fdf\u7684\u8bbe\u5b9a\u4e0b\uff0c\u8bfb\u53d6\u51fa\u6570\u636e\uff0c\u628a\u8bfb\u53d6\u7684\u7ed3\u679c\u4e0e\u4e4b\u524d\u5199\u5165\u7684\u6570\u636e\u8fdb\u884c\u6bd4\u8f83</li> <li>\u7edf\u8ba1\u51fa\u54ea\u4e9b\u5ef6\u8fdf\u6761\u4ef6\u4e0b\uff0c\u8bfb\u53d6\u6570\u636e\u662f\u51c6\u786e\u7684\uff0c\u51c6\u786e\u7684\u8bb0\u4e3a 1\uff0c\u4e0d\u51c6\u786e\u7684\u8bb0\u4e3a 0</li> <li>\u627e\u5230\u8868\u793a\u51c6\u786e\u7684 1 \u7684\u8303\u56f4\uff0c\u53d6\u4e2d\u70b9\u4f5c\u4e3a\u6700\u7ec8\u7684\u6821\u51c6\u7ed3\u679c</li> </ol> <p>\u6ce8\u610f\u8fd9\u91cc\u4e0d\u518d\u662f\u627e\u5230 0-1 \u7684\u53d8\u5316\u7684\u5730\u65b9\uff0cWrite Leveling \u627e 0-1 \u53d8\u5316\u662f\u4e3a\u4e86\u540c\u6b65\uff0c\u540c\u6b65\u7684\u5730\u65b9\u6b63\u662f 0-1 \u53d8\u5316\u7684\u5730\u65b9\uff1b\u800c Read Leveling \u7684\u76ee\u7684\u662f\u8981\u8bfb\u53d6\u51fa\u6b63\u786e\u7684\u6570\u636e\uff0c\u5df2\u77e5\u6709\u4e00\u6bb5\u8fde\u7eed\u7684\u5ef6\u8fdf\u533a\u95f4\uff0c\u533a\u95f4\u5185\u90fd\u53ef\u4ee5\u8bfb\u51fa\u6b63\u786e\u7684\u6570\u636e\uff0c\u90a3\u4e48\u53d6\u5176\u4e2d\u70b9\uff0c\u5373\u4f7f\u56e0\u4e3a\u6e29\u5ea6\u7b49\u6761\u4ef6\u53d8\u5316\uff0c\u533a\u95f4\u51fa\u73b0\u79fb\u52a8\uff0c\u56e0\u4e3a\u4fdd\u7559\u4e86\u8db3\u591f\u7684\u4f59\u91cf\uff0c\u6240\u4ee5\u4f9d\u7136\u53ef\u4ee5\u5de5\u4f5c\u3002\u53d6\u4e2d\u70b9\u8fd9\u4e00\u6b65\u4e5f\u79f0\u4e3a Read Centering\u3002</p>"},{"location":"hardware/sdram.zh/#hbm","title":"HBM","text":"<p>HBM \u5168\u79f0\u662f High Bandwidth Memory\uff0c\u4e5f\u5c31\u662f\u9ad8\u5e26\u5bbd\u5185\u5b58\uff0c\u5176\u6280\u672f\u4e5f\u662f\u57fa\u4e8e SDRAM\uff0c\u56e0\u6b64\u653e\u5728\u8fd9\u91cc\u548c DDR SDRAM \u8fdb\u884c\u5bf9\u6bd4\u3002</p> <p>HBM \u76f8\u6bd4\u524d\u9762\u7684 DDR SDRAM\uff0c\u5b83\u5806\u53e0\u4e86\u591a\u4e2a SDRAM\uff0c\u63d0\u4f9b\u591a\u4e2a channel \u5e76\u4e14\u63d0\u9ad8\u4e86\u4f4d\u5bbd\u3002\u4f8b\u5982 Micron HBM with ECC\uff0c\u5806\u53e0\u4e86 4/8 \u5c42 DRAM\uff0c\u63d0\u4f9b\u4e86 8 \u4e2a channel\uff0c\u6bcf\u4e2a channel \u7684\u6570\u636e\u5bbd\u5ea6\u662f 128 \u4f4d\uff0c\u4ee5 3200 MT/s \u8ba1\u7b97\uff0c\u4e00\u4e2a HBM \u82af\u7247\u7684\u6570\u636e\u4f20\u8f93\u901f\u7387\u6700\u5927\u662f\uff1a</p> <p>$$ 3200 \\mathrm{(MT/s)} * 128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(Channels)} = 3276.8 \\mathrm{(Gb/s)} = 409.6 \\mathrm{(GB/s)} $$</p> <p>\u6240\u4ee5\u4e00\u7247 HBM \u7684\u4f20\u8f93\u901f\u7387\u5c31\u76f8\u5f53\u4e8e 16 \u4e2a\u4f20\u7edf\u7684 DDR SDRAM\uff0c\u9760\u7684\u662f 8 \u4e2a Channel \u4ee5\u53ca\u53cc\u500d\u7684\u4f4d\u5bbd\u3002\u6bcf\u4e2a Channel \u7684\u4f4d\u5bbd\u662f 128 \u4f4d\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u628a\u4e24\u7247 64-bit SDRAM \u5e76\u8d77\u6765\u4e86\uff0c\u53ef\u4ee5\u5f53\u6210\u4e00\u4e2a 128 \u4f4d\u7684\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728 Pseudo Channel \u6a21\u5f0f\u4e0b\uff0c\u5f53\u6210\u5171\u4eab\u5730\u5740\u548c\u547d\u4ee4\u4fe1\u53f7\u7684\u4e24\u4e2a SDRAM \u7528\u3002</p> <p>\u5f53\u7136\u4e86\uff0cHBM \u7684\u9ad8\u5e26\u5bbd\u7684\u4ee3\u4ef7\u5c31\u662f\u5f15\u811a\u6570\u91cf\u5f88\u591a\u3002\u6839\u636e HBM3 JESD238A \u6807\u51c6\uff0c\u6bcf\u4e2a Channel \u8981 120 \u4e2a pin\uff0c\u4e00\u5171 16 \u4e2a channel\uff08HBM2 \u662f 8 channel\uff0c\u6bcf\u4e2a channel 128 \u4f4d\uff1bHBM3 \u662f 16 channel\uff0c\u6bcf\u4e2a channel 64 \u4f4d\uff09\uff0c\u52a0\u4e0a\u5176\u4f59\u7684 52 \u4e2a pin\uff0c\u8fd9\u4e9b\u52a0\u8d77\u6765\u5c31 1972 \u4e2a pin \u4e86\u3002\u6240\u4ee5\u4e00\u822c\u5728 Silicon Interposer \u4e0a\u4e0e\u5904\u7406\u5668\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u5728 PCB \u4e0a\u8d70\u7ebf\uff1a</p> <p> </p> HBM \u7684\u5c01\u88c5\u5f62\u5f0f\uff08\u56fe\u6e90 A 1.2V 20nm 307GB/s HBM DRAM with At-Speed Wafer-Level I/O Test Scheme and Adaptive Refresh Considering Temperature Distribution\uff09 <p>\u6240\u4ee5\u5728 HBM3 \u6807\u51c6\u91cc\uff0c\u7528 Microbump \u6765\u63cf\u8ff0 HBM \u7684 pin\u3002\u53ef\u4ee5\u5f62\u8c61\u5730\u7406\u89e3\u4e3a\uff0c\u628a\u539f\u6765\u63d2\u5728\u4e3b\u677f\u4e0a\u7684\u5185\u5b58\u6761\u62c6\u5f00\uff0c\u53ea\u4fdd\u7559\u82af\u7247\uff0c\u628a\u82af\u7247\u7ad6\u76f4\u5806\u53e0\u8d77\u6765\uff0c\u53d8\u6210\u4e00\u4e2a HBM Die\uff0c\u7136\u540e\u7d27\u5bc6\u5730\u8fde\u63a5\u5230 CPU \u4e2d\u3002\u4f46\u662f\u53e6\u4e00\u65b9\u9762\uff0c\u5bc6\u5ea6\u4e0a\u53bb\u4e86\uff0c\u4ef7\u683c\u4e5f\u66f4\u8d35\u4e86\u3002\u540c\u65f6\u6269\u5c55\u6027\u4e5f\u4e0b\u964d\u4e86\uff0c\u4e0d\u80fd\u50cf DDR SDRAM \u90a3\u6837\u5728\u4e3b\u677f\u4e0a\u63d2\u5f88\u591a\u6761\u3002</p> <p>\u4e0b\u9762\u6765\u5206\u6790\u4e00\u4e9b\u5178\u578b\u7684\u5e26\u6709 HBM \u7684\u7cfb\u7edf\u7684\u5185\u5b58\u5e26\u5bbd\uff1a</p> <p>Xilinx \u7684 Virtex Ultrascale Plus HBM FPGA \u63d0\u4f9b\u4e86 $1800 \\mathrm{(MT/s)} * 128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(Channels)} = 230.4 \\mathrm{(GB/s)}$ \u7684\u5e26\u5bbd\uff0c\u5982\u679c\u7528\u4e86\u4e24\u7247 HBM \u5c31\u662f 460.8 GB/s\u3002\u66b4\u9732\u7ed9 FPGA \u903b\u8f91\u7684\u662f 16 \u4e2a 256 \u4f4d\u7684 AXI3 \u7aef\u53e3\uff0cAXI \u9891\u7387 450 MHz\uff0c\u5185\u5b58\u9891\u7387 900 MHz\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e2a AXI3 \u5c31\u5bf9\u5e94\u4e86\u4e00\u4e2a HBM \u7684 pseudo channel\u3002\u6bcf\u4e2a pseudo channel \u662f 64 \u4f4d\uff0c\u4f46\u662f AXI \u7aef\u53e3\u662f 256 \u4f4d\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u901f\u7387\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece 450MHz \u5230 900MHz\uff0c\u518d\u52a0\u4e0a DDR\uff0c\u7b49\u4ef7\u4e8e\u9891\u7387\u7ffb\u4e86\u56db\u500d\uff0c\u6240\u4ee5\u4f4d\u5bbd\u4e5f\u8981\u76f8\u5e94\u5730\u4ece 64 \u4f4d\u7ffb\u56db\u500d\u5230 256 \u4f4d\u3002</p> <p>A100 \u663e\u5361 40GB PCIe \u7248\u672c\u91c7\u7528\u4e86 5 \u4e2a 8 GB \u7684 HBM \u5185\u5b58\uff0c\u8fd0\u884c\u5728 1215 MHz \u7684\u9891\u7387\u4e0b\uff0c\u90a3\u4e48\u5185\u5b58\u5e26\u5bbd\u5c31\u662f $1215 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\mathrm{(bits/transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 1555 \\mathrm{(GB/s)}$\uff0c\u4e0e Datasheet \u543b\u5408\u3002A100 Datasheet \u4e2d\u7684 Memory bus width \u7684\u8ba1\u7b97\u65b9\u5f0f\u5176\u5b9e\u5c31\u662f\u628a\u6240\u6709\u7684 Channel \u4f4d\u5bbd\u52a0\u8d77\u6765\uff1a$128 \\mathrm{(bits/transfer)} * 8 \\mathrm{(channels)} * 5 \\mathrm{(stacks)} = 5120 \\mathrm{(bits)}$\u3002</p> <p>A100 \u663e\u5361 80GB PCIe \u7248\u672c\u628a HBM2 \u5347\u7ea7\u5230\u4e86 HBM2e\uff0c\u540c\u65f6\u5185\u5b58\u65f6\u949f\u9891\u7387\u4e5f\u5347\u7ea7\u5230\u4e86 1512 MHz\uff0c\u6b64\u65f6\u5185\u5b58\u5e26\u5bbd\u5c31\u662f $1512 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\mathrm{(bits/transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 1935 \\mathrm{(GB/s)}$\uff0c\u4e0e Datasheet \u543b\u5408\u3002</p> <p>H100 \u663e\u5361 80GB SXM5 \u7248\u672c\u628a HBM \u5347\u7ea7\u5230\u4e86 HBM3\uff0c\u5185\u5b58\u5bb9\u91cf\u4f9d\u7136\u662f 80GB\uff0c\u4f46\u662f\u65f6\u949f\u9891\u7387\u63d0\u9ad8\u5230\u4e86 2619 MHz\uff0c\u6b64\u65f6\uff0c\u5185\u5b58\u5e26\u5bbd\u662f $2619 \\mathrm{(MHz)} * 2 \\mathrm{(DDR)} * 8 \\mathrm{(channels)} * 128 \\mathrm{(bits/transfer)} / 8 \\mathrm{(bits/byte)} * 5 \\mathrm{(HBM)} = 3352 \\mathrm{(GB/s)}$\u3002</p>"},{"location":"hardware/sdram.zh/#dram-cell","title":"DRAM Cell","text":"<p>DRAM \u7684\u6570\u636e\u5b58\u50a8\u5728\u7535\u5bb9\u4e2d\u3002\u5178\u578b\u7684 1T DRAM Cell \u5185\u90e8\u6784\u9020\u5982\u4e0b\uff1a</p> <p> </p> 1T DRAM Cell \u5185\u90e8\u6784\u9020\uff08\u56fe\u6e90 Berkeley EECS 151/251A Spring 2019\uff09"},{"location":"hardware/sdram.zh/#ddr","title":"\u51e0\u79cd DDR \u7684\u5bf9\u6bd4","text":"<p>\u4e0b\u9762\u7ed9\u51fa DDR\uff0cLPDDR\uff0cGDDR \u548c HBM \u7684\u5bf9\u6bd4\uff1a</p> DDR4 DDR5 LPDDR4 LPDDR5 GDDR5 GDDR6 HBM2 Channel \u6570\u91cf 1 2 2 2 2 2 8 \u6bcf Channel \u4f4d\u5bbd 64 32 16 16/32 16 16 128 \u6570\u636e\u901f\u7387\uff08MT/s\uff09 3200 5600 4266 6400 9000 24000 2400 \u603b\u5e26\u5bbd\uff08GB/s\uff09 25.6 GB/s 44.8 GB/s 17.1 GB/s 25.6 GB/s 36 GB/s 96 GB/s 307 GB/s <p>\u6570\u636e\u901f\u7387\u6309\u7167\u80fd\u67e5\u5230\u7684\u578b\u53f7\u7684\u6700\u9ad8\u6027\u80fd\uff1a</p> <ul> <li>DDR4: Micron 3200 MT/s</li> <li>DDR5: Micron 5600 MT/s</li> <li>LPDDR4: Samsung 4266 MT/s</li> <li>LPDDR5: Samsung 6400 MT/s</li> <li>GDDR5: Samsung 9000 MT/s</li> <li>GDDR6: Samsung 24000 MT/s</li> <li>HBM2: Samsung 2400 MT/s</li> <li>HBM2E: Micron 3200 MT/s</li> </ul>"},{"location":"hardware/sdram.zh/#_10","title":"\u76f8\u5173\u9605\u8bfb","text":"<ul> <li>DDR4 Bank Groups in Embedded Applications</li> <li>DDR4 Tutorial - Understanding the Basics</li> <li>DDR5/4/3/2: How Memory Density and Speed Increased with each Generation of DDR</li> <li>DDR5 vs DDR4 DRAM \u2013 All the Advantages &amp; Design Challenges</li> <li>Understanding DDR3 Write Leveling and Read Leveling</li> <li>Will HBM replace DDR and become Computer Memory?</li> </ul>"},{"location":"hardware/spi/","title":"SPI","text":""},{"location":"hardware/spi/#_1","title":"\u63a5\u53e3","text":"<p>SPI \u534f\u8bae\u6d89\u53ca\u5230\u56db\u4e2a\u4fe1\u53f7\uff1a</p> <ul> <li>SCLK: \u65f6\u949f\u4fe1\u53f7\uff0cMaster -&gt; Slave</li> <li>MOSI\uff1a\u6570\u636e\u4fe1\u53f7\uff0cMaster -&gt; Slave</li> <li>MISO\uff1a\u6570\u636e\u4fe1\u53f7\uff0cSlave -&gt; Master</li> <li>CS\uff1a\u82af\u7247\u4f7f\u80fd\uff0c\u4e00\u822c\u662f\u4f4e\u6709\u6548</li> </ul> <p>\u8981\u901a\u8fc7 SPI \u534f\u8bae\u53d1\u9001\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u901a\u5e38\u9700\u8981\u5148\u62c9\u4f4e CS\uff0c\u7136\u540e\u542f\u52a8 SCLK \u65f6\u949f\uff0c\u540c\u65f6\u6536\u53d1\u6570\u636e\u3002\u6ce8\u610f SPI \u662f\u5168\u53cc\u5de5\u7684\uff0c\u4e5f\u5c31\u662f\u53d1\u9001\u7684\u540c\u65f6\u4e5f\u5728\u63a5\u6536\uff0c\u53ea\u4e0d\u8fc7\u901a\u5e38\u6765\u8bf4\uff0c\u5916\u8bbe\u7b49\u5230\u4e3b\u673a\u53d1\u9001\u4e86\u547d\u4ee4\u672c\u8eab\uff0c\u624d\u77e5\u9053\u8981\u56de\u590d\u4ec0\u4e48\uff0c\u6240\u4ee5\u5f88\u591a\u65f6\u5019\u547d\u4ee4\u8bbe\u8ba1\u6210\u4e86\u4e8b\u5b9e\u4e0a\u7684\u534a\u53cc\u5de5\uff1a\u524d\u534a\u90e8\u5206\u4e3b\u673a\u5728\u53d1\u547d\u4ee4\uff0c\u5916\u8bbe\u53d1\u9001\u65e0\u7528\u7684\u6570\u636e\uff1b\u540e\u534a\u90e8\u5206\u5916\u8bbe\u5728\u53d1\u9001\u54cd\u5e94\uff0c\u4e3b\u673a\u53d1\u9001\u65e0\u7528\u7684\u6570\u636e\u3002</p>"},{"location":"hardware/spi/#_2","title":"\u6ce2\u5f62","text":"<p>SPI \u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u4e0b\u9762\u8bb2\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u914d\u7f6e\uff08\u5373 CPOL=0\uff0cCPHA=0\uff09\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cMaster \u548c Slave \u90fd\u662f\u5728\u65f6\u949f\u7684\u4e0b\u964d\u6cbf\u4fee\u6539\u8f93\u51fa\u7684\u6570\u636e\uff0c\u7136\u540e\u5728\u65f6\u949f\uff08<code>sclk</code>\uff09\u7684\u4e0a\u5347\u6cbf\u5bf9\u63a5\u6536\u5230\u7684\u6570\u636e\u8fdb\u884c\u91c7\u6837\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"clk\", wave: \"p........\"},\n      { name: \"sclk\", wave: \"0.101010.\"},\n      { name: \"mosi\", wave: \"03.4.5.x.\"},\n      { name: \"miso\", wave: \"06.7.8.x.\"},\n      { name: \"cs_n\", wave: \"10......1\"},\n    ]\n}\n</code></pre> <p>\u6ce2\u5f62\u56fe\u4e2d\uff0c\u65f6\u949f\uff08<code>sclk</code>\uff09\u4e0a\u5347\u6cbf\u65f6\uff0c\u6570\u636e\u5904\u4e8e\u7a33\u5b9a\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6b64\u65f6 Master \u5bf9 MISO \u91c7\u6837\uff0cSlave \u5bf9 MOSI \u91c7\u6837\uff0c\u53ef\u4ee5\u5f97\u5230\u7a33\u5b9a\u7684\u6570\u636e\uff1b\u65f6\u949f\u4e0b\u964d\u6cbf\u65f6\uff0cMaster \u548c Slave \u4fee\u6539\u8f93\u51fa\u7684\u6570\u636e\u3002</p> <p>\u5b9e\u9645\u5728 RTL \u4e2d\u5b9e\u73b0\u7684\u65f6\u5019\uff0cMaster \u53ef\u4ee5\u4e0d\u5199 negedge \u903b\u8f91\uff0c\u800c\u662f\u5199\u4e00\u4e2a\u5206\u9891\u5668\uff0c\u5728\u5206\u9891\u51fa\u6765\u7684\u8d1f\u534a\u5468\u671f\u91cc\uff0c\u5b9e\u73b0\u6570\u636e\u7684\u4fee\u6539\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684 <code>clk</code> \u5206\u9891\u5230 <code>sclk</code>\u3002\u4e00\u822c\u4f7f\u7528\u4e00\u4e2a\u72b6\u6001\u673a\u6765\u5b9e\u73b0 SPI Master\uff0c\u8bb0\u5f55\u5f53\u524d\u4f20\u8f93\u5230\u54ea\u4e00\u4e2a bit\uff0c\u4ee5\u53ca\u8bb0\u5f55\u5f53\u524d\u662f <code>sclk</code> \u7684\u6b63\u534a\u5468\u671f\u8fd8\u662f\u8d1f\u534a\u5468\u671f\u3002</p> <p>SPI \u672c\u8eab\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u6838\u5fc3\u4e0d\u5728 SPI\uff0c\u800c\u662f\u5728 SPI \u4e4b\u4e0a\u5b9a\u4e49\u7684\u5404\u79cd\u534f\u8bae\u3002</p>"},{"location":"hardware/spi/#spi-flash","title":"SPI Flash","text":"<p>SPI Flash \u662f\u4e00\u79cd\u5f88\u5e38\u89c1\u7684 SPI \u5916\u8bbe\uff0c\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee NAND/NOR Flash\u3002</p> <p>\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u5f88\u591a SPI Flash \u8fd8\u4f1a\u63d0\u4f9b Dual SPI \u548c Quad SPI \u6a21\u5f0f\u3002\u6807\u51c6\u7684 SPI \u4e2d\uff0cMaster \u5230 Slave \u548c Slave \u5230 Master \u5206\u522b\u662f\u4e00\u6839\u4fe1\u53f7\u7ebf\uff0c\u5982\u679c\u8981\u7ee7\u7eed\u63d0\u9ad8\u6027\u80fd\uff0c\u90a3\u5c31\u8981\u5f15\u5165\u66f4\u591a\u7684\u4fe1\u53f7\u7ebf\u6765\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c\u6240\u4ee5 Dual SPI \u5c31\u662f\u8ba9\u539f\u6765\u7684 MISO \u548c MOSI \u90fd\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u6570\u636e\uff1bQuad SPI \u5219\u662f\u53c8\u989d\u5916\u6dfb\u52a0\u4e86\u4e24\u4e2a\u4fe1\u53f7\u7ebf\u6765\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002</p> <p>\u5e38\u89c1\u7684 SPI Flash \u5382\u5bb6\uff1a</p> <ul> <li>Spansion -&gt; Cypress -&gt; Infineon</li> <li>Numonyx -&gt; Micron</li> <li>Winbond</li> <li>GigaDevice</li> <li>Macronix</li> </ul>"},{"location":"hardware/spi/#spi-nand-flash","title":"SPI NAND Flash","text":"<p>\u4e0b\u9762\u4ee5 Alliance Memory SPI NAND Flash Datasheet \u4e3a\u4f8b\u5b50\uff0c\u770b\u770b\u901a\u5e38 SPI Flash \u90fd\u652f\u6301\u54ea\u4e9b\u547d\u4ee4\uff0c\u90fd\u662f\u5982\u4f55\u4f20\u8f93\u6570\u636e\u7684\u3002</p> <p>\u8fd9\u6b3e SPI NAND Flash \u7684\u5185\u90e8\u5b58\u50a8\u5206\u4e3a\u4e09\u5c42\uff1a</p> <ol> <li>Block\uff1a\u6570\u91cf\u4e0d\u5b9a</li> <li>Page\uff1a\u6bcf\u4e2a Block \u5305\u62ec 64 \u4e2a Page</li> <li>Byte\uff1a\u6bcf\u4e2a Page \u5305\u62ec\u4e00\u5b9a\u6570\u91cf\u7684 Byte\uff0c\u5e38\u89c1\u7684\u6709 2112(2048+64)\u30012176(2048+128)\u30014352(4096+256)</li> </ol> <p>NAND Flash \u7684\u8bfb\u53d6\u7c92\u5ea6\u662f Page\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 NAND Flash \u66f4\u50cf\u5757\u8bbe\u5907\u3002\u4e00\u6b21\u8bfb\u53d6\u8fc7\u7a0b\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u53d1\u9001 13H(Page Read to Cache) \u547d\u4ee4\uff0c\u628a\u4e00\u4e2a Page \u7684\u6570\u636e\u8bfb\u53d6\u5230 NAND Flash \u5185\u90e8\u7684 Cache \u4e2d</li> <li>\u4e0d\u65ad\u53d1\u9001 0FH(Get Feature) \u547d\u4ee4\uff0c\u76f4\u5230 NAND Flash \u8868\u793a Page Read to Cache \u547d\u4ee4\u5b8c\u6210</li> <li>\u53d1\u9001 Read from Cache \u547d\u4ee4\uff0c\u8003\u8651\u5230\u4f20\u8f93\u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a<ol> <li>Read from Cache x1 IO(03H/0BH): Master \u7ed9\u51fa 1 \u5b57\u8282\u547d\u4ee4\uff0c2 \u5b57\u8282\u5730\u5740\u548c 1 \u5b57\u8282 dummy \u6570\u636e\uff0c\u5171 8(COMMAND)+16(ADDR)+8(DUMMY) \u4e2a\u5468\u671f\uff0c\u4e4b\u540e Slave \u4ece MISO \u7ed9\u51fa\u6570\u636e</li> <li>Read from Cache x2 IO(3BH): Slave \u540c\u65f6\u901a\u8fc7 MISO \u548c MOSI \u7ed9\u51fa\u6570\u636e</li> <li>Read from Cache x4 IO(6BH): Slave \u540c\u65f6\u901a\u8fc7 MISO\u3001MOSI\u3001WP# \u548c HOLD# \u7ed9\u51fa\u6570\u636e</li> <li>Read from Cache Dual IO(BBH): \u5728 3BH \u7684\u57fa\u7840\u4e0a\uff0cMaster \u4e5f\u540c\u65f6\u901a\u8fc7 MISO \u548c MOSI \u7ed9\u51fa\u5730\u5740\u548c dummy \u5b57\u8282\uff0c\u6240\u4ee5 Master \u53ea\u5360\u7528 8(COMMAND)+8(ADDR)+4(DUMMY) \u4e2a\u5468\u671f\u7684\u65f6\u95f4\u53d1\u9001</li> <li>Read from Cache Quad IO(EBH): \u5728 6BH \u7684\u57fa\u7840\u4e0a\uff0cMaster \u4e5f\u540c\u65f6\u901a\u8fc7\u56db\u4e2a\u6570\u636e\u4fe1\u53f7\u7ed9\u51fa\u5730\u5740\u548c dummy \u5b57\u8282\uff0c\u6240\u4ee5 Master \u53ea\u5360\u7528 8(COMMAND)+4(ADDR)+2(DUMMY) \u4e2a\u5468\u671f\u7684\u65f6\u95f4\u53d1\u9001</li> </ol> </li> </ol> <p>\u5199\u5165\u7684\u65f6\u5019\uff0c\u7531\u4e8e NAND Flash \u7684\u7279\u6027\uff0c\u9996\u5148\u9700\u8981\u64e6\u9664\uff0c\u628a\u4e00\u4e2a Block \u7684\u5185\u5bb9\u5168\u90e8\u64e6\u9664\uff0c\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a Block \u5305\u62ec\u591a\u4e2a Page\uff0c\u6240\u4ee5\u64e6\u9664\u7684\u7c92\u5ea6\u662f\u5f88\u7c97\u7684\u3002\u64e6\u9664\u8fc7\u7684 Page \u624d\u53ef\u4ee5\u8fdb\u884c\u5199\u5165\uff0c\u5177\u4f53\u6b65\u9aa4\u662f\uff1a</p> <ol> <li>\u53d1\u9001 06H(Write Enable) \u5141\u8bb8\u5199\u5165</li> <li>\u53d1\u9001 02H(Program Load) \u6216 32H(Program Load x4) \u628a\u8981\u5199\u5165\u7684\u6570\u636e\u4f20\u8f93\u7ed9 NAND Flash \u4e2d\u7684 Cache\uff1b02H \u548c 32H \u7684\u533a\u522b\u5c31\u662f\u540e\u8005\u540c\u65f6\u5728\u56db\u4e2a\u4fe1\u53f7\u7ebf\u4e0a\u4f20\u8f93\u6570\u636e</li> <li>\u53d1\u9001 10H(Program Execute) \u8fdb\u884c\u5b9e\u9645\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u4ece Cache \u5230 Flash \u5b58\u50a8</li> <li>\u4e0d\u65ad\u53d1\u9001 0FH(Get Feature) \u547d\u4ee4\uff0c\u76f4\u5230 Program Execute \u64cd\u4f5c\u5b8c\u6210</li> </ol>"},{"location":"hardware/spi/#spi-nor-flash","title":"SPI NOR Flash","text":"<p>NOR Flash \u548c NAND Flash \u7684\u533a\u522b\u5728\u4e8e\uff0cNOR Flash \u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\uff0c\u53ef\u4ee5\u63d0\u4f9b XIP \u652f\u6301\u3002\u4e0b\u9762\u4ee5 128Mb, 3V, Multiple I/O Serial Flash Memory \u4e3a\u4f8b\u5b50\u770b\u770b\u5b83\u662f\u5982\u4f55\u8bfb\u5199\u7684\u3002</p> <p>SPI NOR Flash \u8bfb\u53d6\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u4e00\u6761\u547d\u4ee4\u5c31\u53ef\u4ee5\u4e86\uff1aREAD/FAST READ\u3002\u5176\u4e2d READ \u547d\u4ee4\u6bd4\u8f83\u7b80\u5355\uff1a\u53d1\u9001 Command\uff0c\u53d1\u9001\u5730\u5740\uff0c\u7136\u540e Slave \u7d27\u63a5\u7740\u5c31\u4f1a\u53d1\u9001\u6570\u636e\uff1bFAST READ \u53ef\u4ee5\u8fbe\u5230\u66f4\u9ad8\u7684\u9891\u7387\uff0c\u4f46\u662f\u4e3a\u4e86\u8ba9 NOR Flash \u6709\u65f6\u95f4\u8bfb\u53d6\u6570\u636e\uff0c\u5728 Master \u53d1\u9001 Command \u548c\u5730\u5740\u540e\uff0c\u8fd8\u9700\u8981\u53d1\u9001 Dummy cycles\uff0c\u7136\u540e Slave \u624d\u4f1a\u53d1\u9001\u6570\u636e\u3002\u548c\u524d\u9762\u4e00\u6837\uff0cFAST READ \u4e5f\u652f\u6301\u4e0d\u540c\u7684 IO \u7c7b\u578b\uff0c\u4f8b\u5982 Dual Output\uff0cDual Input/Output\uff0cQuad Output\uff0cQuad Input/Output\u3002\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u7aef\u7684 SPI NOR Flash \u8fd8\u652f\u6301 DTR\uff08Double Transfer Rate\uff09\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f DDR\uff0c\u5728\u65f6\u949f\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u91c7\u6837\u6570\u636e\u3002</p> <p>\u5199\u5165\u7684\u65f6\u5019\uff0c\u548c NAND Flash \u4e00\u6837\uff0c\u4e5f\u9700\u8981\u5148\u64e6\u9664\uff0c\u518d\u5199\u5165\u3002SPI Flash \u7684\u5b58\u50a8\u5c42\u7ea7\u662f\uff1a</p> <ol> <li>Sector</li> <li>Subsector</li> <li>Page</li> <li>Byte</li> </ol> <p>\u64e6\u9664\u7684\u7c92\u5ea6\u662f Sector \u6216\u8005 Subsector\uff0c\u5199\u5165\u7684\u7c92\u5ea6\u662f Page\u3002\u5199\u5165\u7684\u65f6\u5019\uff0c\u4e5f\u9700\u8981\u9996\u5148\u53d1\u9001 WRITE ENABLE \u547d\u4ee4\uff0c\u518d\u53d1\u9001 PAGE PROGRAM \u547d\u4ee4\u3002NOR Flash \u5728 Program \u4e0a\u4e5f\u6bd4\u8f83\u7b80\u5316\uff0c\u76f4\u63a5 Program \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5148\u5199\u5165\u5230 Cache\uff0c\u518d\u8fdb\u884c Program\u3002</p> <p>NOR Flash \u8fd8\u63d0\u4f9b\u4e86 XIP Mode \u6765\u52a0\u5feb\u968f\u673a\u8bbf\u95ee\uff1a\u542f\u7528 XIP \u6a21\u5f0f\u540e\uff0c\u7ed9\u51fa\u4e00\u4e2a\u5730\u5740\uff0c\u7b49\u5f85 Dummy cycles \u540e\uff0c\u5c31\u53ef\u4ee5\u8bfb\u51fa\u6570\u636e\uff0c\u4e0d\u9700\u8981\u50cf\u524d\u9762\u90a3\u6837\u53d1\u9001 COMMAND\uff0c\u51cf\u5c11\u4e86\u5ef6\u8fdf\u3002\u5f53\u7136\u4e86\uff0c\u5373\u4f7f\u4e0d\u6253\u5f00 NOR Flash \u7684 XIP Mode\uff0c\u4e5f\u53ef\u4ee5\u5728 SPI \u63a7\u5236\u5668\u91cc\u5b9e\u73b0 XIP\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u6b21\u8bfb\u53d6\u90fd\u8981\u53d1\u4e00\u6b21 READ \u547d\u4ee4\u3002</p>"},{"location":"hardware/spi/#spi-eeprom","title":"SPI EEPROM","text":"<p>SPI EEPROM \u548c SPI NOR Flash \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4f46\u662f EEPROM \u66f4\u5c0f\uff0c\u4e5f\u66f4\u52a0\u7b80\u5355\uff0c\u4f8b\u5982\u5199\u5165\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u64e6\u9664\u3002\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u5728 SPI \u4e32\u884c EEPROM \u7cfb\u5217\u6570\u636e\u624b\u518c \u4e2d\u67e5\u770b\u547d\u4ee4\u5217\u8868\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002</p>"},{"location":"hardware/spi/#sd","title":"SD \u5361","text":"<p>SD \u5361\u9664\u4e86 SD Bus \u4ee5\u5916\uff0c\u8fd8\u652f\u6301 SPI \u6a21\u5f0f\uff08\u6700\u65b0\u7684 SDUC \u4e0d\u652f\u6301 SPI \u6a21\u5f0f\uff09\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528 SPI \u6765\u8bfb\u5199 SD \u5361\u3002</p> <p>SD \u5361\u6bd4\u8f83\u7279\u522b\u7684\u4e00\u70b9\u662f\uff0c\u5b83\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u521d\u59cb\u5316\u6d41\u7a0b\uff1a</p> <ol> <li>\u9996\u5148\u8981\u53d1\u9001 CMD0 \u547d\u4ee4\uff0c\u540c\u65f6 CS \u62c9\u4f4e\uff0c\u4f7f\u5f97 SD \u5361\u8fdb\u5165 SPI \u6a21\u5f0f</li> <li>\u5bf9\u4e8e SDHC SD \u5361\uff0c\u9700\u8981\u53d1\u9001 CMD8 \u6765\u534f\u5546\u5de5\u4f5c\u7535\u538b\u8303\u56f4</li> <li>\u91cd\u590d\u53d1\u9001 ACMD41 \u547d\u4ee4\uff08CMD55 + CMD41 = ACMD41\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u76f4\u5230 SD \u5361\u56de\u590d\u521d\u59cb\u5316\u5b8c\u6210</li> <li>\u53d1\u9001 CMD58 \u547d\u4ee4\u4ee5\u8bfb\u53d6 OCR \u5bc4\u5b58\u5668\u7684\u503c</li> </ol> <p>\u6bd4\u8f83\u6709\u610f\u601d\u7684\u662f\u547d\u4ee4\u7684\u4f20\u8f93\u65b9\u5f0f\u3002\u6bcf\u4e2a\u547d\u4ee4\u6709\u4e00\u4e2a 6 \u4f4d\u7684\u547d\u4ee4\u7f16\u53f7\uff0c\u4f8b\u5982 CMD0 \u7684\u7f16\u53f7\u5c31\u662f 0\uff0cCMD55 \u7684\u7f16\u53f7\u5c31\u662f 55\uff1b\u8fd8\u5e26\u6709\u56db\u5b57\u8282\u7684\u53c2\u6570\u3002\u6bcf\u4e2a\u547d\u4ee4\u4f1a\u7ec4\u88c5\u6210\u4e00\u4e2a 48 \u4f4d\u7684\u5206\u7ec4\uff1a</p> <ol> <li>bit[47]=0: Start Bit</li> <li>bit[46]=1: Transmission Bit</li> <li>bit[45:40]: Command Index</li> <li>bit[39:8]: Argument</li> <li>bit[7:1]: CRC7</li> <li>bit[0]=1: End Bit</li> </ol> <p>\u53ef\u89c1\u989d\u5916\u591a\u4e86\u4e00\u4e2a CRC7 \u7684\u6821\u9a8c\u548c\u3002</p> <p>SD \u5361\u89c4\u5b9a\uff0cSPI \u6a21\u5f0f\u4e0b\uff0c\u6240\u6709\u7684\u6570\u636e\u4f20\u8f93\u90fd\u662f\u5bf9\u9f50\u5230 8 \u4f4d\uff0c\u4e5f\u5c31\u662f\u4ece CS \u62c9\u4f4e\u5f00\u59cb\u7b97\uff0c\u6bcf 8 \u4e2a\u65f6\u949f\u4e0a\u5347\u6cbf\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u65e0\u8bba\u547d\u4ee4\u8fd8\u662f\u54cd\u5e94\uff0c\u90fd\u5728 8 \u4f4d\u7684\u8fb9\u754c\u4e0a\u4f20\u8f93\u3002</p> <p>\u60f3\u8981\u8bfb\u53d6\u6570\u636e\u7684\u8bdd\uff0c\u5c31\u8981\u53d1\u9001 READ_SINGLE_BLOCK \u547d\u4ee4\uff0c\u53c2\u6570\u5c31\u662f\u8981\u8bfb\u53d6\u7684 Block \u5730\u5740\uff0cBlock \u5730\u5740\u7684\u5355\u4f4d\u5728 SDSC \u4e0a\u662f\u5b57\u8282\uff0c\u5728 SDHC \u548c SDXC \u4e0a\u662f 512 \u5b57\u8282\u3002SD \u5361\u56de\u5148\u56de\u590d\u4e00\u4e2a\u5b57\u8282\u7684\u54cd\u5e94\uff0c\u7136\u540e\u5f00\u59cb\u53d1\u6570\u636e\uff0c\u6570\u636e\u4ece Start Block Token \u5f00\u59cb\uff0c\u7136\u540e\u662f\u4e00\u4e2a Block \u7684\u6570\u636e\uff08\u901a\u5e38\u662f 512 \u5b57\u8282\uff09\uff0c\u6700\u540e\u518d\u4e24\u4e2a\u5b57\u8282\u7684 CRC16\u3002</p> <p>\u5199\u6570\u636e\u5219\u662f\u53d1\u9001 WRITE_BLOCK \u547d\u4ee4\uff0cSD \u5361\u56de\u590d\u4e00\u4e2a\u5b57\u8282\u7684\u54cd\u5e94\uff0c\u7136\u540e\u63a7\u5236\u5668\u5f00\u59cb\u4f20\u8f93\u6570\u636e\uff0c\u6570\u636e\u4ece Start Block Token \u5f00\u59cb\uff0c\u63a5\u7740\u662f\u8981\u5199\u5165\u7684\u6570\u636e\uff0c\u6700\u540e\u662f\u4e24\u4e2a\u5b57\u8282\u7684 CRC16\uff0c\u7136\u540e SD \u5361\u56de\u590d\u4e00\u4e2a\u5b57\u8282\u7684\u54cd\u5e94\uff0c\u6807\u5fd7\u7740\u5199\u5165\u6210\u529f\u3002</p>"},{"location":"hardware/spi/#spi_1","title":"SPI \u4ee5\u592a\u7f51\u63a7\u5236\u5668","text":"<p>\u6709\u4e00\u4e9b\u4ee5\u592a\u7f51\u4ea7\u54c1\u63d0\u4f9b\u4e86 SPI \u63a5\u53e3\uff0c\u4f8b\u5982 KSZ8851SNL/SNLI\uff0c\u96c6\u6210\u4e86 MAC \u548c PHY\uff0c\u76f4\u63a5\u8fde\u63a5 MDI/MDI-X \u63a5\u53e3\uff0c\u867d\u7136\u6700\u9ad8\u53ea\u652f\u6301\u767e\u5146\u7f51\uff0c\u4f46\u662f\u63a5\u53e3\u4e0a\u786e\u5b9e\u975e\u5e38\u7b80\u5355\u3002</p> <p>SPI \u4e0a\u53d1\u9001\u7684\u547d\u4ee4\u5c31\u4e24\u7c7b\uff1a\u4e00\u7c7b\u662f\u8bfb\u5199\u5bc4\u5b58\u5668\uff0c\u4e00\u7c7b\u662f\u8bfb\u5199 RX/TX FIFO\u3002</p>"},{"location":"hardware/spi/#_3","title":"\u952e\u76d8\u548c\u89e6\u6478\u677f","text":"<p>\u4e00\u4e9b\u578b\u53f7\u7684\u82f9\u679c\u7535\u8111\u7684\u952e\u76d8\u548c\u89e6\u6478\u677f\u662f\u901a\u8fc7 SPI \u63a5\u53e3\u8bbf\u95ee\u7684\uff0c\u5728 Linux \u4e2d\u6709\u76f8\u5e94\u7684 applespi \u9a71\u52a8\u3002</p>"},{"location":"hardware/spi/#spi-vs-i2c","title":"SPI vs I2C","text":"<p>SPI \u548c I2C \u7684\u533a\u522b\u5728\u4e8e\uff0c\u524d\u8005\u4fe1\u53f7\u66f4\u591a\uff0c\u5168\u53cc\u5de5\u4f20\u8f93\uff1b\u540e\u8005\u4fe1\u53f7\u66f4\u5c11\uff0c\u534a\u53cc\u5de5\u4f20\u8f93\u3002SPI \u901a\u8fc7 CS \u4fe1\u53f7\u9009\u62e9 Slave \u82af\u7247\uff0cI2C \u901a\u8fc7\u5730\u5740\u8fdb\u884c\u533a\u5206\u3002\u6b64\u5916 I2C \u8fd8\u9700\u8981 Pull up resistor\uff0c\u8fd9\u6837\u5982\u679c\u6ca1\u6709\u8bbe\u5907\u54cd\u5e94\uff0c\u5c31\u4f1a NACK\u3002</p> <p>\u4e00\u4e9b\u82af\u7247\u63d0\u4f9b\u4e86 SPI \u6216 I2C \u7684\u9009\u9879\uff1a\u5171\u7528\u4e24\u4e2a\u4fe1\u53f7\uff0c\u5141\u8bb8\u7528\u6237\u9009\u62e9\u7528 I2C \u8fd8\u662f SPI\u3002\u4f8b\u5982 WM8731\uff0c\u65e2\u652f\u6301 I2C\uff08\u8bb0\u4e3a 2-wire mode\uff09\uff0c\u53c8\u652f\u6301 SPI\uff08\u8bb0\u4e3a 3-wire mode\uff09\u3002\u4e00\u822c\u8fd9\u79cd\u65f6\u5019\uff0cSPI \u548c I2C \u5c31\u662f\u7528\u6765\u914d\u7f6e\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\uff0c\u53e6\u5916\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u63a5\u53e3\uff0c\u4f8b\u5982 WM8731 \u8d1f\u8d23\u58f0\u97f3\u6570\u636e\u4f20\u8f93\u7684\u5b9e\u9645\u4e0a\u662f I2S\u3002</p>"},{"location":"hardware/spi/#axi-quad-spi","title":"AXI Quad SPI","text":"<p>AXI Quad SPI \u662f\u4e00\u4e2a SPI \u534f\u8bae\u7684\u63a7\u5236\u5668\uff0c\u5b83\u652f\u6301 XIP\uff08eXecute In Place\uff09\u6a21\u5f0f\uff0c\u5373\u53ef\u4ee5\u66b4\u9732\u4e00\u4e2a\u53ea\u8bfb AXI Slave \u63a5\u53e3\uff0c\u5f53\u63a5\u6536\u5230\u8bfb\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5c31\u53d1\u9001 SPI NOR Flash \u547d\u4ee4\u53bb\u5bf9\u5e94\u7684\u5730\u5740\u8fdb\u884c\u8bfb\u53d6\uff0c\u7136\u540e\u8fd4\u56de\u7ed3\u679c\u3002\u7531\u4e8e\u4e0d\u540c\u5382\u5bb6\u7684 SPI NOR Flash \u652f\u6301\u6709\u6240\u4e0d\u540c\uff0c\u6240\u4ee5 IP \u4e0a\u7684\u8bbe\u7f6e\u53ef\u4ee5\u770b\u5230\u5382\u5bb6\u7684\u9009\u62e9\u3002</p> <p>\u7279\u522b\u5730\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u9700\u6c42\u662f\u5e0c\u671b\u8bbf\u95ee Cfg\uff08Configuration\uff09Flash\uff0c\u4ea6\u5373\u7528\u6765\u4fdd\u5b58 Bitstream \u7684 Flash\u3002\u5f53 FPGA \u4e0a\u7535\u7684\u65f6\u5019\uff0c\u5982\u679c\u542f\u52a8\u6a21\u5f0f\u8bbe\u7f6e\u4e3a SPI Flash\uff0cFPGA \u5c31\u4f1a\u5411 Cfg Flash \u8bfb\u53d6 Bitstream\uff0cCfg Flash \u9700\u8981\u8fde\u63a5\u5230 FPGA \u7684\u6307\u5b9a\u5f15\u811a\u4e0a\uff0c\u5f53 FPGA \u521d\u59cb\u5316\u7684\u65f6\u5019\u7531\u5185\u90e8\u903b\u8f91\u9a71\u52a8\uff0c\u521d\u59cb\u5316\u5b8c\u6210\u540e\u53c8\u8981\u8f6c\u4ea4\u7ed9\u7528\u6237\u903b\u8f91\u3002\u8f6c\u4ea4\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7 STARTUP \u7cfb\u5217\u7684 primitive\u3002</p> <p>\u901a\u5e38\uff0c\u5982\u679c\u8981\u8fde\u63a5\u5916\u90e8\u7684 SPI Flash\uff0c\u9700\u8981\u8fde\u63a5\u51e0\u6761\u4fe1\u53f7\u7ebf\u5230\u9876\u5c42\uff0c\u7136\u540e\u901a\u8fc7 xdc \u628a\u4fe1\u53f7\u7ed1\u5b9a\u5230\u5f15\u811a\u4e0a\uff0c\u7136\u540e\u5f15\u811a\u8fde\u63a5\u4e86\u4e00\u4e2a\u5916\u90e8\u7684 SPI Flash\u3002\u4f46\u7531\u4e8e Cfg Flash \u6bd4\u8f83\u7279\u6b8a\uff0c\u6240\u4ee5\u4fe1\u53f7\u4ece AXI Quad SPI \u76f4\u63a5\u8fde\u5230 STARTUP \u7cfb\u5217\u7684 primitive \u4e0a\u3002\u5982\u679c\u662f\u91c7\u7528 STARTUPE2 \u539f\u8bed\u7684 7 \u7cfb\u5217\u7684 FPGA\uff0c\u90a3\u4e48\u53ea\u6709\u65f6\u949f\u4f1a\u901a\u8fc7 STARTUPE2 pritimive \u8fde\u63a5\u5230 SPI Flash \u4e0a\uff0c\u5176\u4ed6\u6570\u636e\u4fe1\u53f7\u8fd8\u662f\u6b63\u5e38\u901a\u8fc7\u9876\u5c42\u7ed1\u5b9a\uff1b\u5982\u679c\u662f\u91c7\u7528 STARTUPE3 \u539f\u8bed\u7684 UltraScale \u7cfb\u5217\u7684 FPGA\uff0c\u90a3\u4e48\u65f6\u949f\u548c\u6570\u636e\u90fd\u901a\u8fc7 STARTUPE3 primitive \u8fde\u63a5\u5230 SPI Flash\u3002</p>"},{"location":"hardware/spi/#virtex-ultrascale","title":"Virtex UltraScale+ \u65f6\u5e8f","text":"<p>\u628a\u4fe1\u53f7\u8fde\u597d\u4e86\u53ea\u662f\u7b2c\u4e00\u6b65\uff0c\u56e0\u4e3a\u5916\u8bbe\u5bf9\u65f6\u5e8f\u8981\u6c42\u6bd4\u8f83\u590d\u6742\uff0c\u5982\u679c\u7528\u4e00\u4e2a\u6bd4\u8f83\u9ad8\u76f4\u63a5\u8dd1\uff0c\u5f88\u5927\u53ef\u80fd\u5c31\u8bfb\u53d6\u5230\u9519\u8bef\u7684\u6570\u636e\u4e86\u3002AXI Quad SPI \u5df2\u7ecf\u5728\u751f\u6210\u7684\u6587\u4ef6\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6837\u4f8b\u7684 xdc\uff0c\u5728\u6587\u6863\u91cc\u4e5f\u6709\u4f53\u73b0\u3002\u5bf9\u4e8e Virtex Ultrascale+ \u7cfb\u5217\u7684 FPGA\uff0c\u5b83\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#### All the delay numbers have to be provided by the user\n\n#### Following are the SPI device parameters\n#### Max Tco\nset tco_max 7\n#### Min Tco\nset tco_min 1\n#### Setup time requirement\nset tsu 2\n#### Hold time requirement\nset th 3\n#####################################################################################################\n# STARTUPE3 primitive included inside IP for US+                                                             #\n#####################################################################################################\nset tdata_trace_delay_max 0.25\nset tdata_trace_delay_min 0.25\nset tclk_trace_delay_max 0.2\nset tclk_trace_delay_min 0.2\n\ncreate_generated_clock -name clk_sck -source [get_pins -hierarchical *axi_quad_spi_0/ext_spi_clk] [get_pins -hierarchical */CCLK] -edges {3 5 7}\nset_input_delay -clock clk_sck -max [expr $tco_max + $tdata_trace_delay_max + $tclk_trace_delay_max] [get_pins -hierarchical *STARTUP*/DATA_IN[*]] -clock_fall;\nset_input_delay -clock clk_sck -min [expr $tco_min + $tdata_trace_delay_min + $tclk_trace_delay_min] [get_pins -hierarchical *STARTUP*/DATA_IN[*]] -clock_fall;\nset_multicycle_path 2 -setup -from clk_sck -to [get_clocks -of_objects [get_pins -hierarchical */ext_spi_clk]]\nset_multicycle_path 1 -hold -end -from clk_sck -to [get_clocks -of_objects [get_pins -hierarchical */ext_spi_clk]]\nset_output_delay -clock clk_sck -max [expr $tsu + $tdata_trace_delay_max - $tclk_trace_delay_min] [get_pins -hierarchical *STARTUP*/DATA_OUT[*]];\nset_output_delay -clock clk_sck -min [expr $tdata_trace_delay_min - $th - $tclk_trace_delay_max] [get_pins -hierarchical *STARTUP*/DATA_OUT[*]];\nset_multicycle_path 2 -setup -start -from [get_clocks -of_objects [get_pins -hierarchical */ext_spi_clk]] -to clk_sck\nset_multicycle_path 1 -hold -from [get_clocks -of_objects [get_pins -hierarchical */ext_spi_clk]] -to clk_sck\n</code></pre> <p>\u5206\u6bb5\u6765\u770b\u8fd9\u4e2a xdc \u90fd\u505a\u4e86\u4ec0\u4e48\uff1a</p> <pre><code>create_generated_clock -name clk_sck -source [get_pins -hierarchical *axi_quad_spi_0/ext_spi_clk] [get_pins -hierarchical */CCLK] -edges {3 5 7}\n</code></pre> <p>\u9996\u5148\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65f6\u949f <code>clk_sck</code>\u3002CCLK \u662f STARTUP \u8f93\u51fa\u7684\u5b9e\u9645\u65f6\u949f\uff0c\u4f1a\u8fde\u63a5\u5230 Cfg Flash \u7684\u65f6\u949f\u4fe1\u53f7\u4e0a\u3002\u800c AXI Quad SPI \u7684 ext_spi_clk \u4f1a\u8f93\u51fa\u5230 CCLK \u4e0a\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f\u4e00\u4e2a\u751f\u6210\u7684\u65f6\u949f\uff0c\u5e76\u4e14\u6307\u5b9a\u4e0a\u4e0b\u8fb9\u6cbf\u7684\u4f4d\u7f6e\u3002<code>edges</code> \u53c2\u6570\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u8868\u793a\u4e0a\u5347\u3001\u4e0b\u964d\u548c\u4e0a\u5347\u6cbf\u5206\u522b\u7684\u4f4d\u7f6e\u30021 \u8868\u793a\u6e90\u65f6\u949f\u7684\u7b2c\u4e00\u4e2a\u4e0a\u5347\u6cbf\uff0c2 \u8868\u793a\u6e90\u65f6\u949f\u7684\u7b2c\u4e00\u4e2a\u4e0b\u964d\u6cbf\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6240\u4ee5 {3, 5, 7} \u7684\u610f\u601d\u5c31\u662f\u9891\u7387\u51cf\u534a\uff0c\u76f8\u4f4d\u5dee\u534a\u4e2a\u5468\u671f\u3002</p> <p>\u63a5\u7740\u6700\u4e3b\u8981\u7684\u5c31\u662f\uff0c\u600e\u4e48\u8bbe\u7f6e\u5ef6\u8fdf\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4ee3\u7801\u4e2d\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e9b\u53c2\u6570\uff1a</p> <pre><code>#### Max Tco\nset tco_max 7\n#### Min Tco\nset tco_min 1\n#### Setup time requirement\nset tsu 2\n#### Hold time requirement\nset th 3\n\n#### Trace delay\nset tdata_trace_delay_max 0.25\nset tdata_trace_delay_min 0.25\nset tclk_trace_delay_max 0.2\nset tclk_trace_delay_min 0.2\n</code></pre> <p>\u9996\u5148\u662f $t_{co}$\uff0c\u8868\u793a\u7684\u662f SPI Flash \u7684\u65f6\u949f\u5230\u8f93\u51fa\u7684\u5ef6\u8fdf\u3002\u4ee5 SPI Flash \u578b\u53f7 Micron MT25QU02GCBB8E12-0SIT \u4e3a\u4f8b\u5b50\uff0c\u53ef\u4ee5\u4ece\u5b83\u7684 Datasheet \u770b\u5230\uff0c\u65f6\u949f\u5230\u8f93\u51fa\u7684\u5ef6\u8fdf\u5e94\u8be5\u662f Max 7ns\uff1a</p> <pre><code>Clock LOW to output valid under 30pF Max 7ns\nClock LOW to output valid under 10pF Max 6ns\n</code></pre> <p>\u56e0\u6b64 <code>tco_max</code> \u8bbe\u4e3a 7\uff0c<code>tco_min</code> \u9ed8\u8ba4\u5373\u53ef\uff0c\u56e0\u4e3a Datasheet \u4e2d\u6ca1\u6709\u505a\u8981\u6c42\u3002</p> <p>\u7136\u540e $t_{su}$ \u548c $t_h$ \u5219\u662f\u8f93\u5165\u7684 setup \u548c hold time\u3002\u7c7b\u4f3c\u7684\uff0c\u53ef\u4ee5\u67e5\u5230 SPI Flash \u7684\u53c2\u6570\uff1a</p> <pre><code>Data in setup time Min 2.5ns\nData in hold time Min 2ns\n</code></pre> <p>\u6240\u4ee5 <code>tsu</code> \u8bbe\u4e3a 2.5\uff0c<code>th</code> \u8bbe\u4e3a 2\u3002</p> <p>\u63a5\u4e0b\u6765\u5219\u662f tdata \u548c tclk \u7684 trace delay\u3002\u8fd9\u6307\u7684\u662f\u4ece FPGA \u5f15\u811a\u5230 SPI Flash \u5f15\u811a\u7684\u4fe1\u53f7\u4f20\u8f93\u5ef6\u8fdf\u3002\u8fd9\u4e2a\u5ef6\u8fdf\u53ef\u4ee5\u4ece\u677f\u5b50\u7684\u5e03\u7ebf\u4e0a\u6d4b\u91cf\u957f\u5ea6\u6765\u4f30\u8ba1\u51fa\u6765\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u4f30\u7b97\u65b9\u6cd5\uff1a\u5149\u901f $3*10^8 \\mathrm{m/s}$\uff0c\u5047\u8bbe\u7535\u4fe1\u53f7\u4f20\u64ad\u901f\u5ea6\u662f\u5149\u901f\u7684\u4e00\u534a\uff0c\u53ef\u4ee5\u5f97\u5230\u5ef6\u8fdf\u548c\u957f\u5ea6\u7684\u6bd4\u503c\uff1a $0.06 \\mathrm{ns/cm} = 0.15 \\mathrm{ns/inch}$\u3002</p> <p>\u4e0b\u9762\u8ba8\u8bba\u8fd9\u4e9b\u53d8\u91cf\u5982\u4f55\u53c2\u4e0e\u5230 input/output delay \u7684\u8ba1\u7b97\u4e2d\u3002</p> <p>\u9996\u5148\u8003\u8651 input delay\u3002\u5b83\u6307\u7684\u662f\uff0c\u4ece SPI Flash \u5230 FPGA \u7684\u6570\u636e\uff0c\u76f8\u5bf9\u4e8e\u65f6\u949f\u7684\u5ef6\u8fdf\u3002\u8fd9\u4e2a\u5ef6\u8fdf\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a</p> <ol> <li>\u4ece FPGA \u8f93\u51fa\u7684\u65f6\u949f CCLK \u5230 SPI Flash \u7684\u65f6\u949f\u6709\u5ef6\u8fdf $t_{clk}$\uff0c\u4e0b\u56fe <code>a -&gt; b</code></li> <li>\u4ece SPI Flash \u7684\u65f6\u949f\u5230\u6570\u636e\u8f93\u51fa\u6709\u5ef6\u8fdf $t_{co}$\uff0c\u4e0b\u56fe <code>b -&gt; c</code></li> <li>\u4ece SPI Flash \u7684\u6570\u636e\u5230 FPGA \u7684\u6570\u636e\u8f93\u5165\u6709\u5ef6\u8fdf $t_{data}$\uff0c\u4e0b\u56fe <code>c -&gt; d</code></li> </ol> <pre><code>{\n  signal:\n    [\n      { name: \"clk_fpga\", wave: \"p..\", node: \".a\" },\n      { name: \"clk_flash\", wave: \"p...\", node: \"..b\", phase: 2.7 },\n      { name: \"data_flash\", wave: \"3456\", node: \"..c\", phase: 2.5 },\n      { name: \"data_fpga\", wave: \"3456\", node: \"..d\", phase: 2.3 },\n    ],\n  config: { hscale: 3 },\n}\n</code></pre> <p>\u56e0\u6b64\u603b\u5ef6\u8fdf\u5c31\u662f $t_{clk}+t_{co}+t_{data}$\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>set_input_delay -clock clk_sck -max [expr $tco_max + $tdata_trace_delay_max + $tclk_trace_delay_max] [get_pins -hierarchical *STARTUP*/DATA_IN[*]] -clock_fall;\nset_input_delay -clock clk_sck -min [expr $tco_min + $tdata_trace_delay_min + $tclk_trace_delay_min] [get_pins -hierarchical *STARTUP*/DATA_IN[*]] -clock_fall;\n</code></pre> <p>\u63a5\u4e0b\u6765\u8981\u8003\u8651 output delay\u3002\u867d\u7136 output delay \u4e5f\u6709 min \u548c max\uff0c\u4f46\u5176\u542b\u4e49\u6709\u6240\u533a\u522b\uff0c\u9700\u8981\u5206\u522b\u8003\u8651\u3002</p> <p>\u9996\u5148\u662f max\uff0c\u5b83\u5bf9\u5e94\u7684\u662f setup time\u3002\u5982\u679c\u5b9a\u4e49\u65f6\u95f4 0 \u4e3a\u65f6\u949f\u7684\u4e0a\u5347\u6cbf\uff0c\u6cbf\u66f4\u65e9\u7684\u65f6\u95f4\u4e3a\u6b63\u7684\u65f6\u95f4\u8f74\uff0c\u6cbf\u66f4\u665a\u7684\u65f6\u95f4\u4e3a\u8d1f\u7684\u65f6\u95f4\u8f74\u3002\u671f\u671b\u76ee\u6807\u662f\uff0c\u6570\u636e\u5230\u8fbe\u5bc4\u5b58\u5668\u8f93\u5165\u7684\u65f6\u95f4\u5927\u4e8e setup time\uff0c\u6b64\u65f6\u53ef\u4ee5\u6ee1\u8db3 setup \u6761\u4ef6\u3002\u4e3a\u4e86\u8ba1\u7b97 max output delay\uff0c\u9700\u8981\u8003\u8651\u7684\u662f\u4ece FPGA \u6570\u636e\u8f93\u51fa\u5230 SPI Flash \u4e0a\u65f6\u949f\u7684\u5ef6\u8fdf\u3002</p> <p>\u5047\u8bbe FPGA CCLK \u65f6\u949f\u4e0a\u5347\u6cbf\u5728 $0$ \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>a</code>\uff09\uff0c\u90a3\u4e48 SPI Flash \u65f6\u949f\u4e0a\u5347\u6cbf\u5728 $-t_{clk}$ \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>b</code>\uff09\u3002\u5047\u8bbe FPGA \u6570\u636e\u8f93\u51fa\u65f6\u523b\u4e3a $t_0$\uff08\u901a\u5e38\u4e3a\u6b63\uff0c\u4e0b\u56fe\u7684 <code>c</code>\uff09\uff0c\u90a3\u4e48 FPGA \u6570\u636e\u8f93\u51fa\u5230\u8fbe SPI Flash \u5728 $t_0-t_{data}$ \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>d</code>\uff09\uff0c\u4e3a\u4e86\u4fdd\u8bc1 $t_0-t_{data}$ \u5728 $-t_{clk}$ \u65f6\u523b\u4e4b\u524d\uff08\u4e0b\u56fe\u7684 <code>d -&gt; b</code>\uff09\u81f3\u5c11 $t_{su}$ \u65f6\u95f4\u5230\u8fbe\uff0c\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"clk_fpga\", wave: \"p..\", node: \".a\" },\n      { name: \"clk_flash\", wave: \"p...\", node: \"..b\", phase: 2.7 },\n      { name: \"data_fpga\", wave: \"3456\", node: \"..c\", phase: 3.6 },\n      { name: \"data_flash\", wave: \"3456\", node: \"..d\", phase: 3.4 }\n    ],\n  config: { hscale: 3 },\n}\n</code></pre> <p>$$ t_0 - t_{data} &gt; -t_{clk} + t_{su} $$</p> <p>\u5316\u7b80\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $t_0 &gt; t_{data} + t_{su} - t_{clk}$\uff0c\u5982\u679c\u8003\u8651\u6781\u7aef\u60c5\u51b5\uff0c\u53f3\u4fa7 $t_{data}$ \u53d6\u6700\u5927\u503c\uff0c$t_{clk}$ \u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7ea6\u675f\uff1a</p> <pre><code>set_output_delay -clock clk_sck -max [expr $tsu + $tdata_trace_delay_max - $tclk_trace_delay_min] [get_pins -hierarchical *STARTUP*/DATA_OUT[*]];\n</code></pre> <p>\u63a5\u4e0b\u6765\u8003\u8651 output delay \u7684 min\uff0c\u8fd9\u5bf9\u5e94\u7684\u662f hold time\u3002\u6b64\u65f6\u7684\u76ee\u6807\u662f\u6570\u636e\u5230\u8fbe SPI Flash \u5bc4\u5b58\u5668\u7684\u65f6\u5019\uff0c\u8ddd\u79bb\u4e0a\u5347\u6cbf\u65f6\u95f4\u8d85\u8fc7\u4e86 $t_h$\u3002\u6309\u7167\u540c\u6837\u7684\u5047\u8bbe\uff0c\u5982\u679c FPGA CCLK \u65f6\u949f\u4e0a\u5347\u6cbf\u5728 0 \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>a</code>\uff09\uff0c\u90a3\u4e48 SPI Flash \u65f6\u949f\u4e0a\u5347\u6cbf\u5728 $-t_{clk}$ \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>b</code>\uff09\u3002\u5047\u8bbe FPGA \u6570\u636e\u8f93\u51fa\u65f6\u523b\u4e3a $t_0$\uff08\u4e0b\u56fe\u7684 <code>c</code>\uff09\uff0c\u90a3\u4e48 FPGA \u6570\u636e\u8f93\u51fa\u5230\u8fbe SPI Flash \u5728 $t_0-t_{data}$ \u65f6\u523b\uff08\u4e0b\u56fe\u7684 <code>d</code>\uff09\uff0c\u4e3a\u4e86\u6ee1\u8db3 hold \u6761\u4ef6\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>{\n  signal:\n    [\n      { name: \"clk_fpga\", wave: \"p..\", node: \".a\" },\n      { name: \"data_fpga\", wave: \"3456\", node: \"..c\", phase: 2.6 },\n      { name: \"clk_flash\", wave: \"p...\", node: \"..b\", phase: 2.3 },\n      { name: \"data_flash\", wave: \"3456\", node: \"..d\", phase: 2.2 },\n    ],\n  config: { hscale: 3 },\n}\n</code></pre> <p>$$ t_0 - t_{data} &lt; -t_{clk} - t_h $$</p> <p>\u5316\u7b80\u4ee5\u540e\uff0c\u53ef\u4ee5\u5f97\u5230 $t_0 &lt; t_{data} - t_{clk} - t_h$\uff0c\u6309\u7167\u6781\u9650\u6765\u53d6\uff0c$t_{data}$ \u53d6\u6700\u5c0f\u503c\uff0c$t_{clk}$ \u53d6\u6700\u5927\u503c\uff0c\u5c31\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u65f6\u5e8f\u7ea6\u675f\uff1a</p> <pre><code>set_output_delay -clock clk_sck -min [expr $tdata_trace_delay_min - $th - $tclk_trace_delay_max] [get_pins -hierarchical *STARTUP*/DATA_OUT[*]];\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0 FPGA \u548c SPI Flash \u4e4b\u95f4\u7684\u6b63\u5e38\u901a\u8baf\u4e86\u3002\u8fd9\u91cc\u6bd4\u8f83\u7ed5\u7684\u5c31\u662f\u65f6\u95f4\u8f74\u7684\u5b9a\u4e49\uff0c\u548c\u5e73\u5e38\u601d\u8003\u7684\u65b9\u5411\u662f\u53cd\u8fc7\u6765\u7684\u3002\u800c\u4e14\uff0c\u8fd9\u91cc\u7684 min \u548c max \u5e76\u4e0d\u662f\u6307 $[\\min, \\max]$\uff0c\u800c\u662f $(-\\inf, \\min] \\cup [\\max, \\inf)$\u3002\u4ee3\u5165\u4e0a\u9762\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5f97\u5230 $\\max=2.05, \\min=-2.95, t_0 \\in (\\inf, -2.95] \\cup [2.05, \\inf)$\u3002\u5982\u679c\u53d8\u5316\u7684\u65f6\u523b\u8ddd\u79bb\u65f6\u949f\u4e0a\u5347\u6cbf\u592a\u63a5\u8fd1\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5728 SPI Flash \u4fa7\u51fa\u73b0\u4e0d\u6ee1\u8db3 setup \u6216\u8005 hold \u7ea6\u675f\u7684\u60c5\u51b5\u3002</p> <p>\u4e5f\u53ef\u4ee5\u6362\u4e2a\u89d2\u5ea6\u6765\u7406\u89e3 min \u548c max\uff1a\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5468\u671f\u7684\u65f6\u949f\u548c\u6570\u636e\u6765\u8bf4\uff0c\u6570\u636e\u76f8\u5bf9\u65f6\u949f\u6709\u4e00\u4e2a\u5ef6\u8fdf\uff0c\u8fd9\u4e2a\u5ef6\u8fdf\u4e0d\u80fd\u592a\u5c0f\uff0c\u81f3\u5c11\u8981\u6ee1\u8db3 hold\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u7684\u5ef6\u8fdf\uff1b\u540c\u65f6\u8fd9\u4e2a\u5ef6\u8fdf\u4e0d\u80fd\u592a\u5927\uff0c\u6700\u591a\u9700\u8981\u6ee1\u8db3\u4e0b\u4e00\u4e2a\u65f6\u949f\u4e0a\u5347\u6cbf\u7684 setup\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u7684\u5ef6\u8fdf\u3002\u5982\u679c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u90a3\u5c31\u662f\u5ef6\u8fdf\u5728\u4e00\u4e2a $[\\min, \\max]$ \u7684\u8303\u56f4\u5185\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u5c31\u9700\u8981\u628a\u65f6\u949f\u5468\u671f\u7eb3\u5165\u5230 $\\max$ \u7684\u8ba1\u7b97\u4e2d\uff0c\u6bd4\u5982 $\\max=t_c-t_{su}$\u3002\u5982\u679c\u628a\u5750\u6807\u8f74\u4fee\u6539\u4e00\u4e0b\uff0c\u539f\u70b9\u53d8\u6210\u539f\u6765\u7684\u4e0b\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u4e0a\u5347\u6cbf\uff0cx \u7684\u6b63\u65b9\u5411\u53d8\u6210\u53cd\u5411\uff0c\u6b64\u65f6\u516c\u5f0f\u91cc\u4e0d\u4f1a\u51fa\u73b0\u65f6\u949f\u5468\u671f\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0a\u9762\u7684\u5f62\u5f0f\u4e86\u3002</p>"},{"location":"hardware/spi/#artix-7","title":"Artix 7 \u65f6\u5e8f","text":"<p>\u5bf9\u4e8e\u66f4\u5e38\u89c1\u7684 7 Series FPGA\uff0c\u6bd4\u5982 Artix 7\uff0c\u5b83\u91c7\u7528\u7684\u662f STARTUPE2 \u539f\u8bed\uff0c\u53ea\u6709\u65f6\u949f\u662f\u901a\u8fc7 STARTUPE2 \u539f\u8bed\u7684 USRCCLKO \u4fe1\u53f7\u4f20\u9012\u5230 CCLK \u5f15\u811a\u4e0a\u7684\uff0c\u5176\u4ed6\u6570\u636e\u4fe1\u53f7\u90fd\u662f\u9700\u8981\u5728\u9876\u5c42\u4fe1\u53f7\u7ed1\u5b9a\u5bf9\u5e94\u7684\u5f15\u811a\u3002\u5728 AXI Quad SPI \u6587\u6863\u4e2d\uff0c\u63cf\u8ff0\u4e86 STARTUPE2 \u6240\u9700\u8981\u7684\u65f6\u5e8f\u7ea6\u675f\uff1a</p> <pre><code># You must provide all the delay numbers\n# CCLK delay is 0.5, 6.7 ns min/max for K7-2; refer Data sheet\n# Consider the max delay for worst case analysis\nset cclk_delay 6.7\n# Following are the SPI device parameters\n# Max Tco\nset tco_max 7\n# Min Tco\nset tco_min 1\n# Setup time requirement\nset tsu 2\n# Hold time requirement\nset th 3\n# Following are the board/trace delay numbers\n# Assumption is that all Data lines are matched\nset tdata_trace_delay_max 0.25\nset tdata_trace_delay_min 0.25\nset tclk_trace_delay_max 0.2\nset tclk_trace_delay_min 0.2\n### End of user provided delay numbers\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e00\u90e8\u5206\u548c\u4e0a\u9762 UltraScale+ \u90e8\u5206\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u591a\u4e00\u4e2a <code>cclk_delay</code> \u53d8\u91cf\uff0c\u8fd9\u662f\u56e0\u4e3a Artix 7 \u4e2d\uff0c\u65f6\u949f\u53ea\u80fd\u521b\u5efa\u5230 USRCCLKO \u5f15\u811a\u4e0a\u3002\u4f46\u662f\u5b9e\u9645 SPI Flash \u63a5\u6536\u5230\u7684\u65f6\u949f\uff0c\u9996\u5148\u4ece USRCCLKO \u5230 CCLK \u5f15\u811a\uff0c\u7136\u540e\u518d\u901a\u8fc7 PCB \u4e0a\u7684\u7ebf\u4f20\u64ad\u5230 SPI Flash\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2a\u504f\u79fb\uff0c\u8fd9\u4e2a\u504f\u79fb\u5c31\u662f USRCCLKO \u5230 CCLK \u7684\u5ef6\u8fdf\uff0c\u53ef\u4ee5\u5728 Artix 7 Data Sheet \u91cc\u9762\u770b\u5230\uff1a\u5bf9\u4e8e 1.0V\uff0c-2 \u901f\u5ea6\u7684 FPGA\uff0c\u8fd9\u4e2a\u5ef6\u8fdf\u6700\u5c0f\u503c\u4e3a 0.50ns\uff0c\u6700\u5927\u503c\u4e3a 6.70ns\uff0c\u8fd9\u91cc\u91c7\u7528\u4e86\u6700\u5927\u503c\u3002</p> <p>\u5269\u4e0b\u7684\u7ea6\u675f\uff0c\u9664\u4e86\u65f6\u949f\u90e8\u5206\u4ee5\u5916\uff0c\u548c\u4e0a\u9762\u5206\u6790\u7684 UltraScale+ \u65f6\u5e8f\u7ea6\u675f\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684\u3002\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u8fd9\u91cc\u7ea6\u675f\u4e86\u4ece AXI Quad SPI \u5230 STARTUPE2 \u7684\u8def\u7531\u65f6\u5ef6\uff0c\u4ece 0.1ns \u5230 1.5ns\uff0c\u7136\u540e\u53c8\u4ece USRCCLKO \u521b\u5efa\u4e86\u4e00\u4e2a\u5206\u9891 + \u5ef6\u8fdf <code>cclk_delay</code> \u7eb3\u79d2\u7684\u65f6\u949f\uff0c\u4f5c\u4e3a SPI Flash \u4e0a SCK \u5f15\u811a\u7684\u65f6\u949f\u3002</p> <pre><code># this is to ensure min routing delay from SCK generation to STARTUP input\n# User should change this value based on the results\n# having more delay on this net reduces the Fmax\nset_max_delay 1.5 -from [get_pins -hier *SCK_O_reg_reg/C] -to [get_pins -hier\n*USRCCLKO] -datapath_only\nset_min_delay 0.1 -from [get_pins -hier *SCK_O_reg_reg/C] -to [get_pins -hier\n*USRCCLKO]\n# Following command creates a divide by 2 clock\n# It also takes into account the delay added by STARTUP block to route the CCLK\ncreate_generated_clock -name clk_sck -source [get_pins -hierarchical\n*axi_quad_spi_1/ext_spi_clk] [get_pins -hierarchical *USRCCLKO] -edges {3 5 7}\n-edge_shift [list $cclk_delay $cclk_delay $cclk_delay]\n# Data is captured into FPGA on the second rising edge of ext_spi_clk after the SCK\nfalling edge\n\n# Data is driven by the FPGA on every alternate rising_edge of ext_spi_clk\nset_input_delay -clock clk_sck -max [expr $tco_max + $tdata_trace_delay_max +\n$tclk_trace_delay_max] [get_ports IO*_IO] -clock_fall;\nset_input_delay -clock clk_sck -min [expr $tco_min + $tdata_trace_delay_min +\n$tclk_trace_delay_min] [get_ports IO*_IO] -clock_fall;\nset_multicycle_path 2 -setup -from clk_sck -to [get_clocks -of_objects [get_pins\n-hierarchical */ext_spi_clk]]\nset_multicycle_path 1 -hold -end -from clk_sck -to [get_clocks -of_objects [get_pins\n-hierarchical */ext_spi_clk]]\n# Data is captured into SPI on the following rising edge of SCK\n# Data is driven by the IP on alternate rising_edge of the ext_spi_clk\nset_output_delay -clock clk_sck -max [expr $tsu + $tdata_trace_delay_max -\n$tclk_trace_delay_min] [get_ports IO*_IO];\nset_output_delay -clock clk_sck -min [expr $tdata_trace_delay_min - $th -\n$tclk_trace_delay_max] [get_ports IO*_IO];\nset_multicycle_path 2 -setup -start -from [get_clocks -of_objects [get_pins\n-hierarchical */ext_spi_clk]] -to clk_sck\nset_multicycle_path 1 -hold -from [get_clocks -of_objects [get_pins -hierarchical */\next_spi_clk]] -to clk_sck\n</code></pre> <p>\u4e00\u4e2a Artix 7 \u4e0a\u914d\u7f6e STARTUP SPI Flash \u7684\u4f8b\u5b50 io_timings.xdc \u53ef\u4f9b\u53c2\u8003\u3002</p>"},{"location":"software/atomic_instructions/","title":"\u539f\u5b50\u6307\u4ee4","text":"<p>\u73b0\u5728\u7684\u5904\u7406\u5668\uff0c\u4e00\u822c\u4f1a\u63d0\u4f9b\u5982\u4e0b\u51e0\u79cd\u5f62\u5f0f\u7684\u539f\u5b50\u6307\u4ee4\uff1a</p> <ol> <li>LL(Load-Linked)/SC(Store-Conditional)</li> <li>CAS(Compare And Swap)</li> <li>AMO(Atomic Memory Operation)</li> <li>HTM(Hardware Transactional Memory)</li> </ol> <p>\u5b83\u4eec\u5728\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u786c\u4ef6\u5b9e\u73b0\u4e0a\u6709\u6240\u533a\u522b\uff0c\u4e0b\u9762\u6765\u8ba8\u8bba\u8fd9\u4e9b\u539f\u5b50\u6307\u4ee4\u3002</p>"},{"location":"software/atomic_instructions/#_2","title":"\u80cc\u666f","text":"<p>\u9996\u5148\u8ba8\u8bba\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u9700\u8981\u6709\u539f\u5b50\u6307\u4ee4\u3002\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u9700\u8981\u5bf9\u5185\u5b58\u4e2d\u540c\u4e00\u4e2a\u5730\u5740\u7684\u6570\u636e\u8fdb\u884c\u52a0\u4e00\u7684\u64cd\u4f5c\u3002\u5728\u5904\u7406\u5668\u4e2d\uff0c\u52a0\u4e00\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u5206\u4e3a\u4e09\u6b65\uff1a</p> <ol> <li>\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u5f53\u524d\u7684\u503c</li> <li>\u6c42\u503c\u52a0\u4e00\u7684\u7ed3\u679c</li> <li>\u628a\u52a0\u4e00\u7684\u7ed3\u679c\u5199\u5165\u5230\u5185\u5b58\u4e2d</li> </ol> <p>\u4f46\u662f\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u662f\u5206\u522b\u8fdb\u884c\u7684\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u7ebf\u7a0b\u4e00\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u503c\u7b49\u4e8e 0</li> <li>\u7ebf\u7a0b\u4e8c\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u503c\u7b49\u4e8e 0</li> <li>\u7ebf\u7a0b\u4e00\u8ba1\u7b97 0 \u52a0 1 \u7b49\u4e8e 1</li> <li>\u7ebf\u7a0b\u4e8c\u8ba1\u7b97 0 \u52a0 1 \u7b49\u4e8e 1</li> <li>\u7ebf\u7a0b\u4e00\u628a 1 \u5199\u5165\u5185\u5b58</li> <li>\u7ebf\u7a0b\u4e8c\u628a 1 \u5199\u5165\u5185\u5b58</li> </ol> <p>\u4e8e\u662f\u52a0\u6cd5\u7684\u7ed3\u679c\u5c31\u88ab\u4e22\u5f03\u4e86\u3002\u4e0b\u9762\u7528 OpenMP \u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\nint count = 0;\nint main() {\n#pragma omp parallel for\n  for (int i = 0; i &lt; 100000; i++) {\n    count++;\n  }\n\n  printf(\"%d\\n\", count);\n  return 0;\n}\n</code></pre> <p>\u5982\u679c\u7528\u591a\u6838\u6267\u884c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u662f\u4e00\u4e2a\u8fdc\u5c0f\u4e8e 100000 \u7684\u7ed3\u679c\u3002\u5982\u679c\u628a\u7a0b\u5e8f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6838\u5fc3\u4e0a\uff08<code>numactl -C 0</code>\uff09\uff0c\u5c31\u4f1a\u5f97\u5230\u6b63\u786e\u7684 100000 \u7684\u7ed3\u679c\u3002\u56e0\u6b64\u9700\u8981\u7528\u539f\u5b50\u6307\u4ee4\u6765\u4fdd\u8bc1\u66f4\u65b0\u7684\u539f\u5b50\u6027\u3002</p> <p>\u5728\u8ba8\u8bba\u539f\u5b50\u6307\u4ee4\u7684\u786c\u4ef6\u5b9e\u73b0\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u7684\u5185\u5bb9\u3002\u5982\u679c\u5bf9\u8fd9\u65b9\u9762\u8fd8\u7f3a\u4e4f\u4e86\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003 \u7f13\u5b58\u4e00\u81f4\u6027 \u7684\u5185\u5bb9\u3002</p>"},{"location":"software/atomic_instructions/#llsc","title":"LL/SC","text":""},{"location":"software/atomic_instructions/#_3","title":"\u5b9a\u4e49","text":"<p>LL/SC \u662f\u4e00\u5bf9\u6307\u4ee4\uff0c\u5176\u4e2d LL \u6307\u4ee4\u4ece\u5185\u5b58\u5730\u5740 read_addr \u4e2d\u8bfb\u53d6\u6570\u636e\u5230\u5bc4\u5b58\u5668 read_data\uff1bSC \u6307\u4ee4\u6267\u884c\u65f6\uff0c\u5982\u679c\u8981\u5199\u5165\u7684\u5185\u5b58\u5730\u5740 write_addr \u548c\u4e4b\u524d\u7528 LL \u6307\u4ee4\u8bfb\u53d6\u7684\u5185\u5b58\u5730\u5740 read_addr \u76f8\u540c\uff0c\u5e76\u4e14\u5728 LL \u6307\u4ee4\u540e\uff0c\u88ab LL \u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\uff08\u7c92\u5ea6\u53ef\u80fd\u662f 32 \u4f4d\uff0c\u4e5f\u53ef\u80fd\u66f4\u7c97\uff0c\u4f8b\u5982\u4e00\u4e2a\u7f13\u5b58\u884c\uff09\u6ca1\u6709\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u5199\u5165\u5bc4\u5b58\u5668 write_data \u7684\u503c\u5230\u540c\u6837\u7684\u5730\u5740 write_addr\uff1b\u5426\u5219\u5c31\u4e0d\u5199\u5165\u3002SC \u6307\u4ee4\u7684\u5199\u5165\u662f\u5426\u6210\u529f\uff0c\u4f1a\u901a\u8fc7\u5411\u76ee\u7684\u5bc4\u5b58\u5668 dest \u5199\u5165\u4e0d\u540c\u7684\u503c\u6765\u533a\u5206\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c SC \u5199\u5165\u6210\u529f\uff0c\u5c31\u4fdd\u8bc1\u4e86\u4ece LL \u5230 SC \u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u8fd9\u6bb5\u5185\u5b58\u6ca1\u6709\u88ab\u6539\u53d8\u3002</p>"},{"location":"software/atomic_instructions/#_4","title":"\u5e38\u89c1\u7528\u6cd5","text":"<p>LL/SC \u7684\u901a\u5e38\u7528\u6cd5\u662f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u8bfb - \u6539 - \u5199\uff08read-modify-write\uff09\u64cd\u4f5c\uff1a\u9996\u5148\u7528 LL \u6307\u4ee4\u8bfb\u53d6\u5185\u5b58\uff0c\u7136\u540e\u5bf9\u5bc4\u5b58\u5668\u8fdb\u884c\u8ba1\u7b97\uff0c\u518d\u7528 SC \u6307\u4ee4\u628a\u7ed3\u679c\u5199\u5165\u5185\u5b58\uff1a\u5982\u679c\u4e2d\u9014\u5185\u5b58\u7684\u503c\u88ab\u5176\u4ed6\u5904\u7406\u5668\u6838\u5fc3\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u7528 LL \u6307\u4ee4\u8bfb\u53d6\u7684\u7ed3\u679c\u662f\u65e7\u7684\uff0c\u7528\u7684\u4e5f\u662f\u65e7\u7684\u503c\u505a\u8ba1\u7b97\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u4e0d\u4f1a\u88ab SC \u5199\u8fdb\u53bb\uff1b\u5426\u5219\uff0c\u8bf4\u660e LL \u6307\u4ee4\u8bfb\u53d6\u7684\u503c\u548c\u5185\u5b58\u4e2d\u7684\u503c\u662f\u76f8\u540c\u7684\uff0cSC \u6307\u4ee4\u628a\u66f4\u65b0\u540e\u7684\u7ed3\u679c\u5199\u5165\u5230\u5185\u5b58\u4e2d\u3002</p> <p>\u56e0\u6b64 LL/SC \u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4f1a\u548c\u5faa\u73af\u653e\u5728\u4e00\u8d77\u7528\uff1a\u5982\u679c SC \u5931\u8d25\uff0c\u5c31\u91cd\u65b0\u5f00\u59cb\u8bfb - \u6539 - \u5199\u64cd\u4f5c\uff0c\u76f4\u5230 SC \u6210\u529f\u3002\u7528 LL/SC \u5b9e\u73b0\u5bf9\u5185\u5b58\u8fdb\u884c\u539f\u5b50\u52a0\u4e00\u64cd\u4f5c\uff08Atomic Add One\uff09\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>loop:\n    # Read\n    ll data, addr\n    # Modify\n    add data, data, 1\n    # Write\n    sc result, data, addr\n    # Try again if SC failed\n    goto loop if failed\n</code></pre>"},{"location":"software/atomic_instructions/#_5","title":"\u6307\u4ee4\u96c6\u67b6\u6784\u652f\u6301","text":"<p>\u5728 RISC-V \u7684 A \u6269\u5c55\u4e2d\uff0cLL \u6307\u4ee4\u53eb\u505a LR\uff08Load-Reserved\uff09\uff0cSC \u6307\u4ee4\u8fd8\u662f\u53eb\u505a SC\u3002\u4e0b\u9762\u662f RISC-V \u6307\u4ee4\u96c6\u624b\u518c\u4e2d\u7ed9\u51fa\u7684\u4e00\u6bb5\u7528 LL/SC \u5b9e\u73b0\u539f\u5b50\u6bd4\u8f83\u548c\u5199\u5165\uff08Atomic Compare And Set\uff09\u64cd\u4f5c\u7684\u4ee3\u7801\uff1a</p> <pre><code>    # a0 holds address of memory location\n    # a1 holds expected value\n    # a2 holds desired value\n    # a0 holds return value, 0 if successful, !0 otherwise\ncas:\n    lr.w t0, (a0)        # Load original value.\n    bne t0, a1, fail     # Doesn't match, so fail.\n    sc.w t0, a2, (a0)    # Try to update.\n    bnez t0, cas         # Retry if store-conditional failed.\n    li a0, 0             # Set return to success.\n    jr ra                # Return.\nfail:\n    li a0, 1             # Set return to failure.\n    jr ra                # Return.\n</code></pre> <p>\u4ee3\u7801\u5229\u7528 LL/SC \u6307\u4ee4\uff0c\u628a a0 \u6307\u5411\u7684\u5185\u5b58\u7684\u503c\u548c a1 \u7684\u503c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u628a a2 \u5199\u5230 a0 \u6307\u5411\u7684\u5185\u5b58\uff0c\u8fd4\u56de\u6210\u529f\uff1b\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u4e0d\u4fee\u6539\u5185\u5b58\u7684\u503c\uff0c\u8fd4\u56de\u9519\u8bef\u3002</p> <p>\u9664\u4e86\u5185\u5b58\u88ab\u5176\u4ed6\u5904\u7406\u5668\u6838\u5fc3\u5199\u5165\u4f1a\u5bfc\u81f4 SC \u5931\u8d25\u4ee5\u5916\uff0c\u4e00\u4e9b\u6307\u4ee4\u96c6\u67b6\u6784\u5141\u8bb8\u7a0b\u5e8f\u624b\u52a8\u8ba9 SC \u5931\u8d25\uff0c\u4ee5 LoongArch \u4e3a\u4f8b\uff0c\u6807\u51c6\u8981\u6c42\uff1a</p> <p>LL.{W/D} \u6267\u884c\u65f6\u8bb0\u5f55\u4e0b\u8bbf\u95ee\u5730\u5740\u5e76\u7f6e\u4e0a\u4e00\u4e2a\u6807\u8bb0\uff08LLbit \u7f6e\u4e3a 1\uff09\uff0cSC.{W/D} \u6307\u4ee4\u6267\u884c\u65f6\u4f1a\u67e5\u770b LLbit\uff0c\u4ec5\u5f53 LLbit \u4e3a 1 \u65f6\u624d\u771f\u6b63\u4ea7\u751f\u5199\u52a8\u4f5c\uff0c\u5426\u5219\u4e0d\u5199\u3002\u5728\u914d\u5bf9\u7684 LL-SC \u6267\u884c\u671f\u95f4\uff0c\u4e0b\u5217\u4e8b\u4ef6\u4f1a\u8ba9 LLbit \u6e05 0:</p> <ul> <li>\u6267\u884c\u4e86 ERTN \u6307\u4ee4\u4e14\u6267\u884c\u65f6 CSR.LLBCTL \u4e2d\u7684 KLO \u4f4d\u4e0d\u7b49\u4e8e 1;</li> <li>\u5176\u5b83\u5904\u7406\u5668\u6838\u6216 Cache Coherent master \u5bf9\u8be5 LLbit \u5bf9\u5e94\u7684\u5730\u5740\u6240\u5728\u7684 Cache \u884c\u6267\u884c\u5b8c\u6210\u4e86\u4e00\u4e2a store \u64cd\u4f5c\u3002</li> </ul> <p>\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\uff0c\u5982\u679c\u5728 LL \u548c SC \u4e4b\u95f4\u89e6\u53d1\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u628a SC \u81ea\u52a8\u53d6\u6d88\u6389\uff0c\u8be6\u60c5\u53ef\u4ee5\u770b LoongArch \u7684 CSR.LLBCTL \u7684\u5b9a\u4e49\u3002</p> <p>\u5176\u4ed6\u5b9e\u73b0\u4e86 LL/SC \u7684\u6307\u4ee4\u96c6\u67b6\u6784\uff1a</p> <ul> <li>Alpha: ldl_l/stl_c, ldq_l/stq_c</li> <li>PowerPC/Power ISA: lwarx/stwcx, ldarx/stdcx</li> <li>MIPS: ll/sc, llwp/scwp(Double Width)</li> <li>ARM: ldrex/strex(ARMv6 &amp; ARMv7), ldxr/stxr(ARMv8)</li> <li>ARC: llock/scond</li> </ul> <p>\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u6839\u636e\u5904\u7406\u5668\u5b9e\u73b0\u4e0d\u540c\uff0c\u68c0\u6d4b\u5185\u5b58\u8bbf\u95ee\u7684\u7c92\u5ea6\u53ef\u80fd\u4e0d\u540c\u3002</p>"},{"location":"software/atomic_instructions/#_6","title":"\u786c\u4ef6\u5b9e\u73b0","text":"<p>\u5728\u5904\u7406\u5668\u4e2d\uff0cLL/SC \u7684\u5b9e\u73b0\u5e76\u4e0d\u590d\u6742\uff1a\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u4e0b\uff0c\u4fdd\u8bc1\u4e86\u5f53\u4e00\u4e2a\u7f13\u5b58\u884c\u88ab\u66f4\u65b0\u7684\u65f6\uff0c\u6240\u6709\u62e5\u6709\u8be5\u7f13\u5b58\u884c\u7684\u6838\u5fc3\u90fd\u4f1a\u88ab\u901a\u77e5\u5230\u3002\u56e0\u6b64\uff0cLL \u6307\u4ee4\u53ea\u9700\u8981\u5728\u8bfb\u53d6\u7f13\u5b58\u7684\u57fa\u7840\u4e0a\uff0c\u5728\u7f13\u5b58\u4e0a\u6253\u4e00\u4e2a\u6807\u8bb0\uff1b\u901a\u8fc7\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u5982\u679c\u53d1\u73b0\u6709\u5176\u4ed6\u6838\u5fc3\u8981\u5199\u5165 LL \u6307\u4ee4\u8bfb\u53d6\u7684\u7f13\u5b58\u884c\uff0c\u6216\u8005\u8be5\u7f13\u5b58\u884c\u8981\u88ab Evict\uff0c\u90a3\u5c31\u8bb0\u5f55\u4e00\u4e2a SC \u5931\u8d25\u6807\u8bb0\uff0c\u4f7f\u5f97\u4e0b\u4e00\u6b21 SC \u6307\u4ee4\u5931\u8d25\u3002\u5b9e\u73b0 SC \u6307\u4ee4\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u5b83\u7684\u5730\u5740\u662f\u5426\u548c LL \u6307\u4ee4\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5e76\u4e14\u6ca1\u6709\u89e6\u53d1 SC \u5931\u8d25\u6807\u8bb0\uff0c\u90a3\u5c31\u8fdb\u884c\u5b9e\u9645\u7684\u5199\u5165\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>Init() {\n    LLvalid = 0;\n    LLaddr = 0;\n}\n\nLL(addr) {\n    data = memory[addr];\n    LLaddr = addr;\n    LLvalid = 1;\n    return data;\n}\n\nSC(addr, data) {\n    if (LLaddr == addr &amp;&amp; LLvalid) {\n        memory[addr] = data;\n        return SUCCESS;\n    } else {\n        return FAIL;\n    }\n}\n\nInvalidate(addr) {\n    if (addr == LLaddr) {\n        LLvalid = 0;\n    }\n}\n</code></pre>"},{"location":"software/atomic_instructions/#_7","title":"\u6d3b\u9501","text":"<p>LL/SC \u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6f5c\u5728\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6d3b\u9501\uff1a\u5f53 LL \u548c SC \u4e4b\u95f4\u6267\u884c\u7684\u6307\u4ee4\u6bd4\u8f83\u591a\uff0c\u82b1\u8d39\u7684\u65f6\u95f4\u6bd4\u8f83\u957f\uff0c\u53ef\u80fd\u4f7f\u5f97 LL/SC \u4e00\u76f4\u88ab\u5176\u4ed6\u6838\u5fc3\u6253\u65ad\uff0c\u6ca1\u6709\u529e\u6cd5\u5b9e\u73b0\u8fdb\u5c55\u3002</p> <p>\u6b64\u5916\uff0c\u7f16\u5199 LL/SC \u7a0b\u5e8f\u7684\u65f6\u5019\u4e5f\u9700\u8981\u5c0f\u5fc3\uff0c\u907f\u514d\u5728\u4e2d\u95f4\u8fdb\u884c\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4 SC \u7684\u65f6\u5019\u603b\u662f\u5931\u8d25\uff1a\u4f8b\u5982\u5728 LL/SC \u4e2d\u9014\u8bbf\u95ee\u5176\u4ed6\u5185\u5b58\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 SC \u8981\u5199\u5165\u7684\u7684\u7f13\u5b58\u884c\u88ab Evict\u3002</p> <p>\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898\uff0cRISC-V \u5728\u6807\u51c6\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u4e86\u8fd9\u4e9b\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u6d3b\u9501\u7684\u53d1\u751f\uff1a</p> <ul> <li>The loop comprises only an LR/SC sequence and code to retry the sequence in the case of failure, and must comprise at most 16 instructions placed sequentially in memory.</li> <li>An LR/SC sequence begins with an LR instruction and ends with an SC instruction. The dynamic code executed between the LR and SC instructions can only contain instructions from the base \u201cI\u201d instruction set, excluding loads, stores, backward jumps, taken backward branches, JALR, FENCE, and SYSTEM instructions. If the \u201cC\u201d extension is supported, then compressed forms of the aforementioned \u201cI\u201d instructions are also permitted.</li> <li>The code to retry a failing LR/SC sequence can contain backwards jumps and/or branches to repeat the LR/SC sequence, but otherwise has the same constraint as the code between the LR and SC.</li> <li>The LR and SC addresses must lie within a memory region with the LR/SC eventuality property. The execution environment is responsible for communicating which regions have this property.</li> <li>The SC must be to the same effective address and of the same data size as the latest LR executed by the same hart.</li> </ul> <p>\u56e0\u4e3a LL/SC \u7684\u5c40\u9650\u6027\uff0c\u73b0\u5728\u5f88\u591a\u7b97\u6cd5\u4f1a\u7528\u4e0b\u9762\u8bb2\u5230\u7684 CAS \u6216\u8005 AMO \u6307\u4ee4\u6765\u5b9e\u73b0\u3002</p>"},{"location":"software/atomic_instructions/#cas","title":"CAS","text":""},{"location":"software/atomic_instructions/#_8","title":"\u5b9a\u4e49","text":"<p>CAS\uff08Compare-And-Swap\uff09\u6307\u4ee4\u505a\u7684\u4e8b\u60c5\u662f\uff0c\u628a\u5185\u5b58\u4e2d\u7684\u503c\u548c\u7ed9\u5b9a\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u540c\uff0c\u90a3\u4e48\u5199\u5165\u4e00\u4e2a\u65b0\u7684\u503c\uff1b\u628a\u5199\u5165\u662f\u5426\u6210\u529f\u5199\u5165\u76ee\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u6216\u8005\u628a\u65e7\u503c\u5199\u5165\u5230\u76ee\u7684\u5bc4\u5b58\u5668\u4e2d\uff1a</p> <pre><code>cas dest, addr, compare, new\n</code></pre> <p>\u76f8\u5f53\u4e8e\u539f\u5b50\u5730\u5b8c\u6210\u4e86\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <pre><code>if (memory[addr] == compare) {\n    memory[addr] = new;\n    dest = 1;\n} else {\n    dest = 0;\n}\n</code></pre> <p>\u6216\u8005\u8fd4\u56de\u5185\u5b58\u4e2d\u7684\u65e7\u503c\uff1a</p> <pre><code>dest = memory[addr];\nif (memory[addr] == compare) {\n    memory[addr] = new;\n}\n</code></pre>"},{"location":"software/atomic_instructions/#_9","title":"\u5e38\u89c1\u7528\u6cd5","text":"<p>CAS \u6307\u4ee4\u7684\u5e38\u89c1\u7528\u6cd5\u662f\uff0c\u653e\u5728\u5faa\u73af\u4e2d\uff0c\u9996\u5148\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u503c\uff0c\u8fdb\u884c\u4e00\u7cfb\u5217\u8ba1\u7b97\uff0c\u7528 CAS \u6307\u4ee4\u8fdb\u884c\u5bf9\u5185\u5b58\u7684\u539f\u5b50\u66f4\u65b0\uff1a\u5982\u679c\u5185\u5b58\u7684\u503c\u6ca1\u6709\u53d8\uff0c\u90a3\u5c31\u628a\u65b0\u7684\u503c\u5199\u5165\uff1b\u5982\u679c\u5185\u5b58\u7684\u503c\u53d8\u4e86\uff0c\u90a3\u5c31\u5faa\u73af\u91cd\u65b0\u5c1d\u8bd5\uff1a</p> <pre><code>loop:\n    # Read\n    load old_data, addr\n    # Modify\n    add new_data, old_data, 1\n    # Compare-And-Swap\n    cas dest, addr, old_data, new_data\n    # Try again if CAS failed\n    goto loop if failed\n</code></pre> <p>\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u539f\u5b50\u52a0\u4e00\u64cd\u4f5c\u3002\u548c LL/SC \u4e00\u6837\uff0c\u4e5f\u9700\u8981\u5728\u5faa\u73af\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u66f4\u65b0\uff0c\u76f4\u5230\u66f4\u65b0\u6210\u529f\u4e3a\u6b62\u3002</p> <p>\u5bf9\u4e8e\u8fd4\u56de\u5185\u5b58\u4e2d\u65e7\u503c\u7684 CAS \u6307\u4ee4\uff0c\u53ef\u4ee5\u628a dest \u548c old_data \u8fdb\u884c\u6bd4\u8f83\u6765\u5224\u65ad CAS \u662f\u5426\u6210\u529f\u3002\u6709\u7684 CAS \u6307\u4ee4\u65e2\u8fd4\u56de\u4e86 CAS \u662f\u5426\u6210\u529f\u7684\u4fe1\u606f\uff0c\u53c8\u8fd4\u56de\u4e86\u5185\u5b58\u4e2d\u7684\u65e7\u503c\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u770b\u8d77\u6765\u548c LL/SC \u5f88\u50cf\uff0c\u4f46\u662f\u6709\u5982\u4e0b\u7684\u4e0d\u540c\uff1a</p> <ol> <li>LL/SC \u9700\u8981\u4e24\u6761\u539f\u5b50\u6307\u4ee4\uff0c\u5206\u522b\u5728\u5f00\u5934\u7684\u8bfb\u548c\u6700\u540e\u7684\u5199\uff1bCAS \u53ea\u6709\u4e00\u6761\u539f\u5b50\u6307\u4ee4\uff0c\u5728\u6700\u540e\u5b9e\u73b0\u5199\u5165\u3002</li> <li>LL/SC \u9700\u8981\u7684\u64cd\u4f5c\u6570\u6bd4\u8f83\u5c11\uff1aLL \u662f\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\uff0c\u4e5f\u5c31\u662f\u8981\u8bfb\u53d6\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e00\u4e2a\u76ee\u7684\u64cd\u4f5c\u6570\uff0c\u7528\u6765\u4fdd\u5b58\u8bfb\u53d6\u7684\u503c\uff1bSC \u662f\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\uff0c\u5305\u62ec\u8981\u5199\u5165\u7684\u5185\u5b58\u5730\u5740\u548c\u6570\u636e\uff0c\u4e00\u4e2a\u76ee\u7684\u64cd\u4f5c\u6570\uff0c\u7528\u6765\u4fdd\u5b58 SC \u662f\u5426\u6210\u529f\u7684\u7ed3\u679c\uff1bCAS \u9700\u8981\u7684\u64cd\u4f5c\u6570\u6bd4\u8f83\u591a\uff1a\u4e09\u4e2a\u6e90\u64cd\u4f5c\u6570\uff0c\u5305\u62ec\u5185\u5b58\u5730\u5740\u3001\u6bd4\u8f83\u6570\u636e\u548c\u65b0\u6570\u636e\uff0c\u4e00\u4e2a\u76ee\u7684\u64cd\u4f5c\u6570\uff0c\u7528\u6765\u4fdd\u5b58 CAS \u662f\u5426\u6210\u529f\u6216\u8005\u5185\u5b58\u65e7\u503c\u3002</li> <li>CAS \u53ef\u80fd\u4f1a\u9047\u5230 ABA \u95ee\u9898\uff1a\u5728 Read-Modify-CAS \u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u7684\u503c\u4ece A \u53d8\u6210\u4e86 B\uff0c\u53c8\u4ece B \u53d8\u56de\u4e86 A\uff0cCAS \u4f9d\u7136\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a\u5b83\u5199\u5165\u4e0e\u5426\uff0c\u4ec5\u53d6\u51b3\u4e8e\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\uff1b\u800c LL/SC \u4f1a\u7531\u786c\u4ef6\u76d1\u6d4b\u4e2d\u9014\u7684\u5185\u5b58\u8bbf\u95ee\uff0c\u53ea\u8981\u5185\u5b58\u4e2d\u7684\u503c\u88ab\u5199\u5165\u8fc7\uff0c\u65e0\u8bba\u6700\u540e\u7684\u503c\u662f\u5426\u56de\u5230\u4e86 LL \u8bfb\u53d6\u7684\u503c\uff0c\u90fd\u4f1a\u8ba9 SC \u5931\u8d25\u3002\u4e0b\u9762\u6765\u8ba8\u8bba ABA \u95ee\u9898\u3002</li> </ol>"},{"location":"software/atomic_instructions/#aba","title":"ABA \u95ee\u9898","text":"<p>ABA \u95ee\u9898\u5c31\u662f\u6307\u7684\u5728 Read-Modify-Write \u5faa\u73af\u4e2d\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u7684\u503c\u4ece A \u53d8\u6210\u4e86 B\uff0c\u53c8\u4ece B \u53d8\u6210\u4e86 A\uff0c\u662f\u5426\u4f1a\u5f71\u54cd\u5199\u5165\u662f\u5426\u6210\u529f\u7684\u95ee\u9898\u3002LL/SC \u7684\u7b54\u6848\u662f\uff0c\u5982\u679c\u51fa\u73b0\u4e86 ABA \u7684\u60c5\u51b5\uff0c\u4f1a\u4f7f\u5f97\u5199\u5165\u5931\u8d25\uff1bCAS \u7684\u7b54\u6848\u662f\uff0cABA \u60c5\u51b5\u4e0b\u5199\u5165\u4f9d\u7136\u6210\u529f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8981\u8ba8\u8bba ABA \u95ee\u9898\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e9b\u65e0\u9501\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\uff0c\u662f\u4e0d\u5141\u8bb8 ABA \u60c5\u51b5\u7684\u51fa\u73b0\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u9700\u8981\u7528 LL/SC\uff0c\u6216\u8005\u7528\u4e0b\u9762\u8981\u4ecb\u7ecd\u7684 DWCAS\uff08Double Width Compare And Swap\uff09\u6307\u4ee4\uff0c\u800c\u4e0d\u662f CAS \u6307\u4ee4\u3002</p>"},{"location":"software/atomic_instructions/#dwcas","title":"DWCAS","text":"<p>DWCAS\uff08Double Width Compare And Swap\uff09\u6307\u4ee4\u5176\u5b9e\u4e5f\u662f CAS \u6307\u4ee4\uff0c\u53ea\u4e0d\u8fc7\u5b83\u7684\u5185\u5b58\u64cd\u4f5c\u7684\u7c92\u5ea6\u662f\u5904\u7406\u5668\u4f4d\u6570\u7684\u4e24\u500d\uff1a\u4f8b\u5982 32 \u4f4d\u5904\u7406\u5668\uff0cDWCAS \u7684\u64cd\u4f5c\u5bbd\u5ea6\u5c31\u662f 64 \u4f4d\uff1b64 \u4f4d\u5904\u7406\u5668\uff0cDWCAS \u7684\u64cd\u4f5c\u5bbd\u5ea6\u5c31\u662f 128 \u4f4d\u3002</p> <p>\u5f15\u5165 DWCAS \u53ef\u4ee5\u89e3\u51b3 ABA \u7684\u95ee\u9898\uff1a\u65e2\u7136\u95ee\u9898\u51fa\u5728\u503c\u4f1a\u4ece A \u5230 B \u518d\u56de\u5230 A\uff0c\u90a3\u5c31\u8ba9\u503c\u201c\u4e0d\u56de\u5230\u201dA\uff0c\u4e0d\u5c31\u597d\u4e86\uff1f\u6bcf\u6b21\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u9664\u4e86\u539f\u672c\u8981\u66f4\u65b0\u7684\u503c\uff0c\u540c\u65f6\u66f4\u65b0\u4e00\u4e2a counter\uff0c\u8fd9\u4e2a counter \u6bcf\u6b21\u66f4\u65b0\u90fd\u52a0\u4e00\u3002counter \u6ea2\u51fa\u9700\u8981\u5f88\u591a\u5f88\u591a\u6b21 CAS\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u4e0d\u4f1a\u51fa\u73b0 ABA \u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u5c31\u89e3\u51b3\u4e86 ABA \u95ee\u9898\u3002</p> <p>\u4f46\u662f\uff0c\u901a\u5e38\u5904\u7406\u5668\u90fd\u53ea\u4f1a\u63d0\u4f9b\u4e0d\u8d85\u8fc7\u5904\u7406\u5668\u4f4d\u6570\u7684\u5185\u5b58\u6307\u4ee4\uff0c\u4f8b\u5982 32 \u4f4d\u5904\u7406\u5668\u63d0\u4f9b 8 \u4f4d\u300116 \u4f4d\u548c 32 \u4f4d CAS\uff0c\u90a3\u8981\u662f\u9700\u8981\u66f4\u65b0\u7684\u503c\u5df2\u7ecf\u5360\u4e86 32 \u4f4d\uff0c\u600e\u4e48\u540c\u65f6\u66f4\u65b0 counter \u5462\uff1f\u6240\u4ee5\u5c31\u4e0d\u5f97\u4e0d\u5f15\u5165\u4e86 DWCAS\uff0c\u5728 32 \u4f4d\u5904\u7406\u5668\u4e0a\u63d0\u4f9b 64 \u4f4d CAS\uff0c\u591a\u7684\u90a3 32 \u4f4d\u5c31\u53ef\u4ee5\u62ff\u6765\u66f4\u65b0 counter\u3002</p> <p>\u4f46\u662f DWCAS \u5b9e\u73b0\u8d77\u6765\u4e5f\u4f1a\u6bd4\u8f83\u590d\u6742\uff1a\u6bcf\u4e2a\u64cd\u4f5c\u6570\u7684\u4f4d\u5bbd\u90fd\u7ffb\u500d\u4e86\uff0c\u539f\u6765\u7684\u4e00\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u653e\u4e0d\u4e0b\u4e86\uff0c\u600e\u4e48\u529e\uff1f\u4e00\u4e2a\u6734\u7d20\u7684\u529e\u6cd5\u662f\uff0c\u4f20\u66f4\u591a\u7684\u64cd\u4f5c\u6570\uff0c\u4e24\u4e2a\u64cd\u4f5c\u6570\u62fc\u8d77\u6765\u5408\u6210\u4e00\u4e2a\u4e24\u500d\u4f4d\u5bbd\u7684\u503c\uff0c\u4f46\u662f\u8fd9\u6837\u5728\u6307\u4ee4\u7f16\u7801\u4e2d\uff0c\u64cd\u4f5c\u6570\u5360\u7528\u7684\u4f4d\u6570\u592a\u591a\uff1a</p> <pre><code>cas dest_hi, dest_lo, addr, old_data_hi, old_data_lo, new_data_hi, new_data_lo\n</code></pre> <p>\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u4e00\u4e2a\u64cd\u4f5c\u6570\u5bf9\u5e94\u4e24\u4e2a\u8fde\u7eed\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4f8b\u5982\u67d0\u4e2a\u64cd\u4f5c\u6570\u662f 2 \u53f7\u5bc4\u5b58\u5668\uff0c\u4ee3\u8868\u7684\u5c31\u662f 2 \u53f7\u548c 3 \u53f7\u5bc4\u5b58\u5668\u62fc\u63a5\u8d77\u6765\u7684\u4e24\u500d\u4f4d\u5bbd\u7684\u503c\u3002\u5982\u679c\u5e73\u53f0\u6709\u66f4\u5bbd\u7684\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u4e5f\u53ef\u4ee5\u628a\u64cd\u4f5c\u6570\u653e\u5230\u5411\u91cf\u5bc4\u5b58\u5668\u4e0a\u4f20\u5165\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u5355\u6761\u6307\u4ee4\u6d89\u53ca\u5230\u7684\u64cd\u4f5c\u6570\u548c\u5bbd\u5ea6\u90fd\u6bd4\u8f83\u5927\uff0c\u7ed9\u5904\u7406\u5668\u7684\u8bbe\u8ba1\u5e26\u6765\u4e86\u4e00\u5b9a\u7684\u6311\u6218\u3002</p> <p>\u9664\u4e86 DWCAS \u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u79cd CAS \u53d8\u4f53\uff1aDCAS\uff08Double Compare and Swap\uff09\u3002\u548c DWCAS \u4e0d\u540c\u7684\u662f\uff0cDCAS \u5b9e\u73b0\u7684\u539f\u5b50\u7684\u4e24\u4e2a CAS \u64cd\u4f5c\uff0c\u8fd9\u4e24\u4e2a CAS \u53ef\u4ee5\u64cd\u4f5c\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cDWCAS \u53ef\u4ee5\u8ba4\u4e3a\u662f DCAS \u7684\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0c\u7279\u6b8a\u5728\u4e8e\u4e24\u4e2a CAS \u64cd\u4f5c\u7684\u662f\u8fde\u7eed\u7684\u5185\u5b58\u3002</p>"},{"location":"software/atomic_instructions/#_10","title":"\u6307\u4ee4\u96c6\u67b6\u6784\u652f\u6301","text":"<p>x86_64 \u6307\u4ee4\u96c6\u63d0\u4f9b\u4e86 CAS \u6307\u4ee4\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86 DWCAS \u4e24\u500d\u4f4d\u5bbd\u7248\u672c\uff1acmpxchg16b \u6307\u4ee4\uff0c\u5b83\u628a\u5185\u5b58\u4e2d\u7684\u503c\u548c RDX:RAX \u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u8bbe\u7f6e ZF\uff0c\u5e76\u5f80\u5185\u5b58\u5199\u5165 RCX:RBX\uff1b\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u6e05\u7a7a ZF \u5e76\u628a\u5185\u5b58\u4e2d\u7684\u503c\u5199\u5165\u5230 RDX:RAX\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u6761\u6307\u4ee4\u91c7\u7528\u7684\u662f\u591a\u4e2a\u6e90\u5bc4\u5b58\u5668\u7684\u65b9\u6848\uff1aRDX\u3001RAX\u3001RCX\u3001RBX \u4e00\u5171\u56db\u4e2a\u6e90 64 \u4f4d\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u901a\u8fc7\u5b9a\u6b7b\u5bc4\u5b58\u5668\u7f16\u53f7\uff0c\u89e3\u51b3\u4e86\u6307\u4ee4\u7f16\u7801\u7684\u95ee\u9898\u3002\u540c\u65f6\uff0c\u4e00\u6761\u6307\u4ee4\u4e5f\u8981\u5199\u5165\u4e24\u4e2a\u901a\u7528\u5bc4\u5b58\u5668 RDX \u548c RAX\uff0c\u5916\u52a0 FLAGS \u5bc4\u5b58\u5668\u7684 ZF\u3002</p> <p>LoongArch \u4ece V1.1 \u7248\u672c\u5f00\u59cb\uff0c\u652f\u6301\u4e86 AMCAS \u6307\u4ee4\u3002RISC-V \u4e5f\u6709\u53ef\u9009\u7684 Zacas \u6269\u5c55\u3002AArch64 \u4e5f\u63d0\u4f9b\u4e86 CAS \u6307\u4ee4\uff0c\u5e76\u4e14 CASP \u6307\u4ee4\u5b9e\u73b0\u4e86 DWCAS\u3002</p>"},{"location":"software/atomic_instructions/#_11","title":"\u786c\u4ef6\u5b9e\u73b0","text":"<p>CAS \u7684\u786c\u4ef6\u5b9e\u73b0\u4e5f\u6bd4\u8f83\u7b80\u5355\uff1a\u5728\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u4e0b\uff0c\u5f53\u4e00\u4e2a\u7f13\u5b58\u53ef\u4ee5\u5199\u7f13\u5b58\u884c\u7684\u65f6\u5019\uff0c\u5b83\u62e5\u6709\u4e86\u8fd9\u4e2a\u7f13\u5b58\u884c\u7684\u6240\u6709\u6743\u9650\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5728\u7f13\u5b58\u91cc\u5b9e\u73b0 CAS \u5373\u53ef\uff0c\u5176\u4ed6\u7f13\u5b58\u65e0\u6cd5\u6253\u65ad\u8fd9\u4e2a\u539f\u5b50\u7684\u64cd\u4f5c\u3002</p>"},{"location":"software/atomic_instructions/#amo","title":"AMO","text":""},{"location":"software/atomic_instructions/#_12","title":"\u5b9a\u4e49","text":"<p>AMO\uff08Atomic Memory Operations\uff09\u6307\u7684\u662f\u5bf9\u5185\u5b58\u4e2d\u7684\u503c\u8fdb\u884c\u539f\u5b50\u66f4\u65b0\uff1a\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u503c\uff0c\u5199\u5165\u5230\u76ee\u7684\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u5bf9\u503c\u8fdb\u884c\u4e00\u4e9b\u66f4\u65b0\u64cd\u4f5c\uff0c\u518d\u5199\u5165\u5185\u5b58\u3002\u8fd9\u4e2a\u66f4\u65b0\u64cd\u4f5c\u662f\u9884\u8bbe\u7684\uff0c\u4f8b\u5982\u4f4d\u8fd0\u7b97\uff08AND\u3001OR\u3001XOR \u548c SWAP\uff09\u6216\u8005\u6574\u6570\u8fd0\u7b97\uff08ADD\u3001MIN \u548c MAX\uff09\u7b49\u7b49\u3002\u5b83\u7528\u4e00\u6761\u6307\u4ee4\u5b8c\u6210\u4e86\u524d\u9762 LL/SC \u6216\u8005 CAS \u6307\u4ee4\u7684\u8bfb - \u6539 - \u5199\u5faa\u73af\u505a\u7684\u529f\u80fd\uff0c\u4f46\u662f\u9650\u5236\u4e86\u5141\u8bb8\u7684\u4fee\u6539\u64cd\u4f5c\uff1a</p> <pre><code># Use AMO\n    amoadd dest, addr, 1\n\n# Use CAS\nloop:\n    # Read\n    load old_data, addr\n    # Modify\n    add new_data, old_data, 1\n    # Compare-And-Swap\n    cas dest, addr, old_data, new_data\n    # Try again if CAS failed\n    goto loop if failed\n</code></pre>"},{"location":"software/atomic_instructions/#_13","title":"\u5e38\u89c1\u7528\u6cd5","text":"<p>AMO \u6307\u4ee4\u76f8\u5f53\u4e8e\u662f\u628a\u4e00\u4e9b\u5e38\u89c1\u7684\u8bfb - \u6539 - \u5199\u5faa\u73af\u56fa\u5316\u6210\u4e86\u6307\u4ee4\uff0c\u56e0\u6b64\u539f\u6765\u7528 LL/SC \u6216 CAS \u5b9e\u73b0\u7684\u4e00\u4e9b\u539f\u5b50\u64cd\u4f5c\uff0c\u5982\u679c\u6709\u5bf9\u5e94\u7684 AMO \u6307\u4ee4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 AMO \u6307\u4ee4\u5b9e\u73b0\u3002</p>"},{"location":"software/atomic_instructions/#_14","title":"\u6307\u4ee4\u96c6\u67b6\u6784\u652f\u6301","text":"<p>RISC-V \u548c LoongArch \u90fd\u63d0\u4f9b\u4e86 AMO \u6307\u4ee4\uff0c\u5b83\u4eec\u53ef\u4ee5\u5b8c\u6210\u5185\u5b58\u7684\u539f\u5b50\u66f4\u65b0\uff0c\u540c\u65f6\u5f97\u5230\u66f4\u65b0\u524d\u7684\u65e7\u503c\u3002x86 \u6307\u4ee4\u96c6\u4e0b\uff0c\u901a\u8fc7\u7ed9 add \u6307\u4ee4\u6dfb\u52a0 lock \u524d\u7f00\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u539f\u5b50\u66f4\u65b0\u7684\u6548\u679c\uff0c\u5982\u679c\u8981\u5f97\u5230\u66f4\u65b0\u524d\u7684\u65e7\u503c\uff0c\u53ef\u4ee5\u7528 xadd \u6307\u4ee4\u3002</p> <p>AArch64 \u63d0\u4f9b\u4e86 AMO \u6307\u4ee4\uff1aLDADD\u3001LDMAX\u3001STADD\u3001SWP \u7b49\u7b49\u3002</p>"},{"location":"software/atomic_instructions/#_15","title":"\u786c\u4ef6\u5b9e\u73b0","text":"<p>AMO \u6307\u4ee4\u7684\u786c\u4ef6\u5b9e\u73b0\u548c CAS \u7c7b\u4f3c\uff0c\u4e5f\u662f\u628a\u539f\u5b50\u64cd\u4f5c\u4e0b\u653e\u5230\u7f13\u5b58\u4e2d\u53bb\u6267\u884c\u3002\u4f46\u7531\u4e8e AMO \u6307\u4ee4\u9700\u8981\u6d89\u53ca\u5c11\u91cf\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u4f8b\u5982\u4f4d\u8fd0\u7b97\u548c\u6574\u6570\u8fd0\u7b97\uff0c\u56e0\u6b64\u7f13\u5b58\u5185\u90e8\u4e5f\u9700\u8981\u5f15\u5165\u4e00\u4e2a ALU \u7528\u4e8e\u5b9e\u73b0 AMO \u6307\u4ee4\u7684\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u76ee\u524d AMO \u6307\u4ee4\u4ec5\u9650\u4e8e\u786c\u4ef6\u5f00\u9500\u6bd4\u8f83\u5c0f\u7684\u4f4d\u8fd0\u7b97\u548c\u6574\u6570\u8fd0\u7b97\uff0c\u6ca1\u6709\u6574\u6570\u4e58\u9664\u6cd5\uff0c\u4e5f\u6ca1\u6709\u6d6e\u70b9\u8fd0\u7b97\u3002</p> <p>\u4f8b\u5982 Rocket Chip \u8bbe\u8ba1\u4e86\u4e00\u4e2a AMOALU\uff0c\u7528\u4e8e\u5728 DCache \u4e2d\u5b9e\u73b0 AMO \u6307\u4ee4\u7684\u8ba1\u7b97\u3002</p>"},{"location":"software/atomic_instructions/#htm","title":"HTM","text":""},{"location":"software/atomic_instructions/#_16","title":"\u5b9a\u4e49","text":"<p>HTM \u662f\u786c\u4ef6\u63d0\u4f9b\u7684\u5728\u5185\u5b58\u4e0a\u7684\u4e8b\u52a1\u3002\u4e8b\u52a1\u8fd9\u4e2a\u6982\u5ff5\u5728\u6570\u636e\u5e93\u4e0a\u6bd4\u8f83\u5e38\u89c1\uff0c\u628a\u591a\u4e2a\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u653e\u5230\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6574\u4e2a\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u3002HTM \u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u662f\u5728 CPU \u4e0a\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u5bf9\u5185\u5b58\u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684\u3002</p>"},{"location":"software/atomic_instructions/#_17","title":"\u5e38\u89c1\u7528\u6cd5","text":"<p>\u901a\u5e38\uff0c\u5b83\u9700\u8981\u7528\u7279\u5b9a\u7684 begin \u6307\u4ee4\u5f00\u59cb\u4e00\u6bb5\u4e8b\u52a1\uff0c\u6267\u884c\u4e00\u7cfb\u5217\u6307\u4ee4\u540e\uff0c\u518d\u7528\u7279\u5b9a\u7684 end \u6307\u4ee4\u7ed3\u675f\u4e8b\u52a1\u3002\u5982\u679c\u5728\u4e8b\u52a1\u4e2d\u9014\uff0c\u4e8b\u52a1\u88ab\u6253\u65ad\uff0c\u4f8b\u5982\u7a0b\u5e8f\u4e3b\u52a8\u7528\u6307\u4ee4\u6253\u65ad\uff0c\u6216\u8005\u6d89\u53ca\u5230\u7684\u5185\u5b58\u88ab\u5176\u4ed6\u5904\u7406\u5668\u6838\u5fc3\u4fee\u6539\uff0c\u90a3\u4e48\u4e8b\u52a1\u5c31\u4f1a\u88ab\u56de\u6eda\uff0c\u540c\u65f6\u7a0b\u5e8f\u8f6c\u79fb\u5230\u6307\u5b9a\u7684 fallback \u5730\u5740\u7ee7\u7eed\u6267\u884c\uff0c\u8fd9\u4e2a fallback \u5730\u5740\u4f1a\u5728 begin \u6307\u4ee4\u4e2d\u7ed9\u51fa\u3002\u4e0b\u9762\u662f\u4e00\u6bb5\u7528\u786c\u4ef6\u5185\u5b58\u4e8b\u52a1\u5b9e\u73b0\u7684\u539f\u5b50\u52a0\u4e00\uff1a</p> <pre><code>retry:\n    # begin transaction\n    # set fallback address to fail label\n    begin fail\n\n    # do computation\n    load data, addr\n    add data, data, 1\n    store data, addr\n\n    # end transaction\n    end\n\nfail:\n    # retry if transaction failed\n    goto retry\n</code></pre> <p>\u5b9e\u9645\u4e0a\uff0cHTM \u652f\u6301\u5d4c\u5957\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5728\u4e00\u6b21\u4e8b\u52a1\u4e2d\u9014\uff0c\u518d\u5f00\u53e6\u4e00\u4e2a\u4e8b\u52a1\u3002\u4f46\u53ea\u6709\u6700\u5916\u5c42\u7684\u4e8b\u52a1\u7684 end \u6307\u4ee4\u4f1a\u63d0\u4ea4\u4e8b\u52a1\uff0c\u5982\u679c\u9700\u8981\u56de\u6eda\u4e8b\u52a1\uff0c\u4e5f\u4f1a\u56de\u6eda\u5230\u6700\u5916\u5c42\u4e8b\u52a1\uff0c\u518d\u8df3\u8f6c\u5230\u6700\u5916\u5c42\u4e8b\u52a1\u7684 fallback \u5730\u5740\u3002</p>"},{"location":"software/atomic_instructions/#_18","title":"\u6307\u4ee4\u96c6\u67b6\u6784\u652f\u6301","text":"<p>x86_64 \u6307\u4ee4\u96c6\u63d0\u4f9b\u4e86 Transactional Synchronization Extensions (TSX) \u6269\u5c55\uff0c\u5b83\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\uff1aHardware Lock Elision \u548c Restricted Transactional Memory\u3002\u5b83\u7684\u6587\u6863\u5728 Intel 64 and IA-32 Architectures Software Develop's Manual \u7684 Volume 1 Chapter 16 Programming with Intel Transaction Synchronization Extensions\u3002</p> <p>Hardware Lock Elision \u7684\u5e94\u7528\u573a\u666f\u662f\uff0c\u7a0b\u5e8f\u7f16\u5199\u4e86 critical section\uff0c\u5e76\u4e14\u7528\u9501\u6765\u4fdd\u62a4\u5b83\uff0c\u4fdd\u8bc1\u540c\u65f6\u53ea\u6709\u4e00\u4e2a\u6838\u5fc3\u5728\u6267\u884c\u8fd9\u4e2a critical section\u3002\u4f46\u9501\u4f1a\u5e26\u6765\u989d\u5916\u7684\u5f00\u9500\u3002\u65e2\u7136\u6709\u4e86\u786c\u4ef6\u5185\u5b58\u4e8b\u52a1\uff0c\u5c31\u53ef\u4ee5\u5148\u8df3\u8fc7\u52a0\u9501\u8fd9\u4e00\u6b65\uff0c\u5728\u4e8b\u52a1\u91cc\u6267\u884c\u4e00\u6b21 critical section\uff0c\u5728\u539f\u6765\u91ca\u653e\u9501\u7684\u5730\u65b9\u7ed3\u675f\u4e8b\u52a1\u3002\u5982\u679c\u4e8b\u52a1\u6210\u529f\u63d0\u4ea4\uff0c\u8bf4\u660e\u6ca1\u6709\u5176\u4ed6\u6838\u5fc3\u8981\u8fdb\u5165 critical section\uff0c\u90a3\u5c31\u7701\u4e0b\u4e86\u9501\u7684\u5f00\u9500\uff1b\u5982\u679c\u4e8b\u52a1\u6ca1\u6709\u6210\u529f\u63d0\u4ea4\uff0c\u5c31\u4f1a\u56de\u6eda\uff0c\u518d\u6b63\u5e38\u6267\u884c\u5e26\u9501\u7684 critical section\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u5b83\u5728\u52a0\u9501\u7684\u6307\u4ee4\u4e0a\u6dfb\u52a0\u4e00\u4e2a XACQUIRE \u524d\u7f00\uff0c\u5e76\u5728\u91ca\u653e\u9501\u7684\u6307\u4ee4\u4e0a\u6dfb\u52a0\u4e00\u4e2a XRELEASE \u524d\u7f00\u3002\u90a3\u4e48\u5728\u652f\u6301 TSX \u7684\u786c\u4ef6\u4e0a\uff0c\u5904\u7406\u5668\u5c31\u53ef\u4ee5\u7528\u786c\u4ef6\u4e8b\u52a1\u6765\u5c1d\u8bd5\u7ed5\u8fc7\u9501\u3002\u5982\u679c\u5904\u7406\u5668\u4e0d\u652f\u6301 TSX\uff0c\u5c31\u4f1a\u5ffd\u7565\u6389 XACQUIRE \u548c XRELEASE \u524d\u7f00\uff0c\u6b63\u5e38\u4e0a\u9501\u3001\u6267\u884c\u4ee3\u7801\u518d\u91ca\u653e\u9501\u3002</p> <p>Restricted Transactional Memory \u5c31\u662f\u5b8c\u6574\u7684\u786c\u4ef6\u5185\u5b58\u4e8b\u52a1\u652f\u6301\uff1a\u7528 XBEGIN \u6307\u4ee4\u5f00\u59cb\u4e8b\u52a1\uff0c\u7528 XEND \u6307\u4ee4\u7ed3\u675f\u4e8b\u52a1\uff0c\u7528 XABORT \u6307\u4ee4\u6253\u65ad\u5f53\u524d\u4e8b\u52a1\u3002</p> <p>AArch64 \u4ece ARMv9-A \u5f00\u59cb\uff0c\u4e5f\u5f15\u5165\u4e86\u786c\u4ef6\u5185\u5b58\u4e8b\u52a1\u652f\u6301\uff1aTransactional Memory Extension (TME)\u3002\u5b83\u5f15\u5165\u4e86\u5982\u4e0b\u7684\u65b0\u6307\u4ee4\uff1a</p> <ul> <li>TCANCEL imm: \u5bf9\u5e94 x86 \u7684 XABORT\uff0c\u53d6\u6d88\u4e8b\u52a1\uff0c\u4ece TSTART \u4e0b\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u7ee7\u7eed\u6267\u884c\uff0cimm \u4f1a\u88ab\u5199\u5165\u5230 TSTART \u6307\u4ee4\u7684\u76ee\u7684\u5bc4\u5b58\u5668</li> <li>TCOMMIT: \u5bf9\u5e94 x86 \u7684 XEND</li> <li>TSTART Xd: \u5bf9\u5e94 x86 \u7684 XBEGIN\uff0c\u5982\u679c\u4e8b\u52a1\u6210\u529f\u5f00\u59cb\uff0c\u90a3\u4e48\u76ee\u7684\u5bc4\u5b58\u5668\u88ab\u5199\u5165 0\uff1b\u5982\u679c\u4e8b\u52a1\u5931\u8d25\uff0c\u90a3\u4e48\u76ee\u7684\u5bc4\u5b58\u5668\u4f1a\u88ab\u5199\u5165\u4e3a\u4e8b\u52a1\u5931\u8d25\u539f\u56e0</li> <li>TTEST Xd: \u628a\u76ee\u524d\u7684\u4e8b\u52a1\u5d4c\u5957\u5c42\u7ea7\u5199\u5230\u76ee\u7684\u5bc4\u5b58\u5668</li> </ul> <p>\u56e0\u6b64 TME \u7684\u9884\u671f\u4f7f\u7528\u65b9\u6cd5\u662f\uff08\u4f8b\u5b50\u6765\u81ea ARM DDI0617 C1.1 Conventions\uff09\uff1a</p> <pre><code>loop\n    tstart x12     # attempt to start a new transaction\n    cbnz x12, loop # retry forever\n\n    &lt;code&gt;\n\n    tcommit\n</code></pre> <p>\u6b64\u5916\uff0cTME \u6269\u5c55\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7c7b\u4f3c x86 \u7684 HLE \u7279\u6027\uff1aTransactional Lock Elision\u3002\u4f46\u662f\uff0c\u4e0e x86 \u7684\u5b9e\u73b0\u65b9\u6cd5\u4e0d\u540c\uff0cAArch64 \u7684 TME \u6269\u5c55\u8fd8\u662f\u9700\u8981\u7528\u4e0a\u8ff0\u7684 TSTART \u7b49\u6307\u4ee4\u6765\u5b9e\u73b0 Transactional Lock Elision\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff08\u6765\u81ea ARM DDI0617 C2.3 Acquiring a lock\uff09\uff1a</p> <p>\u83b7\u5f97\u9501\uff1a</p> <pre><code>loop:\n    TSTART X5         # attempt to start a new transaction\n    CBNZ X5, fallback # check if start succeeded\n\n    # CHECK_ACQ(X1)\n    # add the fallback lock to the transactional read set ; and set W5 to 0 if the fallback lock is free.\n    LDAR W5, [X1]\n\n    CBZ W5, enter     # if the fallback lock is free enter the critical region\n    TCANCEL #0xFFFF   # otherwise cancel the transaction with RTRY set to 1\n\nfallback:\n    TBZ X5, #15, lock # if RTRY is 0 take the fallback lock\n    SUB W6, W6, #1    # decrement the retry count\n    CBZ W6, lock      # take the lock if 0\n\n    # WAIT_ACQ(X1==0)\n    # wait until the lock is free\nloop_wait:\n    LDAR W5, [X1]     # load acquire ensures it is ordered before subsequent loads/stores\n    CBNZ W5, loop_wait\n\n    B loop            # retry the transaction\n\nlock:\n    # LOCK(X1)\n    # elision failed, acquire the fallback lock\n\n    PRFM PSTL1KEEP, [X1] # preload into cache in unique state\nloop_lock:\n    LDAXR W5, [X1]       # read lock with acquire\n    CBNZ W5, loop_lock   # check if 0\n    STXR W5, W0, [X1]    # attempt to store new value\n    CBNZ W5, loop_lock   # test if store succeeded and retry if not\n\n    DMB ISH           # block loads/stores from the critical region\n\nenter:\n</code></pre> <p>\u4ee3\u7801\u9996\u5148\u5f00\u59cb\u4e00\u6b21\u4e8b\u52a1\uff0c\u5982\u679c\u53d1\u73b0\u9501\u6ca1\u6709\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u5f97\uff0c\u90a3\u5c31\u76f4\u63a5\u8df3\u8f6c\u5230 enter \u8fdb\u884c critical section \u7684\u6267\u884c\uff1b\u5982\u679c\u53d1\u73b0\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u5f97\uff0c\u5c31\u53d6\u6d88\u4e8b\u52a1\uff0c\u518d\u6b21\u5faa\u73af\uff0c\u5982\u679c\u5faa\u73af\u591a\u6b21\u8fd8\u662f\u5931\u8d25\uff0c\u90a3\u5c31\u7528\u4f20\u7edf\u7684\u9501\u3002</p> <p>\u5728 critical section \u6700\u540e\u91ca\u653e\u9501\uff1a</p> <pre><code>    # CHECK(X1)\n    # set W5 to 0 if the fallback lock is free\n    LDR W5, [Xx] ; read lock\n\n    CBNZ W5, unlock   # check if 0\n    TCOMMIT           # the lock was elided, exit the transaction\n    B exit\n\nunlock:\n    # UNLOCK(X1)\n    # elision failed, release the fallback lock exit:\n    STLR WZR, [X1]    # clear the lock with release semantics\n\nexit:\n</code></pre> <p>\u9996\u5148\u68c0\u67e5\u4e4b\u524d\u662f\u91c7\u7528\u7684\u54ea\u79cd\u65b9\u6cd5\u201c\u83b7\u5f97\u201d\u4e86\u9501\uff0c\u5982\u679c\u662f\u4e8b\u52a1\uff0c\u90a3\u5c31\u63d0\u4ea4\u4e8b\u52a1\uff1b\u5982\u679c\u662f\u4f20\u7edf\u7684\u9501\uff0c\u90a3\u5c31\u91ca\u653e\u6389\u9501\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u76f8\u6bd4 x86 \u7684\u65b9\u6848\uff0cARM \u7684 TME \u5728\u5b9e\u73b0 Lock Elision \u65f6\uff0c\u6307\u4ee4\u4e0a\u4f1a\u6bd4\u8f83\u5197\u4f59\uff0c\u4f46\u597d\u5904\u662f\u5fae\u67b6\u6784\u7684\u5b9e\u73b0\u4f1a\u6bd4\u8f83\u5bb9\u6613\u3002</p>"},{"location":"software/atomic_instructions/#_19","title":"\u4e0d\u540c\u539f\u5b50\u6307\u4ee4\u95f4\u7684\u5173\u7cfb","text":"<p>\u4e0d\u540c\u539f\u5b50\u6307\u4ee4\u4e4b\u95f4\uff0c\u867d\u7136\u8bed\u4e49\u4e0d\u540c\uff0c\u4f46\u662f\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e92\u76f8\u5b9e\u73b0\u3002</p> <p>\u7528 LL/SC \u5b9e\u73b0 CAS\uff1a\u9996\u5148\u7528 LL \u8bfb\u53d6\u65e7\u503c\uff0c\u548c\u9884\u671f\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\u7528 SC \u5199\u5165\u65b0\u503c\uff0c\u5982\u679c SC \u5199\u5165\u5931\u8d25\uff0c\u5219\u5faa\u73af\u3002</p> <p>\u7528 CAS \u5b9e\u73b0 AMO\uff1a\u9996\u5148\u8bfb\u53d6\u65e7\u503c\uff0c\u7528\u6307\u4ee4\u5b9e\u73b0 AMO \u8981\u505a\u7684\u66f4\u65b0\u64cd\u4f5c\u540e\uff0c\u7528 CAS \u5c1d\u8bd5\u5199\u5165\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u7684\u503c\u7b49\u4e8e\u65e7\u503c\uff0c\u5c31\u628a\u66f4\u65b0\u540e\u7684\u65b0\u503c\u5199\u5165\uff0c\u5982\u679c\u5199\u5165\u5931\u8d25\uff0c\u5219\u5faa\u73af\u3002</p> <p>\u7528 CAS \u5b9e\u73b0 LL/SC\uff1a\u4e0d\u5b8c\u7f8e\uff0c\u53ef\u80fd\u6709 ABA \u95ee\u9898\u3002\u7528\u6b63\u5e38\u7684\u6307\u4ee4\u8bfb\u53d6\u5185\u5b58\u4ee5\u4ee3\u66ff LL\uff0c\u8bb0\u5f55\u4e0b\u8bbf\u95ee\u7684\u5185\u5b58\u5730\u5740\u548c\u8bfb\u53d6\u7684\u503c\uff1b\u5728\u539f\u6765 SC \u7684\u5730\u65b9\uff0c\u5224\u65ad SC \u7684\u5730\u5740\u662f\u5426\u548c\u4e4b\u524d LL \u7684\u76f8\u540c\uff0c\u5982\u679c\u5730\u5740\u76f8\u540c\uff0c\u5219\u7528 CAS \u5c1d\u8bd5\u5199\u5165\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u7684\u503c\u7b49\u4e8e\u4e4b\u524d\u8bfb\u53d6\u7684\u503c\uff0c\u5c31\u5199\u5165 SC \u8981\u5199\u5165\u7684\u503c\u3002</p> <p>\u5173\u4e8e LL/SC \u548c CAS \u5728 Linux \u4e2d\u4f7f\u7528\u7684\u8ba8\u8bba\uff0c\u63a8\u8350\u9605\u8bfb\uff1acmpxchg ll/sc portability\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0cQEMU \u4e3a\u4e86\u6027\u80fd\uff0c\u4f1a\u7528 CAS \u5b9e\u73b0 LL/SC\u3002\u867d\u7136\u5b83\u4f1a\u6709 ABA \u95ee\u9898\uff0c\u4f46\u5b9e\u9645\u4e0a\u5229\u7528 LL/SC \u6765\u907f\u514d ABA \u95ee\u9898\u7684\u4ee3\u7801\u6bd4\u8f83\u5c11\u3002\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\uff0c\u5c31\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u7cbe\u786e\u7684 LL/SC \u6a21\u62df\uff0c\u8fd9\u65b9\u9762\u7684\u8bba\u6587\u4e5f\u4e0d\u5c11\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>Kristien, Martin, et al. \"Fast and correct load-link/store-conditional instruction handling in DBT systems.\" IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 39.11 (2020): 3544-3554.</li> <li>Z. Zhao, Z. Jiang, Y. Chen, X. Gong, W. Wang and P. -C. Yew, \"Enhancing Atomic Instruction Emulation for Cross-ISA Dynamic Binary Translation,\" 2021 IEEE/ACM International Symposium on Code Generation and Optimization (CGO), Seoul, Korea (South), 2021, pp. 351-362, doi: 10.1109/CGO51591.2021.9370312.</li> </ul> <p>\u4f46\u5f88\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u7684\u6027\u80fd\u90fd\u6ca1\u6709\u8fbe\u5230 CAS \u6a21\u62df\u90a3\u4e48\u597d\uff0c\u6240\u4ee5\u8fd8\u662f\u6ca1\u6709\u88ab QEMU \u91c7\u7528\u3002\u5173\u4e8e QEMU \u4e3a\u4ec0\u4e48\u8981\u91c7\u7528 CAS \u6765\u6a21\u62df LL/SC \u7684\u8ba8\u8bba\uff0c\u53ef\u4ee5\u89c1 cmpxchg-based emulation of atomics\u3002</p>"},{"location":"software/atomic_instructions/#_20","title":"\u7f16\u7a0b\u8bed\u8a00\u652f\u6301","text":"<p>\u76ee\u524d\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u5185\u7f6e\u4e86\u5bf9\u539f\u5b50\u6307\u4ee4\u7684\u652f\u6301\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>C: C11 \u5f15\u5165\u4e86 stdatomic.h \u5934\u6587\u4ef6</li> <li>C++: C++11 \u5f15\u5165\u4e86 atomic \u5934\u6587\u4ef6</li> <li>Rust\uff1a\u63d0\u4f9b\u4e86 std::sync::atomic</li> </ul> <p>\u6839\u636e\u6307\u4ee4\u96c6\u67b6\u6784\u652f\u6301\u7684\u539f\u5b50\u6307\u4ee4\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7f16\u7a0b\u8bed\u8a00\u7684\u539f\u5b50\u64cd\u4f5c\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u3002</p>"},{"location":"software/atomic_instructions/#_21","title":"\u5176\u4ed6\u539f\u5b50\u6307\u4ee4","text":"<p>\u4e00\u4e9b\u6307\u4ee4\u96c6\u67b6\u6784\u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u7c7b\u578b\u7684\u539f\u5b50\u6307\u4ee4\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>AArch64 \u63d0\u4f9b\u4e86 64 \u5b57\u8282\u7c92\u5ea6\u7684\u539f\u5b50\u8bfb\u6216\u5199\uff1aLD64B \u4ece\u5185\u5b58\u539f\u5b50\u8bfb\u53d6\u8fde\u7eed 64 \u5b57\u8282\u7684\u6570\u636e\u5230 8 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u4e2d\uff1bST64B \u628a\u8fde\u7eed 8 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u7684\u503c\u539f\u5b50\u5199\u5165\u5230\u5185\u5b58\u4e2d</li> </ul>"},{"location":"software/atomic_instructions/#_22","title":"\u4e0d\u540c\u6307\u4ee4\u96c6\u67b6\u6784\u5bf9\u539f\u5b50\u6307\u4ee4\u652f\u6301\u7684\u5bf9\u6bd4","text":"ISA LL/SC CAS AMO HTM RISC-V A \u6269\u5c55 Zacas \u6269\u5c55\uff0c\u5e76\u4e14\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 A \u6269\u5c55 \u65e0 LoongArch \u6709\uff0cV1.1 \u652f\u6301\u4e86\u53cc\u500d\u5bbd\u5ea6 \u9700\u8981 V1.1 \u7248\u672c\uff0c\u4e0d\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 \u6709 \u65e0 x86_64 \u65e0 \u6709\uff0c\u5e76\u4e14\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 \u6709 TSX AArch64 \u6709 \u6709\uff0c\u5e76\u4e14\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 \u6709 TME MIPS \u6709\uff0c\u4e5f\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 \u6709\uff0c\u5e76\u4e14\u652f\u6301\u53cc\u500d\u5bbd\u5ea6 \u6709 \u65e0"},{"location":"software/cg/","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66","text":"<p>\u672c\u6587\u53c2\u8003\u4e86\u5982\u4e0b\u7f51\u7ad9\uff1a</p> <ul> <li>OpenGL Projection Matrix - Song Ho Ahn</li> <li>glOrtho</li> <li>gluPerspective</li> <li>Projection matrices</li> </ul>"},{"location":"software/cg/#_2","title":"\u9f50\u6b21\u5750\u6807","text":"<p>\u9f50\u6b21\u5750\u6807\u662f\u5728 3 \u7ef4\u7684\u5750\u6807 $(x, y, z)$ \u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e00\u7ef4\uff0c\u53d8\u6210 $(x, y, z, w)$\uff0c\u5bf9\u5e94 3 \u7ef4\u7684 $(x/w, y/w, z/w)$\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u65b9\u4fbf\u4e00\u4e9b\u8ba1\u7b97\u3002</p> <p>\u56e0\u6b64\u4ece 3 \u7ef4\u5750\u6807\u8f6c\u6362\u4e3a\u9f50\u6b21\u5750\u6807\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u4e00\u7ef4 $w = 1$\uff0c\u53d8\u6210 $(x, y, z, 1)$\u3002\u4e3a\u4e86\u8ba9 3 \u7ef4\u7684\u5411\u91cf\u548c\u70b9\u5728\u9f50\u6b21\u5750\u6807\u4e0b\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5411 3 \u7ef4\u5411\u91cf\u6dfb\u52a0\u4e00\u7ef4 $w=0$\uff0c\u6b64\u65f6 $w=0$ \u8868\u793a\u5411\u91cf\uff0c$w \\ne 0$ \u8868\u793a\u70b9\u3002</p>"},{"location":"software/cg/#_3","title":"\u5750\u6807\u53d8\u6362","text":"<p>OpenGL \u4e2d\u5750\u6807\u53d8\u6362\u7ecf\u8fc7\u4e86\u5982\u4e0b\u7684\u6b65\u9aa4\uff1a</p> <ol> <li>\u7269\u4f53\u5750\u6807\uff0c4D \u9f50\u6b21\u5750\u6807</li> <li>\u4e58\u4ee5 Model \u548c View \u77e9\u9635\uff0c\u5f97\u5230 4D \u9f50\u6b21\u5750\u6807</li> <li>\u4e58\u4ee5 Projection \u77e9\u9635\uff0c\u5f97\u5230 4D \u9f50\u6b21\u5750\u6807</li> <li>\u628a\u9f50\u6b21\u5750\u6807\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684 3D \u5750\u6807\uff0c\u4e3a Normalized Device Coordinates</li> <li>\u628a 3D \u5750\u6807\u5bf9\u5e94\u5230\u5c4f\u5e55\u4e0a\u7684 2D \u5750\u6807</li> </ol> <p>\u53c2\u8003\uff1aOpenGL Transformation</p>"},{"location":"software/cg/#normalized-device-coordinates","title":"Normalized Device Coordinates","text":"<p>NDC\uff08Normalized Device Coordinates\uff09\u662f\u7ecf\u8fc7\u4e00\u7cfb\u5217\u53d8\u6362\u4ee5\u540e\uff0c\u5f97\u5230\u7684\u6700\u7ec8\u7684 3D \u5750\u6807\u3002</p> <p>\u4ee5 OpenGL \u4e3a\u4f8b\uff0cNDC \u5c31\u662f\u4e00\u4e2a\u5728\u4e09\u4e2a\u5750\u6807\u8f74\u4e0a\u90fd\u5728 $[-1, 1]$ \u4e4b\u95f4\u7684\u7acb\u65b9\u4f53\uff0c\u53ea\u6709\u5728\u8fd9\u4e2a\u7acb\u65b9\u4f53\u4e2d\u7684\u7269\u4f53\u624d\u53ef\u80fd\u88ab\u663e\u793a\u51fa\u6765\u3002</p> <p>NDC \u7684\u5750\u6807\u8303\u56f4\u5728\u4e0d\u540c\u7684\u56fe\u5f62 API \u4e0b\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u4f8b\u5982 OpenGL \u548c WebGL \u662f\u4ece $(-1, -1, -1)$ \u5230 $(1, 1, 1)$\uff0c\u800c DirectX-12\u3001Metal\u3001Vulkan \u548c WebGPU \u662f\u4ece $(-1, -1, 0)$ \u5230 $(1, 1, 1)$\uff0c\u4e5f\u5c31\u662f Z \u8f74\u4e0a\u7684\u8303\u56f4\u53ea\u6709 $[0, 1]$\u3002</p> <p>\u6700\u540e\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u7684\u65f6\u5019\uff0c\u663e\u793a\u533a\u57df\u7684\u5de6\u4e0b\u89d2\u5c31\u5bf9\u5e94 $x=-1, y=-1$\uff0c\u53f3\u4e0a\u89d2\u5bf9\u5e94 $x=1, y=1$\uff08\u4e5f\u53ef\u80fd\u662f\u5de6\u4e0a\u89d2 $x=-1, y=-1$\uff0c\u53f3\u4e0b\u89d2 $x=1, y=1$\uff0c\u4e0d\u540c\u7684\u56fe\u5f62 API \u89c4\u5b9a\u4e0d\u540c\uff09\u3002$z$ \u8f74\u5bf9\u5e94\u6df1\u5ea6\uff0c\u663e\u793a\u5728\u524d\u9762\u7684\uff08$z$ \u8f83\u5c0f\u7684\uff09\u4f1a\u906e\u6321\u663e\u793a\u5728\u540e\u9762\u7684\uff08$z$ \u8f83\u5927\u7684\uff09\u3002</p> <p>\u56e0\u6b64 NDC \u5230\u5c4f\u5e55\u5750\u6807\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\uff1a</p> <ol> <li>x \u8f74\uff1a-1 -&gt; x, 1 -&gt; x + w</li> <li>y \u8f74\uff1a-1 -&gt; y, 1 -&gt; y + w</li> <li>z \u8f74\uff1a-1 -&gt; n, 1 -&gt; f</li> </ol> <p>\u5176\u4e2d x, y, w \u548c h \u7528 glViewport \u51fd\u6570\u8bbe\u7f6e\uff0cn \u548c f \u7528 glDepthRange \u8bbe\u7f6e\u3002</p>"},{"location":"software/cg/#_4","title":"\u6b63\u4ea4\u6295\u5f71","text":"<p>\u6b63\u4ea4\u6295\u5f71\u8981\u505a\u7684\u662f\u628a\u4e00\u4e2a\u957f\u65b9\u4f53\u7ebf\u6027\u6620\u5c04\u5230 NDC \u4e2d\uff0c\u4ee5 OpenGL \u4e3a\u4f8b\uff0c\u4e5f\u5c31\u662f\u8981\u6620\u5c04\u5230\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u90fd\u662f $[-1, 1]$ \u4e4b\u95f4\u7684\u7acb\u65b9\u4f53\u3002</p> <p>\u8fd9\u4e2a\u957f\u65b9\u4f53\u7684\u8fb9\u548c\u5750\u6807\u8f74\u5e73\u884c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4ee5\u4e0b\u51e0\u4e2a\u53d8\u91cf\u6765\u5b9a\u4e49\u957f\u65b9\u4f53\u7684\u5750\u6807\uff1a</p> <ol> <li>left, right, top, bottom\uff1a\u5b9a\u4e49\u4e86\u957f\u65b9\u4f53\u4e0a\u5e73\u884c\u4e8e X-Y \u5c4f\u5e55\u7684\u9762\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d left \u548c right \u5c31\u662f X \u8f74\u4e0a\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0cbottom \u548c top \u5c31\u662f Y \u8f74\u4e0a\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c</li> <li>near\uff0cfar\uff1a\u5b9a\u4e49\u4e86\u957f\u65b9\u4f53\u5728 Z \u8f74\u4e0a\u7684\u533a\u95f4\uff0c\u79bb\u539f\u70b9\u6700\u8fd1\u7684\u5e73\u9762\u7684 Z \u503c\u662f <code>-near</code>\uff0c\u6700\u8fdc\u7684\u5e73\u9762\u7684 Z \u503c\u662f <code>-far</code></li> </ol> <p>\u4e0b\u9762\u7528\u8fd9\u4e9b\u5750\u6807\u7684\u9996\u5b57\u6bcd\u6765\u7b80\u79f0\uff1a$l$ \u4ee3\u8868 left\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p> <p>\u76ee\u6807\u662f\u628a\u8fd9\u4e2a\u957f\u65b9\u4f53\u6620\u5c04\u5230 $[-1, 1]$ \u7684\u7acb\u65b9\u4f53\u4e0a\u3002</p> <p>\u9996\u5148\u8003\u8651 X \u8f74\uff1a\u8981\u7ebf\u6027\u5730\u628a $x=l$ \u6620\u5c04\u5230 $x=-1$\uff0c\u628a $x=r$ \u6620\u5c04\u5230 $x=1$\uff0c\u53ef\u4ee5\u5f97\u5230 $x' = \\frac{2}{r-l}x-\\frac{r+l}{r-l}$\u3002</p> <p>\u540c\u7406\uff0cY \u5750\u6807\u7684\u8ba1\u7b97\u516c\u5f0f\u662f $y' = \\frac{2}{t-b}y-\\frac{t+b}{t-b}$\u3002</p> <p>Z \u8f74\u4e0a\u591a\u4e86\u4e00\u4e2a\u8d1f\u53f7\uff1a\u7ebf\u6027\u5730\u628a $z=-n$ \u6620\u5c04\u5230 $z=-1$\uff0c\u628a $z=-f$ \u6620\u5c04\u5230 $z=1$\uff0c\u5f97\u5230 $z' = \\frac{-2}{f-n}z-\\frac{f+n}{f-n}$\u3002</p> <p>\u6ce8\uff1a\u5982\u679c NDC \u7684 Z \u8f74\u8303\u56f4\u662f $[0, 1]$\uff0c\u90a3\u4e48 Z \u8f74\u7684\u8ba1\u7b97\u516c\u5f0f\u5c31\u662f $z' = \\frac{-1}{f-n}z-\\frac{n}{f-n}$</p> <p>\u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\uff1a</p> <p>\\begin{align} x' = \\frac{2}{r-l}x-\\frac{r+l}{r-l} \\ y' = \\frac{2}{t-b}y-\\frac{t+b}{t-b} \\ z' = \\frac{-2}{f-n}z-\\frac{f+n}{f-n} \\end{align}</p> <p>\u8003\u8651\u5230\u5b9e\u9645\u91c7\u7528\u7684\u662f\u9f50\u6b21\u5750\u6807\u7cfb\uff0c$w$ \u4e0d\u53d8\uff0c\u6240\u4ee5 $w' = w$\u3002\u628a\u4e0a\u9762\u7684\u7b49\u5f0f\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u5c31\u662f\uff1a</p> <p>$$ \\begin{pmatrix} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; -\\frac{r+l}{r-l} \\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; -\\frac{t+b}{t-b} \\ 0 &amp; 0 &amp; \\frac{-2}{f-n} &amp; -\\frac{f+n}{f-n} \\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} $$</p> <p>\u8fd9\u6b63\u662f OpenGL \u6b63\u4ea4\u6295\u5f71\u51fd\u6570 glOrtho() \u6240\u8ba1\u7b97\u7684\u77e9\u9635\uff1a</p> <p> </p> \u6b63\u4ea4\u6295\u5f71\u77e9\u9635\uff08\u56fe\u6e90 glOrtho\uff09 <p>mesa \u4e2d\u7684\u5b9e\u73b0\uff1a</p> <pre><code>// Source: https://github.com/Mesa3D/mesa/blob/957009978ef6d7121fc0d710d03bc20097d4d46b/src/mesa/math/m_matrix.c#L813C1-L840\nvoid\n_math_float_ortho(float *m,\n                  float left, float right,\n                  float bottom, float top,\n                  float nearval, float farval)\n{\n#define M(row,col)  m[col*4+row]\n   M(0,0) = 2.0F / (right-left);\n   M(0,1) = 0.0F;\n   M(0,2) = 0.0F;\n   M(0,3) = -(right+left) / (right-left);\n\n   M(1,0) = 0.0F;\n   M(1,1) = 2.0F / (top-bottom);\n   M(1,2) = 0.0F;\n   M(1,3) = -(top+bottom) / (top-bottom);\n\n   M(2,0) = 0.0F;\n   M(2,1) = 0.0F;\n   M(2,2) = -2.0F / (farval-nearval);\n   M(2,3) = -(farval+nearval) / (farval-nearval);\n\n   M(3,0) = 0.0F;\n   M(3,1) = 0.0F;\n   M(3,2) = 0.0F;\n   M(3,3) = 1.0F;\n#undef M\n}\n</code></pre>"},{"location":"software/cg/#_5","title":"\u900f\u89c6\u6295\u5f71","text":"<p>\u900f\u89c6\u6295\u5f71\u8981\u505a\u7684\u662f\u628a\u4e00\u4e2a\u56db\u68f1\u53f0\uff08Square Frustum\uff0c\u56db\u68f1\u9525\u6c34\u5e73\u5207\u5f00\uff0c\u5e95\u9762\u548c\u9876\u9762\u662f\u6b63\u65b9\u5f62\uff0c\u5176\u4f59\u56db\u4e2a\u9762\u90fd\u662f\u68af\u5f62\uff09\u6620\u5c04\u5230 NDC \u4e0a\u3002\u5176\u4e2d\u56db\u68f1\u53f0\u7684\u56db\u6761\u68f1\u5ef6\u957f\u4ee5\u540e\uff0c\u4ea4\u4e8e\u539f\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\u7126\u70b9\u5c31\u662f\u5750\u6807\u8f74\u7684\u539f\u70b9\u3002</p> <p>\u76f8\u6bd4\u6b63\u4ea4\u6295\u5f71\uff0c\u900f\u89c6\u6295\u5f71\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\u5b83\u8fd1\u5927\u8fdc\u5c0f\u7684\u7279\u6027\uff0c\u66f4\u52a0\u8d34\u8fd1\u5b9e\u9645\uff1a\u6b63\u4ea4\u6295\u5f71\u65e0\u8bba\u6df1\u5ea6\u591a\u5c11\uff0c\u770b\u5230\u7684\u7269\u4f53\u5927\u5c0f\u4e0d\u53d8\uff1b\u800c\u5728\u900f\u89c6\u6295\u5f71\u4e2d\uff0c\u4ece\u539f\u70b9\u51fa\u53d1\uff0c\u5230 near \u5e73\u9762\u4e0a\u7684\u4e00\u70b9\u8fde\u6210\u5c04\u7ebf\uff0c\u8fd9\u6761\u5c04\u7ebf\u4e0a\u7684\u70b9\u90fd\u5bf9\u5e94\u540c\u4e00\u4e2a\u5c4f\u5e55\u4e0a\u7684\u70b9\uff0c\u56e0\u6b64\u8fdc\u7684\u7269\u4f53\u5728\u5c4f\u5e55\u4e0a\u770b\u7684\u5c0f\uff0c\u8fd1\u7684\u7269\u4f53\u5728\u5c4f\u5e55\u4e0a\u770b\u5f97\u5927\u3002</p> <p>\u56e0\u6b64\u5728\u5b9e\u73b0\u900f\u89c6\u6295\u5f71\u7684\u65f6\u5019\uff0c\u5c31\u8981\u5229\u7528\u8fd9\u6761\u4ece\u539f\u70b9\u51fa\u53d1\u5230 near \u5e73\u9762\u7684\u4e00\u70b9\u7684\u5c04\u7ebf\uff1a\u7531\u4e8e\u8fd9\u6761\u5c04\u7ebf\u4e0a\u7684\u70b9\u90fd\u5bf9\u5e94\u5c4f\u5e55\u4e0a\u540c\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u5728 NDC \u4e2d\u4e5f\u5bf9\u5e94\u540c\u4e00\u4e2a $(x', y')$ \u5750\u6807\u3002\u90a3\u4e48\uff0c\u5728\u8ba1\u7b97 $x'$ \u548c $y'$ \u7684\u65f6\u5019\uff0c\u5148\u5229\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u5173\u7cfb\uff0c\u628a\u70b9\u6620\u5c04\u5230 near \u5e73\u9762\u4e0a\uff08near \u5e73\u9762\u7684 Z \u5750\u6807\u662f $z=-n$\uff09\uff1a</p> <p>\\begin{align} \\frac{x'}{x} = \\frac{-n}{z} \\ \\frac{y'}{y} = \\frac{-n}{z} \\end{align}</p> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u56db\u68f1\u53f0\u5230\u957f\u65b9\u4f53\u7684\u6620\u5c04\uff0c\u4f46\u662f\u8fd9\u91cc\u6d89\u53ca\u5230\u5bf9 $z$ \u7684\u9664\u6cd5\u8fd0\u7b97\uff0c\u4e3a\u4e86\u5728\u77e9\u9635\u4e2d\u5b9e\u73b0\u9488\u5bf9 $z$ \u7684\u9664\u6cd5\u8fd0\u7b97\uff0c\u9700\u8981\u5229\u7528\u9f50\u6b21\u5750\u6807\u81ea\u5e26\u7684\u9664\u6cd5\uff1a$(x, y, z, w) \\to (x/w, y/w, z/w)$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a $z$ \u7684\u503c\u632a\u5230 $w$ \u4e0a\uff0c\u5c31\u76f8\u5f53\u4e8e\u5b9e\u73b0\u4e86\u9664\u6cd5\u3002\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u77e9\u9635\uff1a</p> <p>$$ \\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; n &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; A &amp; B \\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{pmatrix} $$</p> <p>\u5176\u4e2d $A$ \u548c $B$ \u662f\u672a\u77e5\u6570\u3002\u9a8c\u8bc1\u4e00\u4e0b\u4e0a\u9762\u7684\u77e9\u9635\u662f\u5426\u5b9e\u73b0\u4e86\u9664\u6cd5\uff1a</p> <p>\u9996\u5148\u662f\u751f\u6210\u9f50\u6b21\u5750\u6807\uff1a</p> <p>$$ (x, y, z) \\to (x, y, z, 1) $$</p> <p>\u77e9\u9635\u53d8\u6362\u4ee5\u540e\uff1a</p> <p>\\begin{align} x' &amp;= nx \\ y' &amp;= ny \\ z' &amp;= Az + B \\ w' &amp;= -z \\end{align}</p> <p>\u518d\u4ece\u9f50\u6b21\u5750\u6807\u53d8\u56de\u6765\uff0c\u5f97\u5230 $(-\\frac{nx}{z}, -\\frac{ny}{z}, -A-\\frac{B}{z})$\u3002\u53ef\u4ee5\u770b\u5230\uff0cx \u548c y \u90fd\u5f97\u5230\u4e86\u548c\u524d\u9762\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u8ba1\u7b97\u51fa\u6765\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u4f46\u662f z \u7684\u503c\u51fa\u73b0\u4e86\u53d8\u5316\u3002\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u867d\u7136 z \u7684\u503c\u53d8\u4e86\uff0c\u4f46\u662f\u5b83\u4f9d\u7136\u662f\u4fdd\u5e8f\u7684\uff0c\u53ea\u9700\u8981\u7ee7\u7eed\u4fdd\u8bc1\u5b83\u5728 $[-f, -n]$ \u8303\u56f4\u5373\u53ef\uff1a</p> <p>\\begin{align} -n = -A-\\frac{B}{-n} \\ -f = -A-\\frac{B}{-f} \\end{align}</p> <p>\u6c42\u89e3\u53ef\u5f97 $A=n+f, B=-nf$\uff0c\u56e0\u6b64\u524d\u9762\u7684\u77e9\u9635\u5c31\u662f\uff1a</p> <p>$$ \\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; n &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; n+f &amp; -nf \\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{pmatrix} $$</p> <p>\u5230\u8fd9\u4e00\u6b65\uff0c\u5c31\u5b8c\u6210\u4e86\u56db\u68f1\u53f0\u5230\u957f\u65b9\u4f53\u7684\u6620\u5c04\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6b63\u4ea4\u6295\u5f71\u4e86\uff0c\u628a\u957f\u65b9\u4f53\u6620\u5c04\u5230 NDC \u4e0a\uff0c\u56e0\u6b64\u6700\u7ec8\u6574\u4f53\u7684\u6295\u5f71\u77e9\u9635\u5c31\u662f\u628a\u4e24\u4e2a\u77e9\u9635\u4e58\u8d77\u6765\uff08\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u5de6\u4e58\u4e0a\u9762\u7684\u77e9\u9635\uff09\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>$$ \\begin{pmatrix} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; -\\frac{r+l}{r-l} \\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; -\\frac{t+b}{t-b} \\ 0 &amp; 0 &amp; \\frac{-2}{f-n} &amp; -\\frac{f+n}{f-n} \\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\cdot \\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; n &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; n+f &amp; -nf \\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{pmatrix} = \\begin{pmatrix} \\frac{2n}{r-l} &amp; 0 &amp; \\frac{r+l}{r-l} &amp; 0 \\ 0 &amp; \\frac{2n}{t-b} &amp; \\frac{t+b}{t-b} &amp; 0 \\ 0 &amp; 0 &amp; -\\frac{n+f}{f-n} &amp; \\frac{-2nf}{f-n} \\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{pmatrix} $$</p> <p>\u8fd9\u5c31\u662f\u6700\u7ec8\u7684\u900f\u89c6\u6295\u5f71\u7684\u77e9\u9635\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u5047\u8bbe\u4e86\u8f93\u5165\u7684\u5750\u6807\u7684 $w=1$\uff0c\u5982\u679c\u8f93\u5165\u7684\u9f50\u6b21\u5750\u6807\u7684 $w \\ne 1$\uff0c\u8ba1\u7b97\u7ed3\u679c\u5c31\u4f1a\u6709\u95ee\u9898\u3002\u5728 OpenGL \u4e2d\uff0c\u53ef\u4ee5\u7528 gluPerspective() \u51fd\u6570\u5f97\u5230\u5b83\uff1a</p> <p> </p> \u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08\u56fe\u6e90 gluPerspective\uff09 <p>\u548c\u4e0a\u9762\u7684\u7ed3\u679c\u770b\u4f3c\u4e0d\u540c\uff0c\u4f46\u53ea\u8981\u8bbe\u5b9a $r=-l, t=-b, f=\\frac{n}{t}, aspect=\\frac{r}{t}$\uff0c\u4e24\u4e2a\u77e9\u9635\u5c31\u662f\u4e00\u6837\u7684\u3002\u4e5f\u5c31\u662f\u8bf4 gluPerspective \u91c7\u7528\u4e86\u900f\u89c6\u6295\u5f71\u7684\u7279\u6b8a\u60c5\u51b5\uff1a\u5de6\u53f3\u548c\u4e0a\u4e0b\u5bf9\u79f0\u3002</p> <p>\u5176\u4e2d aspect \u662f\u957f\u5bbd\u6bd4\uff08x \u8f74\u9664\u4ee5 y \u8f74\uff09\uff1b$f=cot(\\frac{fovy}{2})$ \u662f\u8fd9\u4e48\u63a8\u5bfc\u7684\uff1ay \u65b9\u5411\u4e0a\u7684\u89c6\u91ce\u89d2\u5ea6\u4e0a\u4e0b\u5bf9\u79f0\uff0c\u89d2\u5ea6\u5927\u5c0f\u662f $fovy$\uff0c\u90a3\u4e48\u5728\u6c34\u5e73\u7ebf\u4e0a\u65b9\u7684\u89d2\u5ea6\u5c31\u662f $\\frac{fovy}{2}$\uff0c\u800c\u8fd9\u4e2a\u89d2\u5ea6\u5728\u4e09\u89d2\u5f62\u4e2d\uff0c\u5b83\u7684\u5bf9\u8fb9\u662f $t$\uff0c\u90bb\u8fb9\u662f $n$\uff0c\u6240\u4ee5 $tan(\\frac{fovy}{2})=\\frac{t}{n}$\uff0c\u53cd\u8fc7\u6765\u5c31\u5f97\u5230 $f=\\frac{n}{t}=cot(\\frac{fovy}{2})$\u3002</p> <p>\u66f4\u52a0\u901a\u7528\u7684 OpenGL \u51fd\u6570\u662f glFrustum\uff0c\u5b83\u5f97\u5230\u7684\u77e9\u9635\u548c\u4e0a\u9762\u63a8\u5bfc\u51fa\u6765\u7684\u77e9\u9635\u662f\u4e00\u6837\u7684\uff0c\u6ca1\u8003\u8651\u7279\u6b8a\u60c5\u51b5\u3002</p> <p>mesa \u4e2d\u7684\u5b9e\u73b0\uff1a</p> <pre><code>// Source: https://github.com/Mesa3D/mesa/blob/957009978ef6d7121fc0d710d03bc20097d4d46b/src/mesa/math/m_matrix.c#L773-L797\nvoid\n_math_matrix_frustum( GLmatrix *mat,\n              GLfloat left, GLfloat right,\n              GLfloat bottom, GLfloat top,\n              GLfloat nearval, GLfloat farval )\n{\n   GLfloat x, y, a, b, c, d;\n   GLfloat m[16];\n\n   x = (2.0F*nearval) / (right-left);\n   y = (2.0F*nearval) / (top-bottom);\n   a = (right+left) / (right-left);\n   b = (top+bottom) / (top-bottom);\n   c = -(farval+nearval) / ( farval-nearval);\n   d = -(2.0F*farval*nearval) / (farval-nearval);  /* error? */\n\n#define M(row,col)  m[col*4+row]\n   M(0,0) = x;     M(0,1) = 0.0F;  M(0,2) = a;      M(0,3) = 0.0F;\n   M(1,0) = 0.0F;  M(1,1) = y;     M(1,2) = b;      M(1,3) = 0.0F;\n   M(2,0) = 0.0F;  M(2,1) = 0.0F;  M(2,2) = c;      M(2,3) = d;\n   M(3,0) = 0.0F;  M(3,1) = 0.0F;  M(3,2) = -1.0F;  M(3,3) = 0.0F;\n#undef M\n\n   matrix_multf( mat, m, MAT_FLAG_PERSPECTIVE );\n}\n</code></pre>"},{"location":"software/cg/#view","title":"View \u77e9\u9635","text":"<p>OpenGL \u4e2d\uff0c\u7ecf\u8fc7 Model \u548c View \u77e9\u9635\u6620\u5c04\u540e\u5f97\u5230 Eye Coordinates\uff0c\u76f8\u673a\u4f4d\u4e8e (0, 0, 0)\uff0c\u4e14\u770b\u5411 -Z \u8f74\u7684\u65b9\u5411\u3002\u8ba1\u7b97\u76f8\u673a View \u77e9\u9635\u7684 OpenGL \u51fd\u6570\u662f gluLookAt\u3002</p> <p>\u5728\u6620\u5c04\u4e4b\u524d\uff0c\u76f8\u673a\u4f4d\u4e8e\u4e16\u754c\u5750\u6807\u7684 (eyeX, eyeY, eyeZ)\uff0c\u89c6\u7ebf\u770b\u5411 (centerX, centerY, centerZ) \u70b9\uff08\u89c6\u91ce\u6b63\u524d\u65b9\uff09\uff0c\u4ee5\u53ca\u89c6\u91ce\u91cc\u5411\u4e0a\u7684\u65b9\u5411\u5728 3D \u91cc\u7684\u5411\u91cf (upX, upY, upZ)\uff08\u89c6\u91ce\u7684\u4e0a\u65b9\uff0cy \u8f74\uff09\u3002</p> <p>\u90a3\u4e48\u76f8\u673a\u6b63\u5bf9\u7684\u5411\u91cf F=(centerX-eyeX, centerY-eyeY, centerZ-eyeZ)\uff0c\u8fd9\u4e2a\u65b9\u5411\u5728\u6620\u5c04\u540e\u7684\u5750\u6807\u7cfb\u4e2d\u5c31\u662f -Z \u8f74\u3002\u4ee4 UP=(upX, upY, upZ)\uff0cUP \u6700\u7ec8\u5728\u89c6\u91ce\u91cc\u770b\u5230\u7684\u662f\u6cbf y \u8f74\u5411\u4e0a\uff0c\u4f46\u662f\u6620\u5c04\u4ee5\u540e\u53ef\u80fd\u4f1a\u6709 z \u7684\u5206\u91cf\uff0c\u4e5f\u5c31\u662f F \u548c UP \u4e0d\u4e00\u5b9a\u5782\u76f4\uff0c\u540e\u9762\u9700\u8981\u8003\u8651\u8fd9\u4e00\u70b9\u3002</p> <p> </p> \u76f8\u673a\u7684 eye\uff0cup \u548c center \u793a\u610f\u56fe\uff0c\u5176\u4e2d up \u5728 Y-Z \u5e73\u9762\u5185 <p> </p> center \u548c up \u5bf9\u5e94\u5c4f\u5e55\u7684\u4f4d\u7f6e <p>\u5bf9 $F$ \u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5f97\u5230 $f$\uff1b\u5bf9 UP \u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5f97\u5230 $u$\uff1b\u7531\u4e8e $u$ \u548c $f$ \u786e\u5b9a\u4e86 Y-Z \u5e73\u9762\uff0c\u6240\u4ee5\u6c42 X \u65b9\u5411\u7684\u5411\u91cf\uff0c\u76f4\u63a5\u8ba1\u7b97\u53c9\u79ef\u5373\u53ef\uff1a$s = f \\times u$\uff0c\u7531\u4e8e $f$ \u6307\u5411 -Z\uff0c$u$ \u5728 Y-Z \u5e73\u9762\u4e2d Y \u4e3a\u6b63\u7684\u534a\u5e73\u9762\uff0c\u6240\u4ee5\u5f97\u5230\u7684 s \u6307\u5411\u7684\u662f\u5c4f\u5e55\u7684\u53f3\u4fa7\uff0c\u4e0d\u59a8\u89c4\u5b9a\u53f3\u4fa7\u662f X \u6b63\u534a\u8f74\uff08\u53f3\u624b\u7cfb\uff09\u3002\u6b64\u65f6\u518d\u53c9\u79ef\uff0c\u5f97\u5230 Y \u8f74\u7684\u65b9\u5411\uff1a$y = s \\times f$\u3002</p> <p> </p> s \u548c y \u5411\u91cf\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u56fe\u4e2d\u6ca1\u6709\u4f53\u73b0\u5411\u91cf\u7684\u957f\u5ea6 <p>\u6b64\u65f6\u4e09\u4e2a\u8f74\u4e0a\u7684\u5411\u91cf\u90fd\u6709\u4e86\uff1aX \u8f74\u6b63\u65b9\u5411\u662f s\uff0cY \u8f74\u6b63\u65b9\u5411\u662f y\uff0cZ \u8f74\u8d1f\u65b9\u5411\u662f f\u3002\u7531\u4e8e\u53c9\u79ef\u4ee5\u524d\u5df2\u7ecf\u505a\u4e86\u6807\u51c6\u5316\uff0c\u6240\u4ee5\u8fd9\u4e09\u4e2a\u5411\u91cf\u90fd\u662f\u5355\u4f4d\u5411\u91cf\u3002\u90a3\u4e48\u5750\u6807\u7cfb\u7684\u53d8\u6362\u77e9\u9635\u5e94\u8be5\u5b9e\u73b0\u4e0b\u9762\u7684\u6620\u5c04\uff1a</p> <ul> <li>$Ms = M(s_x, s_y, s_z)^T = (1, 0, 0)^T$</li> <li>$My = M(y_x, y_y, y_z)^T = (0, 1, 0)^T$</li> <li>$Mz = M(f_x, f_y, f_z)^T = (0, 0, -1)^T$</li> </ul> <p>\u4e8e\u662f\uff1a</p> <p>$$ M=\\begin{pmatrix} s_x &amp; s_y &amp; s_z \\ y_x &amp; y_y &amp; y_z \\ -f_x &amp; -f_y &amp; -f_z \\ \\end{pmatrix} $$</p> <p>\u8fd9\u91cc\u4f9d\u8d56\u4e86\u4e09\u4e2a\u5411\u91cf $s$ $y$ $-f$ \u90fd\u662f\u5355\u4f4d\u5411\u91cf\uff0c\u4e14\u4e92\u76f8\u6b63\u4ea4\u7684\u6027\u8d28\u3002</p> <p>\u628a\u9f50\u6b21\u5750\u6807\u7684 w \u7ef4\u5ea6\u52a0\u56de\u6765\uff0c\u5c31\u662f\uff1a</p> <p>$$ M=\\begin{pmatrix} s_x &amp; s_y &amp; s_z &amp; 0 \\ y_x &amp; y_y &amp; y_z &amp; 0 \\ -f_x &amp; -f_y &amp; -f_z &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} $$</p> <p>\u4ee5\u4e0a\u77e9\u9635\u89e3\u51b3\u4e86\u76f8\u673a\u5750\u6807\u7cfb\u7684\u95ee\u9898\uff0c\u5269\u4e0b\u5c31\u662f\u628a\u5750\u6807 (eyeX, eyeY, eyeZ) \u632a\u5230 (0, 0, 0) \u4e0a\uff1a</p> <p>$$ M=\\begin{pmatrix} s_x &amp; s_y &amp; s_z &amp; 0 \\ y_x &amp; y_y &amp; y_z &amp; 0 \\ -f_x &amp; -f_y &amp; -f_z &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\mathrm{eyeX} \\ 0 &amp; 1 &amp; 0 &amp; -\\mathrm{eyeY} \\ 0 &amp; 0 &amp; 1 &amp; -\\mathrm{eyeZ} \\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} $$</p> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u5b8c\u6574\u7684 View \u77e9\u9635\u3002</p> <p>mesa \u4e2d\u7684\u5b9e\u73b0\uff1a</p> <pre><code>// Source: https://gitlab.freedesktop.org/mesa/mesa/-/blob/c6a80dc32ef17bc972d4137ce7444ebed4d28ebb/src/glu/sgi/libutil/project.c#L108\n// Comments added\nvoid gluLookAt(GLdouble eyex, GLdouble eyey, GLdouble eyez, GLdouble centerx,\n    GLdouble centery, GLdouble centerz, GLdouble upx, GLdouble upy,\n    GLdouble upz)\n{\n    float forward[3], side[3], up[3];\n    GLfloat m[4][4];\n\n    /* Compute f = center - eye */\n    forward[0] = centerx - eyex;\n    forward[1] = centery - eyey;\n    forward[2] = centerz - eyez;\n\n    up[0] = upx;\n    up[1] = upy;\n    up[2] = upz;\n\n    normalize(forward);\n\n    /* Side = forward x up */\n    cross(forward, up, side);\n    normalize(side);\n\n    /* Recompute up as: up = side x forward */\n    cross(side, forward, up);\n\n    __gluMakeIdentityf(&amp;m[0][0]);\n\n    /* s_x s_y s_z */\n    m[0][0] = side[0];\n    m[1][0] = side[1];\n    m[2][0] = side[2];\n\n    /* y_x y_y y_z */\n    m[0][1] = up[0];\n    m[1][1] = up[1];\n    m[2][1] = up[2];\n\n    /* -f_x -f_y -f_z */\n    m[0][2] = -forward[0];\n    m[1][2] = -forward[1];\n    m[2][2] = -forward[2];\n\n    /* Update view matrix */\n    glMultMatrixf(&amp;m[0][0]);\n    glTranslated(-eyex, -eyey, -eyez);\n}\n</code></pre>"},{"location":"software/cg/#_6","title":"\u5149\u7ebf\u8ffd\u8e2a","text":"<p>Whitted-style ray-tracing \u662f\u4e00\u79cd\u5178\u578b\u7684\u5149\u7ebf\u8ffd\u8e2a\u7b97\u6cd5\uff0c\u5b83\u7684\u5b9e\u73b0\u601d\u8def\u662f\uff1a</p> <ol> <li>\u5bf9\u4e8e\u8981\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u7684\u70b9\uff0c\u8ba1\u7b97\u5b83\u5728 3 \u7ef4\u7a7a\u95f4\u4e2d\u7684\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u4e0e\u76f8\u673a\u7684\u539f\u70b9\u6784\u6210\u4e00\u4e2a\u5c04\u7ebf</li> <li>\u8ba1\u7b97\u5c04\u7ebf\u4e0e\u573a\u666f\u4e2d\u8868\u9762\u7684\u7b2c\u4e00\u4e2a\u4ea4\u70b9\uff0c\u6839\u636e\u8868\u9762\u7684\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\uff1a<ol> <li>\u6f2b\u53cd\u5c04\uff08Diffuse\uff09\uff1a\u627e\u5230\u6240\u6709\u7684\u5149\u6e90\uff0c\u627e\u51fa\u90a3\u4e9b\u53ef\u4ee5\u7167\u4eae\u4ea4\u70b9\u7684\u5149\u6e90\uff08\u5149\u6e90\u5230\u4ea4\u70b9\u4e4b\u95f4\u6ca1\u6709\u906e\u6321\uff09\uff0c\u8ba1\u7b97\u51fa\u5149\u6e90\u5bf9\u8fd9\u4e00\u70b9\u7684\u8d21\u732e</li> <li>\u955c\u9762\u53cd\u5c04\uff08Specular\uff09\uff1a\u8ba1\u7b97\u51fa\u53cd\u5c04\u5149\uff0c\u628a\u53cd\u5c04\u5149\u5f53\u6210\u89c6\u7ebf\uff0c\u7ee7\u7eed\u9012\u5f52</li> <li>\u955c\u9762\u53cd\u5c04 + \u6298\u5c04\uff08Refraction\uff09\uff1a\u5206\u522b\u8ba1\u7b97\u51fa\u53cd\u5c04\u5149\u548c\u6298\u5c04\u5149\uff0c\u5206\u522b\u9012\u5f52\u7136\u540e\u6309\u7167 Fresnel \u65b9\u7a0b\u52a0\u6743\u6c42\u548c</li> </ol> </li> </ol> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6240\u6709\u7684\u5149\u7ebf\u5728\u9012\u5f52\u7ec8\u6b62\u7684\u65f6\u5019\uff0c\u8981\u4e48\u662f\u5728\u6f2b\u53cd\u5c04\u8868\u9762\u4e0a\uff0c\u8981\u4e48\u5c31\u662f\u6ca1\u6709\u627e\u5230\u76f8\u4ea4\u7684\u8868\u9762\u3002</p>"},{"location":"software/cg/#_7","title":"\u8f90\u5c04\u5ea6\u91cf\u5b66","text":"<p>\u53c2\u8003 \u8def\u5f84\u8ffd\u8e2a\uff08Path Tracing\uff09\u4e0e\u6e32\u67d3\u65b9\u7a0b (Render Equation) \u548c GAMES101 Lecture 15\uff1a</p> <ul> <li>Radiant energy Q\uff1a\u5149\u6e90\u5411\u7a7a\u95f4\u4e2d\u8f90\u5c04\u7684\u80fd\u91cf\uff0c\u5355\u4f4d\u662f J</li> <li>Radiant flux(power) $\\Phi$\uff1a\u5149\u6e90\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5411\u7a7a\u95f4\u4e2d\u8f90\u5c04\u7684\u80fd\u91cf\uff0c\u5355\u4f4d\u662f W</li> <li>Solid angle $\\omega$\uff1a\u7acb\u4f53\u89d2\uff0c\u5355\u4f4d\u662f steradian/square radian \u7403\u9762\u5ea6\uff0c\u7b80\u5199 sr\uff1b\u662f\u5728\u7403\u9762\u4e0a\u4e00\u4e2a\u5c0f\u5e73\u9762\u7684\u9762\u79ef\u9664\u4ee5\u534a\u5f84\u7684\u5e73\u65b9\uff0c\u5373 $\\omega=A/r^2$</li> <li>Radiant intensity I\uff1a\u5149\u6e90\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u5185\u7684 Radiant flux\uff0c\u5355\u4f4d\u662f W/sr</li> <li>Irradiance E\uff1a\u5355\u4f4d\u9762\u79ef\u63a5\u53d7\u5230\u7684 Radiant flux\uff0c\u5373 $E=\\Phi/A$\uff0c\u5355\u4f4d\u662f $W/m^2$</li> <li>Radiance L\uff1a\u5355\u4f4d\u9762\u79ef\u4e0b\uff0c\u63a5\u6536\u5230\u6765\u81ea\u5355\u4f4d\u7acb\u4f53\u89d2\u7684 Radiant flux\uff0c\u5355\u4f4d\u662f $W/sr \\cdot m^2$</li> </ul>"},{"location":"software/cg/#rendering-equation","title":"Rendering equation","text":"<p>\u53c2\u8003 GAMES101 Lecture 15\uff1a</p> <p>$$ L_o(p, \\omega_o) = L_e(p, \\omega_o) + \\int_{\\Omega} L_i(p, \\omega_i) f_r(p, \\omega_i, \\omega_o) (n \\cdot \\omega_i) \\mathrm{d} \\omega_i $$</p> <p>\u542b\u4e49\uff1a\u4ece\u5e73\u9762\u4e0a\u7684 $p$ \u70b9\u51fa\u53d1\uff0c\u5411 $\\omega_r$ \u53d1\u5c04\u7684 Radiance \u5305\u62ec\u4e24\u90e8\u5206\uff1a</p> <ol> <li>$L_e(p, \\omega_o)$\uff1a\u8fd9\u4e2a\u70b9\u672c\u8eab\u53d1\u7684\u5149\uff0c\u4f8b\u5982\u5149\u6e90</li> <li>$\\int_{\\Omega} L_i(p, \\omega_i) f_r(p, \\omega_i, \\omega_o) (n \\cdot \\omega_i) \\mathrm{d} \\omega_i$\uff1a\u8003\u8651\u534a\u7403\u9762\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u5165\u5c04\u65b9\u5411 $\\omega_i$\uff0c\u8fd9\u4e2a\u65b9\u5411\u4e0a\u5165\u5c04\u5230 $p$ \u70b9\u7684 Radiance \u662f $L_i(p, \\omega_i)$\uff0c\u5176\u4e2d\u6709\u4e00\u5b9a\u6bd4\u4f8b\u4f1a\u53cd\u5c04\u5230 $\\omega_o$ \u65b9\u5411\u4e0a\uff0c\u8fd9\u4e2a\u6bd4\u4f8b\u5c31\u662f BRDF $f_r(p, \\omega_i, \\omega_o)$\uff0c\u6700\u540e\u7531\u4e8e\u5165\u5c04\u65b9\u5411\u548c\u5e73\u9762\u7684\u6cd5\u65b9\u5411\u6709\u4e00\u4e2a\u5939\u89d2 $\\theta$\uff0c\u6839\u636e Lambert's Cosine Law\uff0c\u9700\u8981\u4e58\u4e0a $\\cos \\theta = n \\cdot \\omega_i$ \u9879\u3002</li> </ol>"},{"location":"software/cg/#bidirectional-reflectance-distribution-function","title":"Bidirectional reflectance distribution function","text":"<p>BRDF\uff08Bidirectional reflectance distribution function\uff09\u6307\u7684\u662f\u5728\u4e00\u4e2a\u8868\u9762\u4e0a\uff0c\u7279\u5b9a\u89d2\u5ea6\uff08$\\omega_i$\uff09\u7684\u5165\u5c04\u5149\u6709\u591a\u5927\u6bd4\u4f8b\u4f1a\u88ab\u53cd\u5c04\u5230\u7279\u5b9a\u89d2\u5ea6\uff08$\\omega_o$\uff09\u7684\u51fa\u5c04\u5149\u3002</p> <p>\u5e38\u89c1\u7684 BRDF \u6709\uff1a</p> <ul> <li>Lambertian\uff1a\u4e00\u822c\u7528\u4e8e\u6f2b\u53cd\u5c04\u8868\u9762\uff0c\u5149\u5747\u5300\u53cd\u5c04\u5230\u5404\u4e2a\u89d2\u5ea6\uff0c\u56e0\u6b64\u548c\u51fa\u5c04\u89d2\u5ea6\u65e0\u5173\uff1a$f=c/\\pi$\uff0c\u5176\u4e2d $c$ \u662f\u8868\u9762\u7684\u989c\u8272\uff0c\u9664\u4ee5 $\\pi$ \u662f\u4e3a\u4e86\u6ee1\u8db3\u80fd\u91cf\u5b88\u6052\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u89c1 Deriving Lambertian BRDF from first principles</li> <li>Phong \u548c Blinn-Phong\uff1a\u7528\u4e8e OpenGL Fixed-function pipeline</li> <li>Cook-Torrance\uff1a$f=k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(n \\cdot \\omega_i)(n \\cdot \\omega_o)}$\uff0c\u524d\u9762\u7684 $k_d\\frac{c}{\\pi}$ \u548c Lambertian \u4e00\u6837\uff0c\u540e\u9762\u7684 $DFG$ \u8868\u793a\u4e09\u4e2a\u51fd\u6570\u7684\u4e58\u79ef\uff0c\u5206\u522b\u662f Normal Distribution Function\uff0cFresnel Function \u548c Geometric Attenuation Function\uff0c\u8be6\u89c1 Physically-Based Rendering Cook-Torrance Reflectance Model \u548c LearnOpenGL CN - Theory</li> </ul>"},{"location":"software/cg/#api","title":"\u56fe\u5f62 API \u5bf9\u6bd4","text":"<p>\u4e0b\u9762\u7ed9\u51fa\u4e0d\u540c\u56fe\u5f62 API \u6216\u8005\u5e93\u5728\u7ea6\u5b9a\u4e0a\u7684\u4e0d\u540c\uff1a</p> OpenGL Direct3D Metal Vulkan NDC \u91c7\u7528 \u5de6\u624b\u7cfb \u5de6\u624b\u7cfb \u5de6\u624b\u7cfb \u53f3\u624b\u7cfb NDC \u4e2d z \u7684\u8303\u56f4 [-1, 1] [0, 1] [0, 1] [0, 1] NDC (-1, -1) \u5728 \u5de6\u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u5de6\u4e0b\u89d2 \u5de6\u4e0a\u89d2 Framebuffer (0,0) \u5728 \u5de6\u4e0b\u89d2 \u5de6\u4e0a\u89d2 \u5de6\u4e0a\u89d2 \u5de6\u4e0a\u89d2 <p>\u53c2\u8003\uff1a</p> <ul> <li>Unity - Manual: Writing shaders for different graphics APIs</li> <li>Coordinate systems - gpuweb</li> <li>Vulkan \u96c6\u6210\uff1a\u56fe\u5f62 API \u5750\u6807\u7cfb\u5bf9\u6bd4\u53ca\u89e3\u51b3\u65b9\u6848</li> <li>Vulkan\u2019s coordinate system</li> </ul> <p>\u53e6\u5916\u8fd8\u63a8\u8350\u9605\u8bfb\uff1a</p> <ul> <li>What are the coordinates?</li> </ul>"},{"location":"software/cpio/","title":"cpio \u6587\u4ef6\u683c\u5f0f","text":"<p>cpio \u6587\u4ef6\u6709\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\uff0c\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li>binary/pwb\uff1a\u65e9\u671f\u7684 cpio \u4e8c\u8fdb\u5236\u683c\u5f0f</li> <li>odc\uff1aPOSIX \u6807\u51c6\u5316\u7684 cpio \u683c\u5f0f\uff0c\u6bd4\u8f83\u5e38\u7528</li> <li>newc\uff1aSVR4\uff08System V Release 4\uff09\u5f15\u5165\u7684 cpio \u683c\u5f0f</li> </ol> <p>\u63a8\u8350\u9605\u8bfb\uff1acpio.5\u3002</p>"},{"location":"software/cpio/#odc","title":"odc","text":"<p>cpio \u7684 odc \u6587\u4ef6\u683c\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u7cfb\u5217\u7684 File Entry\u3002\u6bcf\u4e2a File Entry \u7531\u5934\u90e8\uff0c\u6587\u4ef6\u540d\u548c\u6570\u636e\u7ec4\u6210\uff0c\u5176\u5934\u90e8\u683c\u5f0f\u662f\uff1a</p> <pre><code>struct cpio_odc_entry_header {\n  char magic[6];\n  char dev[6];\n  char ino[6];\n  char mode[6];\n  char uid[6];\n  char gid[6];\n  char nlink[6];\n  char rdev[6];\n  char mtime[11];\n  char namesize[6];\n  char filesize[11];\n};\n</code></pre> <p>magic \u5b57\u6bb5\u6052\u4e3a <code>070707</code>\u3002\u5176\u4ed6\u5b57\u6bb5\u90fd\u4fdd\u5b58\u7684\u662f\u6570\u5b57\uff0c\u7528\u516b\u8fdb\u5236\u6570\u8f6c\u6210 ASCII \u7801\u4fdd\u5b58\u3002\u4f8b\u5982\u6587\u4ef6\u540d\u957f\u5ea6\u662f 28\uff0c\u8f6c\u6210\u516b\u8fdb\u5c55\u662f 034\uff0c<code>namesize</code> \u5b57\u6bb5\u662f 6 \u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u6dfb\u52a0\u524d\u7f6e 0\uff0c\u5f97\u5230 <code>000034</code>\uff0c\u7528 ASCII \u4fdd\u5b58\u5728 <code>namesize</code> \u5b57\u6bb5\u3002</p> <p>\u8bfb\u53d6 Entry \u5934\u90e8\u4ee5\u540e\uff0c\u628a\u5176\u4e2d\u7684 <code>namesize</code> \u548c <code>filesize</code> \u5b57\u6bb5\u8f6c\u6362\u6210\u6574\u6570\uff0c\u5c31\u77e5\u9053\u6587\u4ef6\u540d\uff08\u5305\u62ec\u672b\u5c3e 0\uff09\u548c\u6570\u636e\u7684\u957f\u5ea6\u3002\u5934\u90e8\u540e\u9762\u7d27\u63a5\u7740\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u7136\u540e\u662f\u6570\u636e\u3002\u6240\u6709 Entry \u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u5b8c\u6574\u7684 cpio \u6587\u4ef6\u3002\u6ca1\u6709\u989d\u5916\u7684 padding\u3002</p> <p>\u4e3a\u4e86\u8868\u793a cpio \u6587\u4ef6\u7684\u7ed3\u675f\uff0c\u6700\u540e\u4e00\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u662f <code>TRAILER!!!</code>\u3002</p> <p>cpio \u7684\u8bbe\u8ba1\u975e\u5e38\u7b80\u5355\uff0c\u88ab\u7528\u4e8e initramfs \u7b49\u573a\u5408\u3002\u76f8\u6bd4 Tar\uff0ccpio \u6ca1\u6709\u628a\u7ed3\u6784\u4f53\u5bf9\u9f50\u5230 512 \u5b57\u8282\u7684\u8fb9\u754c\uff0c\u5e76\u4e14\u6587\u4ef6\u540d\u4e5f\u91c7\u7528\u4e86\u52a8\u6001\u957f\u5ea6\u7684\u65b9\u6cd5\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0ccpio \u6587\u4ef6\u7684\u683c\u5f0f\u5c31\u662f\uff1a<code>(\u5934\u90e8\uff0c\u6587\u4ef6\u540d\uff0c\u6570\u636e)*</code>\u3002\u4e3a\u4e86\u8868\u793a\u7ed3\u675f\uff0c\u6700\u540e\u4e00\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u662f\u56fa\u5b9a\u7684 <code>TRAILER!!!</code>\u3002</p>"},{"location":"software/cpio/#newc","title":"newc","text":"<p>newc \u76f8\u6bd4 odc \u683c\u5f0f\uff0c\u4fee\u6539\u4e86\u4e00\u4e9b\u5b57\u6bb5\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u628a dev \u62c6\u5206\u6210\u4e86 major \u548c minor\uff0c\u6dfb\u52a0\u4e86 crc\uff1a</p> <pre><code>struct cpio_newc_entry_header {\n  char magic[8];\n  char ino[8];\n  char mode[8];\n  char uid[8];\n  char gid[8];\n  char nlink[8];\n  char mtime[8];\n  char filesize[8];\n  char devmajor[8];\n  char devminor[8];\n  char rdevmajor[8];\n  char rdevminor[8];\n  char namesize[8];\n  char check[8];\n};\n</code></pre> <p>\u6b64\u65f6\u7684 magic \u5b57\u6bb5\u662f <code>070701</code> \u6216\u8005 <code>070702</code>\uff0c\u4e0e odc \u8868\u793a\u533a\u5206\u3002</p> <p>\u5982\u679c\u8ba1\u7b97\u4e86 CRC\uff0c\u90a3\u4e48 CRC \u4f1a\u88ab\u586b\u5165 <code>check</code> \u5b57\u6bb5\uff0c\u5e76\u4e14\u8bbe\u7f6e <code>magic</code> \u4e3a <code>070702</code>\uff1b\u5982\u679c\u6ca1\u6709 CRC\uff0c\u90a3\u4e48 <code>magic</code> \u4e3a <code>070701</code>\u3002</p>"},{"location":"software/cpio/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>\u521b\u5efa cpio\uff1a<code>find . | cpio -ov &gt; archive.cpio</code></p> <p>\u5c55\u5f00 cpio\uff1a<code>cpio -idv &lt; archive.cpio</code></p>"},{"location":"software/dijkstra/","title":"Dijkstra \u7b97\u6cd5","text":"<p>Dijkstra \u89e3\u51b3\u7684\u662f\u56fe\u4e0a\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff08Single Source Shortest Path\uff0cSSSP\uff09\u3002</p> <p>\u5b9e\u73b0\u5927\u81f4\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def dijkstra(graph, source):\n    Q = priority_queue()\n\n    # initialize dist and Q\n    dist[source] = 0\n    for v in graph.vertices:\n        if v != source:\n            dist[v] = INF\n\n        Q.add_with_priority(v, dist[v])\n\n    while not Q.empty:\n        # find min dist and relax edge\n        u = Q.extract_min()\n\n        for v in u.neighbors():\n            # relax\n            new_dist = dist[u] + u.dist_to(v)\n            if new_dist &lt; dist[v]:\n                dist[v] = new_dist\n                Q.decrease_priority(v, new_dist)\n</code></pre> <p>Q \u662f\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u961f\u5217\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4f18\u5148\u7ea7\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li><code>add_with_priority(element, priority)</code>\uff1a\u63d2\u5165\u65b0\u5143\u7d20</li> <li><code>empty()</code>\uff1a\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a</li> <li><code>extract_min()</code>\uff1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20</li> <li><code>decrease_priority()</code>\uff1a\u4fee\u6539\u961f\u5217\u4e2d\u7279\u5b9a\u5143\u7d20\u7684\u4f18\u5148\u7ea7\uff0c\u4fdd\u8bc1\u961f\u5217\u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20</li> </ol> <p>\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(|E|T_{dp}+|V|T_{em})$\uff0c\u5176\u4e2d $E$ \u662f\u8fb9\u7684\u96c6\u5408\uff0c$V$ \u662f\u9876\u70b9\u7684\u96c6\u5408\uff0c$T_{dp}$ \u662f <code>decrease_priority()</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c$T_{em}$ \u662f <code>extract_min()</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u6839\u636e\u4f18\u5148\u961f\u5217\u7684\u4e0d\u540c\u5b9e\u73b0\uff0c\u5f97\u5230\u4e0d\u540c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <ol> <li>\u7528\u6570\u7ec4\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5219 $T_{dp}=O(1), T_{em}=O(|V|)$\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(|E|+|V|^2)=O(|V|^2)$</li> <li>\u7528\u5e73\u8861\u6811\u6216\u8005\u5806\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5219 $T_{dp}=O(\\log{|V|}), T_{em}=O(\\log{|V|})$\uff0c\u7b97\u6cd5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((|E|+|V|)\\log{|V|})$</li> <li>\u7528 Fibonacci \u5806\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5219 $T_{dp}=O(1), T_{em}=O(\\log{|V|})$\uff0c\u7b97\u6cd5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|E|+|V|\\log{|V|})$</li> </ol> <p>\u6700\u8fd1\u4e00\u7bc7\u8bba\u6587 A Randomized Algorithm for Single-Source Shortest Path on Undirected Real-Weighted Graphs \u63d0\u51fa\u4e86 $O(|E|\\sqrt{\\log{|V|}\\log{\\log{|V|}}})$ \u7684 Dijkstra \u53d8\u79cd\u7b97\u6cd5\u3002</p> <p>\u53c2\u8003\u4e86 Wikipedia\u3002</p>"},{"location":"software/gcc/","title":"GCC Internals","text":"<p>\u672c\u6587\u662f\u5bf9 GNU Compiler Collection Internals \u6587\u6863\u7684\u6574\u7406\u548c\u603b\u7ed3\u3002\u6587\u7ae0\u5f15\u7528\u4e86\u90e8\u5206 GCC \u6e90\u7801\u3002</p>"},{"location":"software/gcc/#rtl","title":"RTL","text":""},{"location":"software/gcc/#rtl_1","title":"\u67e5\u770b RTL","text":"<p>GCC \u7684 RTL \u662f\u91c7\u7528 Lisp \u8bed\u8a00\u63cf\u8ff0\u7684\u4f4e\u5c42\u6b21\u7684\u4e2d\u95f4\u8bed\u8a00\uff0c\u662f\u8f6c\u6362\u4e3a\u673a\u5668\u6307\u4ee4\u524d\u7684\u6700\u540e\u4e00\u4e2a\u8868\u793a\u3002\u5728\u751f\u6210\u6c47\u7f16\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u53c2\u6570 <code>-dP</code> \u5c31\u53ef\u4ee5\u770b\u5230\u6700\u540e\u7684 RTL \u548c\u6c47\u7f16\u7684\u5bf9\u5e94\u5173\u7cfb\uff1a</p> <pre><code>#(insn 13 8 14 (set (reg/i:DI 10 a0)\n#        (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n#                (reg:SI 11 a1 [78])))) \"kb.c\":3:1 21 {*mulsi3_extended}\n#     (expr_list:REG_DEAD (reg:SI 11 a1 [78])\n#        (nil)))\n        mulw    a0,a0,a1        # 13    [c=20 l=4]  *mulsi3_extended\n#(jump_insn 21 20 22 (simple_return) \"kb.c\":3:1 246 {simple_return}\n#     (nil)\n# -&gt; simple_return)\n        ret             # 21    [c=0 l=4]  simple_return\n\n</code></pre> <p>\u5982\u679c\u60f3\u8981 dump \u51fa\u6bcf\u4e2a RTL pass \u540e\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570\uff1a<code>-fdump-rtl-all</code>\uff0c\u53ef\u4ee5\u770b\u5230\u5f62\u5982\u4e0b\u9762\u7684 RTL \u4ee3\u7801\uff1a</p> <pre><code>;; Function mul (mul, funcdef_no=0, decl_uid=1488, cgraph_uid=1, symbol_order=0)\n\n(note 1 0 5 NOTE_INSN_DELETED)\n(note 5 1 19 [bb 2] NOTE_INSN_BASIC_BLOCK)\n(note 19 5 2 NOTE_INSN_PROLOGUE_END)\n(note 2 19 3 NOTE_INSN_DELETED)\n(note 3 2 4 NOTE_INSN_DELETED)\n(note 4 3 7 NOTE_INSN_FUNCTION_BEG)\n(note 7 4 8 NOTE_INSN_DELETED)\n(note 8 7 13 NOTE_INSN_DELETED)\n(insn 13 8 14 (set (reg/i:DI 10 a0)\n        (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n                (reg:SI 11 a1 [78])))) \"kb.c\":3:1 21 {*mulsi3_extended}\n     (expr_list:REG_DEAD (reg:SI 11 a1 [78])\n        (nil)))\n(insn 14 13 20 (use (reg/i:DI 10 a0)) \"kb.c\":3:1 -1\n     (nil))\n(note 20 14 21 NOTE_INSN_EPILOGUE_BEG)\n(jump_insn 21 20 22 (simple_return) \"kb.c\":3:1 246 {simple_return}\n     (nil)\n -&gt; simple_return)\n(barrier 22 21 18)\n(note 18 22 0 NOTE_INSN_DELETED)\n</code></pre>"},{"location":"software/gcc/#rtl_2","title":"\u9605\u8bfb RTL","text":"<p>\u53ef\u4ee5\u770b\u5230 RTL \u662f\u4e00\u7cfb\u5217\u7684 S-exp\uff0c\u6bcf\u4e2a S-exp \u7684\u524d\u4e09\u4e2a\u6574\u6570\u53c2\u6570\u5206\u522b\u662f id\uff0cprev \u548c next\uff0c\u8868\u793a\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u3002\u6838\u5fc3\u662f\u8981\u770b (insn) \u7684\u7b2c\u56db\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p> <pre><code>(set (reg/i:DI 10 a0)\n        (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n                (reg:SI 11 a1 [78]))))\n</code></pre> <p>\u8868\u793a\u8fd9\u4e2a\u6307\u4ee4\u7684\u4f5c\u7528\u662f\uff0c\u628a int32 \u7c7b\u578b\u7684 a0 \u5bc4\u5b58\u5668\u7684\u503c\u4e58\u4ee5 int32 \u7c7b\u578b\u7684 a1 \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u7ed3\u679c\u7b26\u53f7\u6269\u5c55\u5230 int64\uff0c\u5199\u5165\u5230 a0 \u5bc4\u5b58\u5668\u4e2d\u3002\u5176\u4e2d\u8868\u793a\u7c7b\u578b\u7684\u662f DI/SI\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u540d\u5b57\u548c\u4f4d\u6570\u7684\u5bf9\u5e94\u5173\u7cfb\uff1a</p> <ul> <li>\u6574\u6570\uff1aB(Bit)I=1, Q(Quarter)I=8, H(Half)I=16, S(Single)I=32, D(Double)I=64, T(Tetra)I=128</li> <li>\u6d6e\u70b9\uff1aQ(Quarter)F=8, H(Half)F=16, S(Single)F=32, D(Double)F=64, T(Tetra)F=128</li> <li>\u5341\u8fdb\u5236\u6d6e\u70b9\uff1a*D</li> <li>\u6709\u7406\u6570\uff1a*Q</li> <li>\u590d\u6570\uff1a*C</li> </ul> <p>\u7a0d\u5fae\u548c\u4e60\u60ef\u4e0d\u540c\u7684\u662f Q \u8868\u793a Quarter \u800c\u4e0d\u662f Quad\u3002</p> <p>\u5bc4\u5b58\u5668\u7684\u8868\u793a\u65b9\u5f0f\u662f <code>(reg:m n)</code>\uff1a</p> <pre><code>(reg/i:DI 10 a0)\n(reg:SI 10 a0 [77])\n(reg:SI 11 a1 [78])\n</code></pre> <p>\u8fd9\u91cc\u7684 DI/SI \u5c31\u662f\u7c7b\u578b\uff0c10/11 \u662f\u5bc4\u5b58\u5668\u7f16\u53f7\uff0c\u540e\u9762\u7684 a0/a1 \u662f\u5bc4\u5b58\u5668 10/11 \u5728 RISC-V \u67b6\u6784\u91cc\u7684 ABI \u540d\u79f0\u3002<code>/i</code> \u8868\u793a\u8fd9\u4e2a\u5bc4\u5b58\u5668\u4f1a\u4fdd\u5b58\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08<code>REG_FUNCTION_VALUE_P(x)</code>\uff09\u3002</p>"},{"location":"software/gcc/#_1","title":"\u6307\u4ee4\u6a21\u677f","text":"<p>\u540c\u4e00\u884c\u6700\u540e\u8fd8\u6709\u4e00\u4e2a <code>{*mulsi3_extended}</code>\uff0c\u8fd9\u8868\u793a\u7684\u662f\u8fd9\u4e00\u4e2a insn \u5bf9\u5e94\u4e86\u54ea\u4e00\u4e2a\u89c4\u5219\uff0c\u8fd9\u53ef\u4ee5\u5728 riscv.md \u4e2d\u627e\u5230\uff1a</p> <pre><code>(define_insn \"mulsi3_extended\"\n  [(set (match_operand:DI              0 \"register_operand\" \"=r\")\n    (sign_extend:DI\n        (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n             (match_operand:SI 2 \"register_operand\" \" r\"))))]\n  \"(TARGET_ZMMUL || TARGET_MUL) &amp;&amp; TARGET_64BIT\"\n  \"mulw\\t%0,%1,%2\"\n  [(set_attr \"type\" \"imul\")\n   (set_attr \"mode\" \"SI\")])\n</code></pre> <p>\u8fd9\u8868\u793a\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u89c4\u5219\uff0c\u6784\u6210\u4e86\u4ece RTL \u5230\u6307\u4ee4\u7684\u6620\u5c04\u5173\u7cfb\u3002\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u662f\uff1a</p> <pre><code>  [(set (match_operand:DI              0 \"register_operand\" \"=r\")\n    (sign_extend:DI\n        (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n             (match_operand:SI 2 \"register_operand\" \" r\"))))]\n</code></pre> <p>\u610f\u601d\u662f\u53ef\u4ee5\u5339\u914d\u4e24\u4e2a\u64cd\u4f5c\u6570\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u6570\u5e94\u5f53\u662f\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570\uff08<code>register_operand</code>\uff0c<code>r</code> \u8868\u793a\u901a\u7528\u5bc4\u5b58\u5668\uff09\uff0c\u7c7b\u578b\u662f int32\uff08<code>:SI</code>\uff09\uff0c\u64cd\u4f5c\u6570\u4e58\u6cd5\u540e\u7b26\u53f7\u6269\u5c55\u5230 int64\uff08<code>:DI</code>\uff09\uff0c\u6700\u540e\u5199\u5165\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u76ee\u7684\u64cd\u4f5c\u6570\uff08<code>register_operand</code>\uff0c\u7c7b\u578b\u662f int64 <code>:DI</code>\uff0c\u4fdd\u5b58\u5728\u901a\u7528\u5bc4\u5b58\u5668 <code>r</code>\uff0c<code>=</code> \u8868\u793a\u5199\u5165\uff0c\u65e7\u6570\u636e\u4e22\u5f03\uff09\u3002\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\uff0c\u5c31\u5339\u914d\u4e0a\u4e86 <code>mulsi3_extended</code>\u3002</p> <p>\u4e0b\u4e00\u884c\uff1a</p> <pre><code>  \"(TARGET_ZMMUL || TARGET_MUL) &amp;&amp; TARGET_64BIT\"\n</code></pre> <p>\u6307\u7684\u662f\u989d\u5916\u7684\u6761\u4ef6\uff0c\u7528 C \u4ee3\u7801\u7f16\u5199\u3002\u6bd4\u5982\u8fd9\u91cc\u8981\u7528\u5230 mulw \u6307\u4ee4\uff0c\u4f46\u662f\u5982\u679c\u5f53\u524d\u7684 target \u4e0d\u652f\u6301\u8fd9\u4e2a\u6307\u4ee4\uff0c\u90a3\u5c31\u4e0d\u8981\u751f\u6210 mulw \u6307\u4ee4\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u8981\u5236\u5b9a\u9650\u5236\u6761\u4ef6\uff1a\u5b9e\u73b0\u4e86\u4e58\u6cd5\uff0c\u5e76\u4e14\u662f 64 \u4f4d\u3002</p> <p>\u518d\u4e0b\u4e00\u884c\u5c31\u662f\u8f93\u51fa\u7684\u6307\u4ee4\uff1a</p> <pre><code>  \"mulw\\t%0,%1,%2\"\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>%0</code> <code>%1</code> <code>%2</code> \u5c31\u4f1a\u66ff\u6362\u4e3a\u524d\u9762\u5339\u914d\u5f97\u5230\u7684\u64cd\u4f5c\u6570\uff0c\u6ce8\u610f\u524d\u9762 <code>match_operand</code> \u540e\u7684\u6574\u6570\uff0c\u8fd9\u5c31\u662f\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u548c GCC \u5185\u8054\u6c47\u7f16\u7684\u8bed\u6cd5\u7279\u522b\u76f8\u4f3c\uff0c\u5305\u62ec\u524d\u9762 <code>match_operand</code> \u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff1a<code>=r</code> \u548c <code>r</code>\uff0c\u5176\u5b9e\u548c\u5185\u8054\u6c47\u7f16\u91cc\u5bf9\u64cd\u4f5c\u6570\u7684 specifier \u4e5f\u662f\u975e\u5e38\u50cf\u7684\u3002</p> <pre><code>  [(set_attr \"type\" \"imul\")\n   (set_attr \"mode\" \"SI\")])\n</code></pre> <p>\u6700\u540e\u662f\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u662f\u7528\u6765\u7ed9\u8fd0\u7b97\u6807\u8bb0\u7c7b\u578b\u7684\uff0c\u4f8b\u5982\u8981\u9488\u5bf9\u5904\u7406\u5668\u6d41\u6c34\u7ebf\u8fdb\u884c\u4f18\u5316\uff0c\u90a3\u5c31\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u6307\u4ee4\u4f1a\u88ab\u5206\u5230\u54ea\u4e2a\u6d41\u6c34\u7ebf\u91cc\u9762\u3002</p> <p>\u5b8c\u6574\u7684\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>(define_insn\n  [insn-pattern]\n  \"condition\"\n  \"output-template\"\n  [insn-attribute])\n</code></pre> <p>\u5ffd\u7565\u4e86\u53ef\u9009\u7684\u547d\u540d\u3002</p>"},{"location":"software/gcc/#_2","title":"\u4f8b\u5b50\u56de\u987e","text":"<p>\u56de\u987e\u4e00\u4e0b\u5f00\u5934\u7684\u4f8b\u5b50\uff1a</p> <pre><code>#(insn 13 8 14 (set (reg/i:DI 10 a0)\n#        (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n#                (reg:SI 11 a1 [78])))) \"kb.c\":3:1 21 {*mulsi3_extended}\n#     (expr_list:REG_DEAD (reg:SI 11 a1 [78])\n#        (nil)))\n        mulw    a0,a0,a1        # 13    [c=20 l=4]  *mulsi3_extended\n</code></pre> <p>\u8fd9\u4e00\u4e2a insn \u4e0e mulsi3_extended \u76f8\u5339\u914d\uff0c\u64cd\u4f5c\u6570 0 \u5339\u914d\u5230\u4e86 <code>(reg/i:DI 10 a0)</code>\uff0c\u64cd\u4f5c\u6570 1 \u5339\u914d\u5230\u4e86 <code>(reg:SI 10 a0 [77])</code>\uff0c\u64cd\u4f5c\u6570 2 \u5339\u914d\u5230\u4e86 <code>(reg:SI 11 a1 [78])</code>\uff0c\u6240\u4ee5\u6700\u540e\u751f\u6210\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u628a\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u540d\u5b57\u586b\u8fdb\u53bb\uff0c\u5c31\u5f97\u5230\u4e86 <code>mulw a0,a0,a1</code>\u3002</p> <p>\u6709\u65f6\u5019\uff0c\u6bd4\u8f83\u590d\u6742\u7684\u6307\u4ee4\u4f1a\u5728 C \u4ee3\u7801\u4e2d\u751f\u6210\uff0c\u4f8b\u5982 <code>simple_return</code>\uff1a</p> <pre><code>(define_insn \"simple_return\"\n  [(simple_return)]\n  \"\"\n{\n  return riscv_output_return ();\n}\n  [(set_attr \"type\" \"jump\")\n   (set_attr \"mode\" \"none\")])\n</code></pre> <p>\u90a3\u4e48\u5339\u914d\u4ee5\u540e\uff0c\u4f1a\u8c03\u7528 <code>riscv_output_return</code> \u51fd\u6570\uff1a</p> <pre><code>const char *\nriscv_output_return ()\n{\n  if (cfun-&gt;machine-&gt;naked_p)\n    return \"\";\n\n  return \"ret\";\n}\n</code></pre> <p>\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u9664\u4e86 naked \u51fd\u6570\u4ee5\u5916\uff0c\u90fd\u662f\u4e00\u6761 ret \u6307\u4ee4\u3002</p>"},{"location":"software/gcc/#_3","title":"\u539f\u7406\u63a2\u7a76","text":"<p>\u5177\u4f53\u5730\uff0c\u5728 <code>riscv.md</code> \u4e2d\u5199\u6a21\u5f0f\u5339\u914d\u7684\u65f6\u5019\uff1a</p> <pre><code>  [(set (match_operand:DI              0 \"register_operand\" \"=r\")\n    (sign_extend:DI\n        (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n             (match_operand:SI 2 \"register_operand\" \" r\"))))]\n</code></pre> <p>\u4f1a\u5728 <code>gcc/insn-recog.cc</code> \u751f\u6210\u5982\u4e0b\u7684\u4ee3\u7801\uff1a</p> <pre><code>// x1 = (set (reg/i:DI 10 a0)\n//           (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n//                   (reg:SI 11 a1 [78]))))\nstatic int\nrecog_7 (rtx x1 ATTRIBUTE_UNUSED,\n    rtx_insn *insn ATTRIBUTE_UNUSED,\n    int *pnum_clobbers ATTRIBUTE_UNUSED)\n{\n  rtx * const operands ATTRIBUTE_UNUSED = &amp;recog_data.operand[0];\n  rtx x2, x3, x4, x5, x6;\n  int res ATTRIBUTE_UNUSED;\n  // x2 = (reg/i:DI 10 a0)\n  x2 = XEXP (x1, 0);\n  // operands[0] = (reg/i:DI 10 a0)\n  operands[0] = x2;\n  // x3 = (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n  //                      (reg:SI 11 a1 [78])))\n  x3 = XEXP (x1, 1);\n  // x4 = (mult:SI (reg:SI 10 a0 [77])\n  //               (reg:SI 11 a1 [78]))\n  x4 = XEXP (x3, 0);\n  switch (GET_CODE (x4))\n    {\n    case MULT:\n      if (pattern14 (x3, E_SImode) != 0\n          || !\n#line 869 \"/home/jiegec/ct-ng/.build/riscv64-unknown-linux-gnu/src/gcc/gcc/config/riscv/riscv.md\"\n(TARGET_MUL &amp;&amp; TARGET_64BIT))\n        return -1;\n      return 21; /* *mulsi3_extended */\n    }\n}\n</code></pre> <pre><code>// x1 = (sign_extend:DI (mult:SI (reg:SI 10 a0 [77])\n//                      (reg:SI 11 a1 [78])))\nstatic int\npattern14 (rtx x1, machine_mode i1)\n{\n  rtx * const operands ATTRIBUTE_UNUSED = &amp;recog_data.operand[0];\n  rtx x2, x3, x4;\n  int res ATTRIBUTE_UNUSED;\n  // x2 = (mult:SI (reg:SI 10 a0 [77])\n  //               (reg:SI 11 a1 [78]))\n  // operands[0] = (reg/i:DI 10 a0)\n  x2 = XEXP (x1, 0);\n  if (GET_MODE (x2) != E_SImode\n      || !register_operand (operands[0], E_DImode)\n      || GET_MODE (x1) != E_DImode)\n    return -1;\n  // x3 = (reg:SI 10 a0 [77])\n  x3 = XEXP (x2, 0);\n  // operands[1] = (reg:SI 10 a0 [77])\n  operands[1] = x3;\n  if (!register_operand (operands[1], E_SImode))\n    return -1;\n  // x4 = (reg:SI 11 a1 [78])\n  x4 = XEXP (x2, 1);\n  // operands[2] = (reg:SI 11 a1 [78])\n  operands[2] = x4;\n  if (!register_operand (operands[2], i1))\n    return -1;\n  return 0;\n}\n</code></pre> <p>\u4ee3\u7801\u4e2d\u7528\u6ce8\u91ca\u6807\u6ce8\u4e86\u6bcf\u4e00\u6b65\u5339\u914d\u7684\u5185\u5bb9\uff0c\u53ef\u89c1\u4ee3\u7801\u5728\u5339\u914d\u7684\u540c\u65f6\uff0c\u4e5f\u628a\u64cd\u4f5c\u6570\u4fdd\u5b58\u4e86\u4e0b\u6765\u3002</p>"},{"location":"software/gcc/#_4","title":"\u6307\u4ee4\u62c6\u5206","text":"<p>\u6709\u4e9b\u65f6\u5019\uff0cRTL \u5c42\u6b21\u4e0a\u7684\u6307\u4ee4\u53ef\u80fd\u5bf9\u5e94\u591a\u6761\u5b9e\u9645\u7684\u673a\u5668\u6307\u4ee4\u3002\u4f8b\u5982\u5728 32 \u4f4d target \u4e0a\uff0c\u62f7\u8d1d\u4e00\u4e2a 64 \u4f4d\u6574\u6570\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u628a\u4e00\u4e2a DI \u7c7b\u578b\u7684 move\uff0c\u62c6\u6210\u4e24\u4e2a SI \u7c7b\u578b\u7684 move\uff0c\u5206\u522b\u5904\u7406\u9ad8\u4f4d\u548c\u4f4e\u4f4d\u3002\u4e0b\u9762\u6765\u770b\u4e00\u4e2a rv32 \u7684\u4f8b\u5b50\uff1a</p> <pre><code>;; 64-bit modes for which we provide move patterns.\n(define_mode_iterator MOVE64 [DI DF])\n\n(define_split\n  [(set (match_operand:MOVE64 0 \"nonimmediate_operand\")\n    (match_operand:MOVE64 1 \"move_operand\"))]\n  \"reload_completed\n   &amp;&amp; riscv_split_64bit_move_p (operands[0], operands[1])\"\n  [(const_int 0)]\n{\n  riscv_split_doubleword_move (operands[0], operands[1]);\n  DONE;\n})\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u5339\u914d\u4ece\u4e00\u4e2a 64 \u4f4d\u6574\u6570\uff08DI\uff09\u6216\u6d6e\u70b9\u6570\uff08DF\uff09\u5230\u53e6\u4e00\u4e2a 64 \u4f4d\u6574\u6570\uff08DI\uff09\u6216\u6d6e\u70b9\u6570\uff08DF\uff09\u7684 set\uff0c\u4e5f\u5c31\u662f move \u64cd\u4f5c\u3002\u5339\u914d\u4e0a\u4ee5\u540e\uff0c\u5224\u65ad\u6761\u4ef6\uff1a</p> <pre><code>  \"reload_completed\n   &amp;&amp; riscv_split_64bit_move_p (operands[0], operands[1])\"\n</code></pre> <p>\u662f\u5426\u6210\u7acb\u3002\u8fd9\u91cc <code>reload_completed == true</code> \u8868\u793a\u5df2\u7ecf\u5b8c\u6210\u5bc4\u5b58\u5668\u5206\u914d\u3002</p> <p>\u5982\u679c\u6210\u7acb\uff0c\u5c31\u8ba4\u4e3a\u53ef\u4ee5\u62c6\u5206 64 \u4f4d\u7684 move \u4e3a\u4e24\u4e2a 32 \u4f4d\u7684 move\uff0c\u5c31\u751f\u6210\u4e0b\u5217 RTL\uff1a</p> <pre><code>  [(const_int 0)]\n</code></pre> <p>\u4f46\u662f\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u751f\u6210\u8fd9\u4e2a\uff0c\u800c\u662f\u8c03\u7528\u540e\u9762\u7684\u4ee3\u7801\u6765\u751f\u6210\u65b0\u7684 RTL \u4ee3\u7801\uff1a</p> <pre><code>{\n  riscv_split_doubleword_move (operands[0], operands[1]);\n  DONE;\n})\n</code></pre> <p>\u5b8c\u6574\u7684 <code>define_split</code> \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>(define-split\n  [insn-pattern]\n  \"condition\"\n  [new-insn-pattern-1\n   new-insn-pattern-2\n   ...]\n  \"preparation-statements\")\n</code></pre> <p>\u5ffd\u7565\u4e86\u53ef\u9009\u7684\u547d\u540d\u3002</p> <p>\u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u8fd9\u4e00\u6bb5\u662f\u5728 split \u4e4b\u524d\u7684 RTL \u4ee3\u7801\uff1a</p> <pre><code>(insn 6 3 13 (set (reg:DI 14 a4 [orig:72 _2 ] [72])\n        (mem/c:DI (plus:SI (reg/f:SI 8 s0)\n                (const_int -24 [0xffffffffffffffe8])) [1 a+0 S8 A64])) \"kb.c\":1:38 134 {*movdi_32bit}\n     (nil))\n</code></pre> <p>\u5b83\u505a\u7684\u4e8b\u60c5\u662f\uff0c\u4ece\u5185\u5b58\u5730\u5740 <code>$s0-24</code> \u8bfb\u53d6\u8bfb\u53d6 8 \u4e2a\u5b57\u8282\uff0c\u5199\u5165\u5230 a4 \u5bc4\u5b58\u5668\u5f53\u4e2d\uff0c\u7531\u4e8e RV32 \u5bc4\u5b58\u5668\u5bbd\u5ea6\u53ea\u6709 32 \u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u62c6\u6210\u4e24\u4e2a\u8bfb\u53d6\uff1a</p> <pre><code>Splitting with gen_split_14 (riscv.md:1510)\ndeleting insn with uid = 6.\ndeleting insn with uid = 6.\n\n(insn 30 3 31 (set (reg:SI 14 a4 [orig:72 _2 ] [72])\n        (mem/c:SI (plus:SI (reg/f:SI 8 s0)\n                (const_int -24 [0xffffffffffffffe8])) [1 a+0 S4 A64])) \"kb.c\":1:38 136 {*movsi_internal}\n     (nil))\n(insn 31 30 32 (set (reg:SI 15 a5 [ _2+4 ])\n        (mem/c:SI (plus:SI (reg/f:SI 8 s0)\n                (const_int -20 [0xffffffffffffffec])) [1 a+4 S4 A32])) \"kb.c\":1:38 136 {*movsi_internal}\n     (nil))\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c64 \u4f4d\u7684\u76ee\u7684\u5bc4\u5b58\u5668\u88ab\u62c6\u6210\u4e86\u4e24\u4e2a 32 \u4f4d\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u662f a4 \u548c a5\uff1b\u5185\u5b58\u8bfb\u53d6\u6307\u4ee4\u4e5f\u62c6\u5206\u6210\u4e86\u4e24\u4e2a SI \u7c7b\u578b\u7684\u8bfb\u53d6\uff0c\u6808\u4e0a\u7684\u504f\u79fb\u4e5f\u505a\u4e86\u76f8\u5e94\u7684\u8c03\u6574\u3002</p> <p>\u6709\u65f6\u5019\u8fd8\u53ef\u4ee5\u89c1\u5230 <code>define_insn_and_split</code>\uff1a</p> <pre><code>(define_insn_and_split\n  [insn-pattern]\n  \"condition\"\n  \"output-template\"\n  \"split-condition\"\n  [new-insn-pattern-1\n   new-insn-pattern-2\n   ...]\n  \"preparation-statements\"\n  [insn-attribute])\n</code></pre> <p>\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a <code>define_insn</code> \u52a0\u4e00\u4e2a <code>define_split</code>\uff0c\u4e8c\u8005\u7684 <code>insn-pattern</code> \u4e00\u81f4\uff1a</p> <pre><code>(define_insn\n  [insn-pattern]\n  \"condition\"\n  \"output-template\"\n  [insn-attribute])\n\n(define_split\n  [insn-pattern]\n  \"split-condition\"\n  [new-insn-pattern-1\n   new-insn-pattern-2\n   ...]\n  \"preparation-statements\")\n</code></pre>"},{"location":"software/tar/","title":"tar \u6587\u4ef6\u683c\u5f0f","text":"<p>\u63a8\u8350\u9605\u8bfb\uff1atar.5\u3002</p>"},{"location":"software/tar/#ustar","title":"ustar","text":"<p>tar \u7684\u6587\u4ef6\u683c\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u7cfb\u5217\u7684 File Entry\uff0c\u6700\u540e\u662f\u4e24\u4e2a 512 \u5b57\u8282\u7684\u5168 0\uff0c\u8868\u793a\u7ed3\u675f\u3002\u6bcf\u4e2a File Entry \u7531\u5934\u90e8\u548c\u6570\u636e\u7ec4\u6210\uff0c\u5934\u90e8\u7684\u683c\u5f0f\u662f\uff1a</p> <pre><code>/* Source: https://www.gnu.org/software/tar/manual/html_node/Standard.html */\n/* tar Header Block, from POSIX 1003.1-1990.  */\n\n/* POSIX header.  */\n\nstruct posix_header\n{                              /* byte offset */\n  char name[100];               /*   0 */\n  char mode[8];                 /* 100 */\n  char uid[8];                  /* 108 */\n  char gid[8];                  /* 116 */\n  char size[12];                /* 124 */\n  char mtime[12];               /* 136 */\n  char chksum[8];               /* 148 */\n  char typeflag;                /* 156 */\n  char linkname[100];           /* 157 */\n  char magic[6];                /* 257 */\n  char version[2];              /* 263 */\n  char uname[32];               /* 265 */\n  char gname[32];               /* 297 */\n  char devmajor[8];             /* 329 */\n  char devminor[8];             /* 337 */\n  char prefix[155];             /* 345 */\n                                /* 500 */\n};\n</code></pre> <p>\u8fd9\u4e2a\u7248\u672c\u53eb\u505a ustar \u683c\u5f0f\uff08Unix Standard TAR\uff09\uff0c\u5728 POSIX.1-1988 \u6807\u51c6\u4e2d\u5b9a\u4e49\u3002\u6240\u4ee5 <code>magic</code> \u5b57\u6bb5\u7684\u5185\u5bb9\u5c31\u662f <code>ustar</code>\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5c31\u662f\u4e00\u7cfb\u5217\u7684 char \u6570\u7ec4\uff0c\u91cc\u9762\u7684\u5f88\u591a\u6570\u5b57\u5b57\u6bb5\uff0c\u4f8b\u5982 <code>mode</code>\uff0c<code>uid</code> \u548c <code>gid</code> \u7b49\uff0c\u90fd\u662f\u7528 ASCII \u7801\u5199\u7684\u3002\u7531\u4e8e\u5934\u90e8\u9700\u8981\u5bf9\u9f50\u5230 512 \u5b57\u8282\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u540e\u9762\u8fd8\u6709 12 \u5b57\u8282\u7684 padding\u3002</p> <p>\u5934\u90e8\u7684 512 \u5b57\u8282\u7ed3\u675f\u540e\uff0c\u7d27\u63a5\u7740\u5c31\u662f\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5185\u5bb9\u7684\u5927\u5c0f\u5728\u5934\u90e8\u7684 <code>size</code> \u5b57\u6bb5\u5df2\u7ecf\u4fdd\u5b58\uff0c\u628a\u5b57\u7b26\u4e32\u5f53\u6210 8 \u8fdb\u5236\u6570\u8f6c\u6362\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6587\u4ef6\u957f\u5ea6\u3002\u6587\u4ef6\u4e5f\u8981\u5bf9\u9f50\u5230 512 \u5b57\u8282\uff0c\u6240\u4ee5\u6587\u4ef6\u540e\u9762\u8fd8\u6709\u82e5\u5e72\u4e2a 0 \u4f5c\u4e3a padding\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0ctar \u6587\u4ef6\u7684\u683c\u5f0f\u5c31\u662f\uff1a<code>(\u5934\u90e8\uff0c\u6570\u636e)*\u7ed3\u5c3e</code>\u3002\u6bcf\u4e00\u4e2a\u90e8\u5206\u90fd\u5bf9\u9f50\u5230 512 \u5b57\u8282\u3002</p>"},{"location":"software/tar/#pax","title":"pax","text":"<p>\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u4e0a\u9762\u7684 <code>posix_header</code> \u91cc\u9762\uff0c<code>name</code> \u5b57\u6bb5\u53ea\u6709 100 \u4e2a\u5b57\u8282\uff0c<code>prefix</code> \u5b57\u6bb5\u4e5f\u53ea\u6709 155 \u4e2a\u5b57\u8282\uff0c\u610f\u5473\u7740\u5982\u679c\u6587\u4ef6\u8def\u5f84\u7279\u522b\u957f\uff0c\u90a3\u5c31\u653e\u4e0d\u4e0b\uff0c\u53ea\u80fd\u622a\u65ad\u4e86\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cPOSIX.1-2001 \u6807\u51c6\u7ed9 tar \u5f15\u5165\u4e86 PAX \u6269\u5c55\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0cPAX \u6269\u5c55\u4ee5\u7279\u6b8a\u7684\u6587\u4ef6\u5f62\u5f0f\u5b58\u5728\u3002\u4f8b\u5982\u8981\u8bb0\u5f55\u4e00\u4e2a\u540d\u5b57\u5f88\u957f\u7684\u6587\u4ef6 <code>'X'*101</code>\uff0c\u5b9e\u9645\u4e0a tar \u4e2d\u8bb0\u5f55\u4e86\u4e24\u4e2a\u6587\u4ef6\uff1a</p> <ol> <li>PaxHeader\uff1a\u7279\u6b8a\u7684 PAX \u6587\u4ef6\uff0c\u4e0d\u5bf9\u5e94\u5b9e\u9645\u7684\u6587\u4ef6</li> <li><code>'X'*100</code>\uff1a\u6587\u4ef6\u540d\u88ab\u622a\u65ad\uff0c\u5176\u4ed6\u4e0d\u53d8</li> </ol> <p>\u8fd9\u4e2a PaxHeader \u5728\u89e3\u538b\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u751f\u6210\u5b9e\u9645\u7684\u6587\u4ef6\u3002\u5b83\u7684\u5185\u5bb9\u662f\u4e00\u4e9b\u952e\u503c\u5bf9\uff0c\u4f8b\u5982\uff1a</p> <pre><code>123 path=XXXXXXXXXXXXXXXXX...\n</code></pre> <p>\u683c\u5f0f\u662f\uff1a<code>length key=value\\n</code>\uff0c\u7136\u540e\u53ef\u4ee5\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u952e\u503c\u5bf9\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3 <code>posix_header</code> \u91cc\u540d\u5b57\u957f\u5ea6\u9650\u5236\u7684\u95ee\u9898\uff1a\u53ea\u8981\u5728 PaxHeader \u6587\u4ef6\u91cc\uff0c\u4fdd\u5b58\u4e00\u4e2a key \u4e3a path\uff0cvalue \u4e3a\u5b9e\u9645\u540d\u5b57\u7684\u4fe1\u606f\u3002\u90a3\u4e48 tar \u5728\u770b\u5230 PaxHeader \u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e0b\u6765\uff0c\u518d\u9047\u5230\u4e0b\u4e00\u4e2a\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u5c31\u77e5\u9053\u8981\u7528 PaxHeader \u4e2d\u7684 path\uff0c\u800c\u4e0d\u662f\u4fdd\u5b58\u5728 <code>posix_header</code> \u4e2d\u7684 <code>name[100]</code>\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0cPaxHeader \u8fd8\u53ef\u4ee5\u5b58\u5f88\u591a\u5176\u4ed6 <code>posix_header</code> \u4e2d\u6ca1\u6709\u7684\u4fe1\u606f\uff0c\u4f8b\u5982 <code>atime</code>\u3001<code>ctime</code> \u548c <code>uid</code> \u7b49\u7b49\u3002\u5b8c\u6574\u5217\u8868\u53ef\u4ee5\u53c2\u8003 Extended header keywords\u3002</p> <p>\u5b8c\u6574\u7684 pax \u6269\u5c55\u6587\u6863\uff0c\u53ef\u4ee5\u53c2\u8003 pax interchange format\u3002</p>"},{"location":"software/tar/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>\u538b\u7f29\uff1a<code>tar cvzf archive.tar.gz &lt;sources&gt;</code></p> <p>\u89e3\u538b\uff1a<code>tar xvf archive.tar.gz</code></p> <p>\u5217\u51fa\u538b\u7f29\u5305\u5185\u5bb9\uff1a<code>tar tvf archive.tar.gz</code></p>"},{"location":"software/tar/#tar_1","title":"\u5176\u4ed6 tar \u683c\u5f0f","text":"<p>\u9664\u4e86\u4e0a\u9762\u7684 ustar \u548c pax \u683c\u5f0f\uff0c\u8fd8\u6709\u66f4\u65e9\u671f\u7684 v7 tar \u683c\u5f0f\uff0c\u53d6\u540d v7 \u662f\u56e0\u4e3a\u6700\u65e9\u51fa\u73b0\u5728 1979 \u5e74 Version 7 Unix \u4e2d\u3002</p> <p>\u6b64\u5916\uff0cGNU tar \u4e5f\u66fe\u7ecf\u81ea\u5b9a\u4e49\u4e86 tar \u683c\u5f0f\uff0cmagic \u4ece\u4e0a\u9762\u7684 <code>ustar</code> \u53d8\u6210\u4e86 <code>ustar</code>\uff08\u6ce8\u610f\u591a\u4e86\u4e24\u4e2a\u7a7a\u683c\uff09\uff1a</p> <pre><code>/* Source: https://www.gnu.org/software/tar/manual/html_node/Standard.html */\n/* The old GNU format header conflicts with POSIX format in such a way that\n   POSIX archives may fool old GNU tar's, and POSIX tar's might well be\n   fooled by old GNU tar archives.  An old GNU format header uses the space\n   used by the prefix field in a POSIX header, and cumulates information\n   normally found in a GNU extra header.  With an old GNU tar header, we\n   never see any POSIX header nor GNU extra header.  Supplementary sparse\n   headers are allowed, however.  */\n\nstruct oldgnu_header\n{                              /* byte offset */\n  char unused_pad1[345];        /*   0 */\n  char atime[12];               /* 345 Incr. archive: atime of the file */\n  char ctime[12];               /* 357 Incr. archive: ctime of the file */\n  char offset[12];              /* 369 Multivolume archive: the offset of\n                                   the start of this volume */\n  char longnames[4];            /* 381 Not used */\n  char unused_pad2;             /* 385 */\n  struct sparse sp[SPARSES_IN_OLDGNU_HEADER];\n                                /* 386 */\n  char isextended;              /* 482 Sparse file: Extension sparse header\n                                   follows */\n  char realsize[12];            /* 483 Sparse file: Real size*/\n                                /* 495 */\n};\n\n/* OLDGNU_MAGIC uses both magic and version fields, which are contiguous.\n   Found in an archive, it indicates an old GNU header format, which will be\n   hopefully become obsolescent.  With OLDGNU_MAGIC, uname and gname are\n   valid, though the header is not truly POSIX conforming.  */\n#define OLDGNU_MAGIC \"ustar  \"  /* 7 chars and a null */\n</code></pre> <p>\u4ee5\u53ca schily tar\uff0c\u7b80\u79f0 star\u3002\u867d\u7136\u5386\u53f2\u4e0a\u51fa\u73b0\u4e86\u4e0d\u517c\u5bb9\u7684 tar \u683c\u5f0f\uff0c\u76ee\u524d\u57fa\u672c\u7edf\u4e00\u5230\u4e86 pax \u683c\u5f0f\u4e0a\u3002</p>"},{"location":"software/transformer/","title":"Transformer","text":"<p>\u4e0b\u9762\u53ea\u8003\u8651 Decoder-only \u7684 Transformer\u3002</p>"},{"location":"software/transformer/#_1","title":"\u8ba1\u7b97\u8fc7\u7a0b","text":"<p>\u8f93\u5165 $n$ \u4e2a Token\uff0c\u901a\u8fc7 Text \u548c Position Embedding \u540e\uff0c\u5f97\u5230\u4e00\u4e2a\u5c3a\u5bf8\u4e3a $(n, d_{model})$ \u7684\u77e9\u9635\uff0c\u5176\u4e2d $d_{model}$ \u4e3a Embedding \u5411\u91cf\u7684\u957f\u5ea6\u3002</p> <p>\u63a5\u7740\uff0c\u7ecf\u8fc7 $n_{layer}$ \u4e2a\u5c42\uff0c\u6bcf\u5c42\u4e2d\u8981\u8fdb\u884c\u5982\u4e0b\u7684\u8ba1\u7b97\uff1a</p> <ol> <li>\u4ece\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa $(n, d_{model})$\uff0c\u6bcf\u4e2a head \u4e0a\u4e58\u4ee5\u4e09\u4e2a $(d_{model}, d_{head})$ \u7684\u77e9\u9635\uff0c\u5f97\u5230 Q\uff0cK \u548c V\uff0c\u5c3a\u5bf8\u4e3a $(n, d_{head})$</li> <li>\u6309\u7167 attention \u6fc0\u6d3b\u516c\u5f0f\uff0c\u5f97\u5230 Z\uff0c\u5c3a\u5bf8\u4e3a $(n, d_{head})$</li> <li>\u628a\u6240\u6709 head \u7684 Z \u77e9\u9635\u62fc\u8d77\u6765\uff0c\u4fdd\u8bc1 $d_{model} = n_{head} * d_{head}$\uff0c\u90a3\u4e48\u6240\u6709\u7684 Z \u62fc\u8d77\u6765\u4ee5\u540e\u5f97\u5230\u7684\u77e9\u9635\u7684\u5c3a\u5bf8\u4e3a $(n, d_{head})$</li> <li>\u4e58\u4ee5\u4e00\u4e2a\u5c3a\u5bf8\u4e3a $(d_{model}, d_{model})$ \u7684 Projection \u77e9\u9635\uff0c\u5f97\u5230\u65b0\u77e9\u9635 $(n, d_{model})$</li> <li>\u7ecf\u8fc7\u4e00\u4e2a MLP\uff0cMLP \u7b2c\u4e00\u5c42\u662f $(d_{model}, 4d_{model})$\uff0c\u7b2c\u4e8c\u5c42\u662f $(4d_{model}, d_{model})$</li> <li>MLP \u8f93\u51fa\u7684\u77e9\u9635\u5c3a\u5bf8\u4e3a $(n, d_{model})$</li> </ol>"},{"location":"software/transformer/#kv-cache","title":"KV cache","text":"<p>\u5728\u63a8\u7406\u7684\u65f6\u5019\uff0c\u662f\u5728\u5df2\u6709\u7684 context \u7684\u57fa\u7840\u4e0a\uff0c\u751f\u6210\u4e00\u4e2a\u65b0 token\uff0c\u518d\u628a token \u52a0\u5230 context\uff0c\u7ee7\u7eed\u751f\u6210\u4e0b\u4e00\u4e2a token\u3002\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u7531\u4e8e Attention \u4f1a\u5e26 Mask\uff0c\u65e7 token \u4e0d\u4f1a\u4f9d\u8d56\u65b0 token\uff0c\u56e0\u6b64\u65e7 token \u7684\u90e8\u5206\u4e0d\u4f1a\u53d8\uff0c\u53ef\u4ee5\u53ea\u8003\u8651\u65b0\u5f15\u5165\u7684 token \u5e26\u6765\u7684\u53d8\u5316\u3002</p> <p>\u90a3\u4e48\uff0c\u8ba1\u7b97\u65b0\u7684 token \u7684 Q K V \u4ee5\u540e\uff0c\u5728\u8fdb\u884c Attention \u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u5148\u524d\u7684 token \u7684 K \u548c V \u90e8\u5206\u4e0d\u53d8\uff0c\u5148\u524d token \u7684 Q \u4e0d\u5f71\u54cd\u5f53\u524d token \u7684\u7ed3\u679c\u3002\u56e0\u6b64\u53ef\u4ee5\u628a\u4e4b\u524d token \u7684 K \u548c V \u4fdd\u5b58\u4e0b\u6765\uff0c\u4e0d\u7528\u91cd\u65b0\u8ba1\u7b97\uff0c\u8fd9\u5c31\u662f KV cache\u3002</p>"},{"location":"software/transformer/#_2","title":"\u53c2\u6570\u91cf\u548c\u6d6e\u70b9\u8ba1\u7b97\u91cf","text":"<p>\u8003\u8651\u6bcf\u5c42\u7684\u53c2\u6570\u91cf\u548c\u6d6e\u70b9\u8ba1\u7b97\u91cf\uff1a</p> <ol> <li>\u8ba1\u7b97 Q\uff0cK \u548c V\uff1a\u53c2\u6570\u662f\u4e09\u4e2a $(d_{model}, d_{model})$ \u7684\u77e9\u9635\uff0c\u8ba1\u7b97\u91cf\u662f $2 * 3 * n * d_{model}^2$</li> <li>\u4e58\u4ee5 Projection \u77e9\u9635\uff1a\u53c2\u6570\u662f $(d_{model}, d_{model})$ \u7684\u77e9\u9635\uff0c\u8ba1\u7b97\u91cf\u662f $2 * n * d_{model}^2$</li> <li>\u4e58\u4ee5 MLP \u7b2c\u4e00\u5c42\uff1a\u53c2\u6570\u662f $(d_{model}, 4*d_{model})$ \u7684\u77e9\u9635\uff0c\u8ba1\u7b97\u91cf\u662f $2 * 4 * n * d_{model}^2$</li> <li>\u4e58\u4ee5 MLP \u7b2c\u4e8c\u5c42\uff1a\u53c2\u6570\u662f $(4*d_{model}, d_{model})$ \u7684\u77e9\u9635\uff0c\u8ba1\u7b97\u91cf\u662f $2 * 4 * n * d_{model}^2$</li> </ol> <p>\u5176\u4f59\u90e8\u5206\u7684\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002</p> <p>\u56e0\u6b64\u603b\u53c2\u6570\u91cf\uff08\u4e0d\u8003\u8651 Embedding\uff09\u4e3a\uff1a</p> <p>$$ 12n_{layer}d_{model}^2 $$</p> <p>\u6bcf\u4e2a Token \u7684\u6d6e\u70b9\u8ba1\u7b97\u91cf\u4e3a\uff1a</p> <p>$$ 24n_{layer}d_{model}^2 \\mathrm{FLOP} $$</p>"},{"location":"software/transformer/#_3","title":"\u53c2\u8003\u6587\u732e","text":"<ul> <li>Speeding up the GPT - KV cache</li> <li>\u6700\u65b0\u6700\u5168 GPT-3 \u6a21\u578b\u7f51\u7edc\u7ed3\u6784\u8be6\u7ec6\u89e3\u6790</li> <li>Transformer Inference Arithmetic</li> <li>Understanding FLOPs-per-token estimates from OpenAI\u2019s scaling laws</li> <li>\u62c6 Transformer \u7cfb\u5217\u4e8c\uff1aMulti-Head Attention \u673a\u5236\u8be6\u89e3</li> <li>Past_key_values - why not past_key_values_queries?</li> </ul>"},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/category/blog/","title":"Blog","text":""}]}